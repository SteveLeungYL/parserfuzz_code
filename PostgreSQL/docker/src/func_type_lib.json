[
  {
    "enable": true,
    "func_name": "num_nonnulls",
    "func_type": "FUNCCOMP",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEANY",
        "ret_type": "TYPEINT"
      },
      {
        "arg_type_0": "TYPEANY",
        "arg_type_1": "TYPEANY",
        "ret_type": "TYPEINT"
      },
      {
        "arg_type_0": "TYPEANY",
        "arg_type_1": "TYPEANY",
        "arg_type_2": "TYPEANY",
        "ret_type": "TYPEINT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "num_nulls",
    "func_type": "FUNCCOMP",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEANY",
        "ret_type": "TYPEINT"
      },
      {
        "arg_type_0": "TYPEANY",
        "arg_type_1": "TYPEANY",
        "ret_type": "TYPEINT"
      },
      {
        "arg_type_0": "TYPEANY",
        "arg_type_1": "TYPEANY",
        "arg_type_2": "TYPEANY",
        "ret_type": "TYPEINT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "abs",
    "func_type": "FUNCMATH",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPENUMERIC",
        "ret_type": "TYPENUMERIC"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "cbrt",
    "func_type": "FUNCMATH",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEFLOAT",
        "ret_type": "TYPEFLOAT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "ceil",
    "func_type": "FUNCMATH",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPENUMERIC",
        "ret_type": "TYPENUMERIC"
      },
      {
        "arg_type_0": "TYPEFLOAT",
        "ret_type": "TYPEFLOAT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "ceiling",
    "func_type": "FUNCMATH",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPENUMERIC",
        "ret_type": "TYPENUMERIC"
      },
      {
        "arg_type_0": "TYPEFLOAT",
        "ret_type": "TYPEFLOAT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "degrees",
    "func_type": "FUNCMATH",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEFLOAT",
        "ret_type": "TYPEFLOAT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "div",
    "func_type": "FUNCMATH",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPENUMERIC",
        "arg_type_1": "TYPENUMERIC",
        "ret_type": "TYPENUMERIC"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "exp",
    "func_type": "FUNCMATH",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPENUMERIC",
        "ret_type": "TYPENUMERIC"
      },
      {
        "arg_type_0": "TYPEFLOAT",
        "ret_type": "TYPEFLOAT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "factorial",
    "func_type": "FUNCMATH",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEBIGINT",
        "ret_type": "TYPENUMERIC"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "floor",
    "func_type": "FUNCMATH",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPENUMERIC",
        "ret_type": "TYPENUMERIC"
      },
      {
        "arg_type_0": "TYPEFLOAT",
        "ret_type": "TYPEFLOAT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "gcd",
    "func_type": "FUNCMATH",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPENUMERIC",
        "arg_type_1": "TYPENUMERIC",
        "ret_type": "TYPENUMERIC"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "lcm",
    "func_type": "FUNCMATH",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPENUMERIC",
        "arg_type_1": "TYPENUMERIC",
        "ret_type": "TYPENUMERIC"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "ln",
    "func_type": "FUNCMATH",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPENUMERIC",
        "ret_type": "TYPENUMERIC"
      },
      {
        "arg_type_0": "TYPEFLOAT",
        "ret_type": "TYPEFLOAT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "log",
    "func_type": "FUNCMATH",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPENUMERIC",
        "ret_type": "TYPENUMERIC"
      },
      {
        "arg_type_0": "TYPEFLOAT",
        "ret_type": "TYPEFLOAT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "log10",
    "func_type": "FUNCMATH",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPENUMERIC",
        "ret_type": "TYPENUMERIC"
      },
      {
        "arg_type_0": "TYPEFLOAT",
        "ret_type": "TYPEFLOAT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "log",
    "func_type": "FUNCMATH",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPENUMERIC",
        "arg_type_1": "TYPENUMERIC",
        "ret_type": "TYPENUMERIC"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "min_scale",
    "func_type": "FUNCMATH",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPENUMERIC",
        "ret_type": "TYPEINT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "mod",
    "func_type": "FUNCMATH",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPENUMERIC",
        "arg_type_1": "TYPENUMERIC",
        "ret_type": "TYPENUMERIC"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "pi",
    "func_type": "FUNCMATH",
    "is_type_matched": true,
    "params": [
      {
        "ret_type": "TYPEFLOAT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "power",
    "func_type": "FUNCMATH",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPENUMERIC",
        "arg_type_1": "TYPENUMERIC",
        "ret_type": "TYPENUMERIC"
      },
      {
        "arg_type_0": "TYPEFLOAT",
        "arg_type_1": "TYPEFLOAT",
        "ret_type": "TYPEFLOAT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "radians",
    "func_type": "FUNCMATH",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEFLOAT",
        "ret_type": "TYPEFLOAT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "round",
    "func_type": "FUNCMATH",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPENUMERIC",
        "ret_type": "TYPENUMERIC"
      },
      {
        "arg_type_0": "TYPEFLOAT",
        "ret_type": "TYPEFLOAT"
      },
      {
        "arg_type_0": "TYPENUMERIC",
        "arg_type_1": "TYPEINT",
        "arg_type_1_range": {
          "min": 0,
          "max": 10
        },
        "ret_type": "TYPENUMERIC"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "scale",
    "func_type": "FUNCMATH",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPENUMERIC",
        "ret_type": "TYPEINT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "sign",
    "func_type": "FUNCMATH",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPENUMERIC",
        "ret_type": "TYPENUMERIC"
      },
      {
        "arg_type_0": "TYPEFLOAT",
        "ret_type": "TYPEFLOAT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "sqrt",
    "func_type": "FUNCMATH",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPENUMERIC",
        "ret_type": "TYPENUMERIC"
      },
      {
        "arg_type_0": "TYPEFLOAT",
        "ret_type": "TYPEFLOAT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "trim_scale",
    "func_type": "FUNCMATH",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPENUMERIC",
        "ret_type": "TYPENUMERIC"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "trunc",
    "func_type": "FUNCMATH",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPENUMERIC",
        "ret_type": "TYPENUMERIC"
      },
      {
        "arg_type_0": "TYPEFLOAT",
        "ret_type": "TYPEFLOAT"
      },
      {
        "arg_type_0": "TYPENUMERIC",
        "arg_type_1": "TYPEINT",
        "arg_type_1_range": {
          "min": 0,
          "max": 10
        },
        "ret_type": "TYPENUMERIC"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "width_bucket",
    "func_type": "FUNCMATH",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPENUMERIC",
        "arg_type_1": "TYPENUMERIC",
        "arg_type_2": "TYPENUMERIC",
        "arg_type_3": "TYPEINT",
        "ret_type": "TYPEINT"
      },
      {
        "arg_type_0": "TYPENUMERIC",
        "arg_type_1": "TYPENUMERIC",
        "arg_type_2": "TYPENUMERIC",
        "arg_type_3": "TYPEINT",
        "ret_type": "TYPEINT"
      },
      {
        "arg_type_0": "TYPEANY",
        "arg_type_1": "ARRAYTYPEANY",
        "ret_type": "TYPEINT"
      }
    ]
  },

  {
    "enable": false,
    "func_name": "random",
    "func_type": "FUNCMATH",
    "is_type_matched": true,
    "params": [
      {
        "ret_type": "TYPEFLOAT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "setseed",
    "func_type": "FUNCMATH",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEFLOAT",
        "ret_type": "TYPEVOID"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "acos",
    "func_type": "FUNCMATH",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEFLOAT",
        "ret_type": "TYPEFLOAT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "acosd",
    "func_type": "FUNCMATH",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEFLOAT",
        "ret_type": "TYPEFLOAT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "asin",
    "func_type": "FUNCMATH",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEFLOAT",
        "ret_type": "TYPEFLOAT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "asind",
    "func_type": "FUNCMATH",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEFLOAT",
        "ret_type": "TYPEFLOAT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "atan",
    "func_type": "FUNCMATH",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEFLOAT",
        "ret_type": "TYPEFLOAT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "atand",
    "func_type": "FUNCMATH",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEFLOAT",
        "ret_type": "TYPEFLOAT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "atand2",
    "func_type": "FUNCMATH",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEFLOAT",
        "arg_type_1": "TYPEFLOAT",
        "ret_type": "TYPEFLOAT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "atand2d",
    "func_type": "FUNCMATH",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEFLOAT",
        "arg_type_1": "TYPEFLOAT",
        "ret_type": "TYPEFLOAT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "cos",
    "func_type": "FUNCMATH",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEFLOAT",
        "ret_type": "TYPEFLOAT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "cosd",
    "func_type": "FUNCMATH",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEFLOAT",
        "ret_type": "TYPEFLOAT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "cot",
    "func_type": "FUNCMATH",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEFLOAT",
        "ret_type": "TYPEFLOAT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "cotd",
    "func_type": "FUNCMATH",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEFLOAT",
        "ret_type": "TYPEFLOAT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "sin",
    "func_type": "FUNCMATH",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEFLOAT",
        "ret_type": "TYPEFLOAT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "sind",
    "func_type": "FUNCMATH",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEFLOAT",
        "ret_type": "TYPEFLOAT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "tan",
    "func_type": "FUNCMATH",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEFLOAT",
        "ret_type": "TYPEFLOAT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "tand",
    "func_type": "FUNCMATH",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEFLOAT",
        "ret_type": "TYPEFLOAT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "sinh",
    "func_type": "FUNCMATH",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEFLOAT",
        "ret_type": "TYPEFLOAT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "cosh",
    "func_type": "FUNCMATH",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEFLOAT",
        "ret_type": "TYPEFLOAT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "tanh",
    "func_type": "FUNCMATH",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEFLOAT",
        "ret_type": "TYPEFLOAT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "asinh",
    "func_type": "FUNCMATH",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEFLOAT",
        "ret_type": "TYPEFLOAT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "acosh",
    "func_type": "FUNCMATH",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEFLOAT",
        "ret_type": "TYPEFLOAT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "atanh",
    "func_type": "FUNCMATH",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEFLOAT",
        "ret_type": "TYPEFLOAT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "bit_length",
    "func_type": "FUNCSTR",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPETEXT",
        "ret_type": "TYPEINT"
      },
      {
        "arg_type_0": "TYPEBYTEA",
        "ret_type": "TYPEINT"
      },
      {
        "arg_type_0": "TYPEBIT",
        "ret_type": "TYPEINT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "char_length",
    "func_type": "FUNCSTR",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPETEXT",
        "ret_type": "TYPEINT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "character_length",
    "func_type": "FUNCSTR",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPETEXT",
        "ret_type": "TYPEINT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "lower",
    "func_type": "FUNCSTR",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPETEXT",
        "ret_type": "TYPETEXT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "normalize",
    "func_type": "FUNCSTR",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPETEXT",
        "arg_type_1": "TYPEENUM",
        "arg_type_1_enum": [
          "NFC",
          "NFD",
          "NFKC",
          "NFKD"
        ],
        "ret_type": "TYPETEXT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "octet_length",
    "func_type": "FUNCSTR",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPETEXT",
        "ret_type": "TYPEINT"
      },
      {
        "arg_type_0": "TYPECHAR",
        "ret_type": "TYPEINT"
      },
      {
        "arg_type_0": "TYPEBYTEA",
        "ret_type": "TYPEINT"
      },
      {
        "arg_type_0": "TYPEBIT",
        "ret_type": "TYPEINT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "overlay",
    "func_type": "FUNCSTR",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPETEXT",
        "arg_type_1": "TYPEENUM",
        "arg_type_1_enum": [
          "PLACING"
        ],
        "arg_type_2": "TYPETEXT",
        "arg_type_3": "TYPEENUM",
        "arg_type_3_enum": [
          "FROM"
        ],
        "arg_type_4": "TYPEINT",
        "arg_type_4_range": {
          "min": 0,
          "max": 10
        },
        "ret_type": "TYPETEXT"
      },
      {
        "arg_type_0": "TYPETEXT",
        "arg_type_1": "TYPEENUM",
        "arg_type_1_enum": [
          " PLACING "
        ],
        "arg_type_2": "TYPETEXT",
        "arg_type_3": "TYPEENUM",
        "arg_type_3_enum": [
          " FROM "
        ],
        "arg_type_4": "TYPEINT",
        "arg_type_4_range": {
          "min": 0,
          "max": 10
        },
        "arg_type_5": "TYPEENUM",
        "arg_type_5_enum": [
          " FOR "
        ],
        "arg_type_6": "TYPEINT",
        "arg_type_6_range": {
          "min": 0,
          "max": 10
        },
        "ret_type": "TYPETEXT"
      },
      {
        "arg_type_0": "TYPEBIT",
        "arg_type_1": "TYPEENUM",
        "arg_type_1_enum": [
          " PLACING "
        ],
        "arg_type_2": "TYPEBIT",
        "arg_type_3": "TYPEENUM",
        "arg_type_3_enum": [
          " FROM "
        ],
        "arg_type_4": "TYPEINT",
        "arg_type_4_range": {
          "min": 0,
          "max": 10
        },
        "arg_type_5": "TYPEENUM",
        "arg_type_5_enum": [
          " FOR "
        ],
        "arg_type_6": "TYPEINT",
        "arg_type_6_range": {
          "min": 0,
          "max": 10
        },
        "ret_type": "TYPEBIT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "position",
    "func_type": "FUNCSTR",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPETEXT",
        "arg_type_1": "TYPEENUM",
        "arg_type_1_enum": [
          " IN "
        ],
        "arg_type_2": "TYPETEXT",
        "ret_type": "TYPEINT"
      },
      {
        "arg_type_0": "TYPEBYTEA",
        "arg_type_1": "TYPEENUM",
        "arg_type_1_enum": [
          " IN "
        ],
        "arg_type_2": "TYPEBYTEA",
        "ret_type": "TYPEINT"
      },
      {
        "arg_type_0": "TYPEBIT",
        "arg_type_1": "TYPEENUM",
        "arg_type_1_enum": [
          " IN "
        ],
        "arg_type_2": "TYPEBIT",
        "ret_type": "TYPEINT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "substring",
    "func_type": "FUNCSTR",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPETEXT",
        "arg_type_1": "TYPEENUM",
        "arg_type_1_ENUM": [
          " FROM "
        ],
        "arg_type_2": "TYPEINT",
        "arg_type_2_range": {
          "min": 0,
          "max": 10
        },
        "ret_type": "TYPETEXT"
      },
      {
        "arg_type_0": "TYPETEXT",
        "arg_type_1": "TYPEENUM",
        "arg_type_1_ENUM": [
          " FOR "
        ],
        "arg_type_2": "TYPEINT",
        "arg_type_2_range": {
          "min": 0,
          "max": 10
        },
        "ret_type": "TYPEINT"
      },
      {
        "arg_type_0": "TYPETEXT",
        "arg_type_1": "TYPEENUM",
        "arg_type_1_ENUM": [
          " FROM "
        ],
        "arg_type_2": "TYPEINT",
        "arg_type_2_range": {
          "min": 0,
          "max": 10
        },
        "arg_type_3": "TYPEENUM",
        "arg_type_3_ENUM": [
          " FOR "
        ],
        "arg_type_4": "TYPEINT",
        "arg_type_4_range": {
          "min": 0,
          "max": 10
        },
        "ret_type": "TYPETEXT"
      },
      {
        "arg_type_0": "TYPETEXT",
        "arg_type_1": "TYPEENUM",
        "arg_type_1_ENUM": [
          " FROM "
        ],
        "arg_type_2": "TYPETEXT",
        "ret_type": "TYPEINT"
      },
      {
        "arg_type_0": "TYPETEXT",
        "arg_type_1": "TYPEENUM",
        "arg_type_1_ENUM": [
          " SIMILAR "
        ],
        "arg_type_2": "TYPETEXT",
        "arg_type_3": "TYPEENUM",
        "arg_type_3_ENUM": [
          " ESCAPE "
        ],
        "arg_type_4": "TYPETEXT",
        "ret_type": "TYPEINT"
      },
      {
        "arg_type_0": "TYPETEXT",
        "arg_type_1": "TYPEENUM",
        "arg_type_1_ENUM": [
          " FROM "
        ],
        "arg_type_2": "TYPETEXT",
        "arg_type_3": "TYPEENUM",
        "arg_type_3_ENUM": [
          " FOR "
        ],
        "arg_type_4": "TYPETEXT",
        "ret_type": "TYPEBYTEA"
      },
      {
        "arg_type_0": "TYPEBYTEA",
        "arg_type_1": "TYPEENUM",
        "arg_type_1_ENUM": [
          " FROM "
        ],
        "arg_type_2": "TYPEINT",
        "arg_type_3": "TYPEENUM",
        "arg_type_3_ENUM": [
          " FOR "
        ],
        "arg_type_4": "TYPEINT",
        "ret_type": "TYPEINT"
      },
      {
        "arg_type_0": "TYPEBIT",
        "arg_type_1": "TYPEENUM",
        "arg_type_1_ENUM": [
          " FROM "
        ],
        "arg_type_2": "TYPEINT",
        "arg_type_3": "TYPEENUM",
        "arg_type_3_ENUM": [
          " FOR "
        ],
        "arg_type_4": "TYPEINT",
        "ret_type": "TYPEBIT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "trim",
    "func_type": "FUNCSTR",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEENUM",
        "arg_type_0_enum": [
          " LEADING ",
          " TRAILING ",
          " BOTH "
        ],

        "arg_type_1": "TYPETEXT",
        "arg_type_2": "TYPEENUM",
        "arg_type_2_enum": [
          " FROM "
        ],
        "arg_type_3": "TYPETEXT",
        "ret_type": "TYPETEXT"
      },
      {
        "arg_type_0": "TYPEENUM",
        "arg_type_0_enum": [
          " LEADING ",
          " TRAILING ",
          " BOTH "
        ],

        "arg_type_1": "TYPETEXT",
        "arg_type_2": "TYPEENUM",
        "arg_type_2_enum": [
          ", "
        ],
        "arg_type_3": "TYPETEXT",
        "ret_type": "TYPETEXT"
      },
      {
        "arg_type_0": "TYPEENUM",
        "arg_type_0_enum": [
          " LEADING ",
          " TRAILING ",
          " BOTH "
        ],

        "arg_type_1": "TYPEBYTEA",
        "arg_type_2": "TYPEENUM",
        "arg_type_2_enum": [
          " FROM "
        ],
        "arg_type_3": "TYPEBYTEA",
        "ret_type": "TYPEBYTEA"
      },
      {
        "arg_type_0": "TYPEENUM",
        "arg_type_0_enum": [
          " LEADING ",
          " TRAILING ",
          " BOTH "
        ],

        "arg_type_1": "TYPEBYTEA",
        "arg_type_2": "TYPEENUM",
        "arg_type_2_enum": [
          ", "
        ],
        "arg_type_3": "TYPEBYTEA",
        "ret_type": "TYPETEXT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "upper",
    "func_type": "FUNCSTR",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPETEXT",
        "ret_type": "TYPETEXT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "ascii",
    "func_type": "FUNCSTR",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPETEXT",
        "ret_type": "TYPEINT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "btrim",
    "func_type": "FUNCSTR",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPETEXT",
        "arg_type_1": "TYPETEXT",
        "ret_type": "TYPETEXT"
      },
      {
        "arg_type_0": "TYPEBYTEA",
        "arg_type_1": "TYPEBYTEA",
        "ret_type": "TYPEBYTEA"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "chr",
    "func_type": "FUNCSTR",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEINT",
        "ret_type": "TYPETEXT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "concat",
    "func_type": "FUNCSTR",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEANY",
        "arg_type_1": "TYPEANY",
        "ret_type": "TYPETEXT"
      },
      {
        "arg_type_0": "TYPEANY",
        "arg_type_1": "TYPEANY",
        "arg_type_2": "TYPEANY",
        "ret_type": "TYPETEXT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "concatws",
    "func_type": "FUNCSTR",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPETEXT",
        "arg_type_1": "TYPEANY",
        "arg_type_2": "TYPEANY",
        "ret_type": "TYPETEXT"
      },
      {
        "arg_type_0": "TYPETEXT",
        "arg_type_1": "TYPEANY",
        "arg_type_2": "TYPEANY",
        "arg_type_3": "TYPEANY",
        "ret_type": "TYPETEXT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "format",
    "func_type": "FUNCSTR",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPETEXT",
        "arg_type_1": "TYPETEXT",
        "ret_type": "TYPETEXT"
      },
      {
        "arg_type_0": "TYPETEXT",
        "arg_type_1": "TYPETEXT",
        "arg_type_2": "TYPETEXT",
        "ret_type": "TYPETEXT"
      },
      {
        "arg_type_0": "TYPETEXT",
        "arg_type_1": "TYPETEXT",
        "arg_type_2": "TYPETEXT",
        "arg_type_3": "TYPETEXT",
        "ret_type": "TYPETEXT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "initcap",
    "func_type": "FUNCSTR",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPETEXT",
        "ret_type": "TYPETEXT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "left",
    "func_type": "FUNCSTR",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPETEXT",
        "arg_type_1": "TYPEINT",
        "arg_type_1_range": {
          "min": 0,
          "max": 10
        },
        "ret_type": "TYPETEXT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "length",
    "func_type": "FUNCSTR",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPETEXT",
        "ret_type": "TYPEINT"
      },
      {
        "arg_type_0": "TYPEBIT",
        "ret_type": "TYPEINT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "lpad",
    "func_type": "FUNCSTR",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPETEXT",
        "arg_type_1": "TYPEINT",
        "arg_type_1_range": {
          "min": 0,
          "max": 10
        },
        "arg_type_2": "TYPETEXT",
        "ret_type": "TYPETEXT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "ltrim",
    "func_type": "FUNCSTR",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPETEXT",
        "arg_type_1": "TYPETEXT",
        "ret_type": "TYPETEXT"
      },
      {
        "arg_type_0": "TYPEBYTEA",
        "arg_type_1": "TYPEBYTEA",
        "ret_type": "TYPEBYTEA"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "md5",
    "func_type": "FUNCSTR",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPETEXT",
        "ret_type": "TYPETEXT"
      }
    ]
  },

  {
    "enable": false,
    "func_name": "parse_ident",
    "func_type": "FUNCSTR",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPETEXT",
        "ret_type": "ARRAYTYPETEXT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "pg_client_encoding",
    "func_type": "FUNCSTR",
    "is_type_matched": true,
    "params": [
      {
        "ret_type": "TYPETEXT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "quote_ident",
    "func_type": "FUNCSTR",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPETEXT",
        "ret_type": "TYPETEXT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "quote_literal",
    "func_type": "FUNCSTR",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPETEXT",
        "ret_type": "TYPETEXT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "quote_nullable",
    "func_type": "FUNCSTR",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPETEXT",
        "ret_type": "TYPETEXT"
      },
      {
        "arg_type_0": "TYPEANY",
        "ret_type": "TYPETEXT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "regexp_count",
    "func_type": "FUNCSTR",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPETEXT",
        "arg_type_1": "TYPETEXT",
        "arg_type_2": "TYPEINT",
        "arg_type_2_range": {
          "min": 0,
          "max": 10
        },
        "ret_type": "TYPETEXT"
      }
    ]
  },

  {
    "enable": false,
    "func_name": "regexp_instr",
    "func_type": "FUNCSTR",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPETEXT",
        "arg_type_1": "TYPETEXT",
        "arg_type_2": "TYPEINT",
        "arg_type_2_range": {
          "min": 0,
          "max": 10
        },
        "arg_type_3": "TYPEINT",
        "arg_type_3_range": {
          "min": 0,
          "max": 10
        },
        "arg_type_4": "TYPEINT",
        "arg_type_4_range": {
          "min": 0,
          "max": 10
        },
        "arg_type_5": "TYPEENUM",
        "arg_type_5_ENUM": [
          " 'i' "
        ],
        "arg_type_6": "TYPEINT",
        "arg_type_6_range": {
          "min": 0,
          "max": 10
        },
        "ret_type": "TYPEINT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "regexp_like",
    "func_type": "FUNCSTR",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPETEXT",
        "arg_type_1": "TYPETEXT",
        "arg_type_2": "TYPEENUM",
        "arg_type_2_ENUM": [
          " 'i' "
        ],
        "ret_type": "TYPEBOOL"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "regexp_match",
    "func_type": "FUNCSTR",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPETEXT",
        "arg_type_1": "TYPETEXT",
        "ret_type": "ARRAYTYPETEXT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "regexp_matches",
    "func_type": "FUNCSTR",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPETEXT",
        "arg_type_1": "TYPETEXT",
        "ret_type": "ARRAYTYPETEXT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "regexp_replace",
    "func_type": "FUNCSTR",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPETEXT",
        "arg_type_1": "TYPETEXT",
        "ret_type": "TYPETEXT"
      },
      {
        "arg_type_0": "TYPETEXT",
        "arg_type_1": "TYPETEXT",
        "arg_type_2": "TYPETEXT",
        "arg_type_3": "TYPEINT",
        "arg_type_3_range": {
          "min": 0,
          "max": 10
        },
        "arg_type_4": "TYPEINT",
        "arg_type_4_range": {
          "min": 0,
          "max": 10
        },
        "ret_type": "TYPETEXT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "regexp_split_to_array",
    "func_type": "FUNCSTR",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPETEXT",
        "arg_type_1": "TYPETEXT",
        "ret_type": "ARRAYTYPETEXT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "regexp_split_to_table",
    "func_type": "FUNCSTR",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPETEXT",
        "arg_type_1": "TYPETEXT",
        "ret_type": "ARRAYTYPETEXT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "regexp_substr",
    "func_type": "FUNCSTR",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPETEXT",
        "arg_type_1": "TYPETEXT",
        "arg_type_2": "TYPEINT",
        "arg_type_2_range": {
          "min": 0,
          "max": 10
        },
        "arg_type_3": "TYPEINT",
        "arg_type_3_range": {
          "min": 0,
          "max": 10
        },
        "arg_type_4": "TYPEENUM",
        "arg_type_4_ENUM": [
          " 'i' "
        ],
        "arg_type_5": "TYPEINT",
        "arg_type_5_range": {
          "min": 0,
          "max": 3
        },
        "ret_type": "ARRAYTYPETEXT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "repeat",
    "func_type": "FUNCSTR",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPETEXT",
        "arg_type_1": "TYPEINT",
        "arg_type_1_range": {
          "min": 0,
          "max": 10
        },
        "ret_type": "TYPETEXT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "replace",
    "func_type": "FUNCSTR",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPETEXT",
        "arg_type_1": "TYPETEXT",
        "arg_type_2": "TYPETEXT",
        "ret_type": "TYPETEXT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "reverse",
    "func_type": "FUNCSTR",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPETEXT",
        "ret_type": "TYPETEXT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "right",
    "func_type": "FUNCSTR",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPETEXT",
        "arg_type_1": "TYPEINT",
        "arg_type_1_range": {
          "min": 0,
          "max": 10
        },
        "ret_type": "TYPETEXT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "rpad",
    "func_type": "FUNCSTR",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPETEXT",
        "arg_type_1": "TYPEINT",
        "arg_type_1_range": {
          "min": 0,
          "max": 10
        },
        "arg_type_2": "TYPETEXT",
        "ret_type": "TYPETEXT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "rtrim",
    "func_type": "FUNCSTR",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPETEXT",
        "arg_type_1": "TYPETEXT",
        "ret_type": "TYPETEXT"
      },
      {
        "arg_type_0": "TYPEBYTEA",
        "arg_type_1": "TYPEBYTEA",
        "ret_type": "TYPEBYTEA"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "split_part",
    "func_type": "FUNCSTR",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPETEXT",
        "arg_type_1": "TYPETEXT",
        "arg_type_2": "TYPEINT",
        "arg_type_2_range": {
          "min": 0,
          "max": 10
        },
        "ret_type": "TYPETEXT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "starts_with",
    "func_type": "FUNCSTR",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPETEXT",
        "arg_type_1": "TYPETEXT",
        "ret_type": "TYPEBOOL"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "string_to_array",
    "func_type": "FUNCSTR",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPETEXT",
        "arg_type_1": "TYPETEXT",
        "ret_type": "ARRAYTYPETEXT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "string_to_table",
    "func_type": "FUNCSTR",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPETEXT",
        "arg_type_1": "TYPETEXT",
        "ret_type": "ARRAYTYPETEXT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "strpos",
    "func_type": "FUNCSTR",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPETEXT",
        "arg_type_1": "TYPETEXT",
        "ret_type": "TYPEINT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "substr",
    "func_type": "FUNCSTR",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPETEXT",
        "arg_type_1": "TYPEINT",
        "arg_type_1_range": {
          "min": 0,
          "max": 10
        },
        "ret_type": "TYPETEXT"
      },
      {
        "arg_type_0": "TYPETEXT",
        "arg_type_1": "TYPEINT",
        "arg_type_1_range": {
          "min": 0,
          "max": 10
        },
        "arg_type_2": "TYPEINT",
        "arg_type_2_range": {
          "min": 0,
          "max": 10
        },
        "ret_type": "TYPETEXT"
      },
      {
        "arg_type_0": "TYPEBYTEA",
        "arg_type_1": "TYPEINT",
        "arg_type_1_range": {
          "min": 0,
          "max": 10
        },
        "arg_type_2": "TYPEINT",
        "arg_type_2_range": {
          "min": 0,
          "max": 10
        },
        "ret_type": "TYPEBYTEA"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "to_ascii",
    "func_type": "FUNCSTR",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPETEXT",
        "ret_type": "TYPETEXT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "to_hex",
    "func_type": "FUNCSTR",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEINT",
        "ret_type": "TYPETEXT"
      },
      {
        "arg_type_0": "TYPEBIGINT",
        "ret_type": "TYPETEXT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "translate",
    "func_type": "FUNCSTR",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPETEXT",
        "arg_type_1": "TYPETEXT",
        "arg_type_2": "TYPETEXT",
        "ret_type": "TYPETEXT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "unistr",
    "func_type": "FUNCSTR",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPETEXT",
        "ret_type": "TYPETEXT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "bit_count",
    "func_type": "FUNCBINSTR",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEBYTEA",
        "ret_type": "TYPEBIGINT"
      },
      {
        "arg_type_0": "TYPEBIT",
        "ret_type": "TYPEBIGINT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "get_bit",
    "func_type": "FUNCBINSTR",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEBYTEA",
        "arg_type_1": "TYPEINT",
        "arg_type_1_range": {
          "min": 0,
          "max": 10
        },
        "ret_type": "TYPEINT"
      },
      {
        "arg_type_0": "TYPEBIT",
        "arg_type_1": "TYPEINT",
        "arg_type_1_range": {
          "min": 0,
          "max": 10
        },
        "ret_type": "TYPEINT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "get_byte",
    "func_type": "FUNCBINSTR",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEBYTEA",
        "arg_type_1": "TYPEINT",
        "arg_type_1_range": {
          "min": 0,
          "max": 10
        },
        "ret_type": "TYPEINT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "length",
    "func_type": "FUNCBINSTR",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEBYTEA",
        "ret_type": "TYPEINT"
      },
      {
        "arg_type_0": "TYPEBYTEA",
        "arg_type_1": "TYPEENUM",
        "arg_type_1_enum": [
          "'UTF8'"
        ],
        "ret_type": "TYPEINT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "md5",
    "func_type": "FUNCBINSTR",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEBYTEA",
        "ret_type": "TYPETEXT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "set_bit",
    "func_type": "FUNCBINSTR",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEBYTEA",
        "arg_type_1": "TYPEBIGINT",
        "arg_type_2": "TYPEINT",
        "arg_type_2_range": {
          "min": 0,
          "max": 10
        },
        "ret_type": "TYPEBYTEA"
      },
      {
        "arg_type_0": "TYPEBIT",
        "arg_type_1": "TYPEINT",
        "arg_type_1_range": {
          "min": 0,
          "max": 10
        },
        "arg_type_2": "TYPEINT",
        "arg_type_2_range": {
          "min": 0,
          "max": 10
        },
        "ret_type": "TYPEBIT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "set_byte",
    "func_type": "FUNCBINSTR",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEBYTEA",
        "arg_type_1": "TYPEINT",
        "arg_type_1_range": {
          "min": 0,
          "max": 10
        },
        "arg_type_2": "TYPEBIGINT",
        "ret_type": "TYPEBYTEA"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "sha224",
    "func_type": "FUNCBINSTR",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEBYTEA",
        "ret_type": "TYPEBYTEA"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "sha256",
    "func_type": "FUNCBINSTR",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEBYTEA",
        "ret_type": "TYPEBYTEA"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "sha384",
    "func_type": "FUNCBINSTR",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEBYTEA",
        "ret_type": "TYPEBYTEA"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "sha512",
    "func_type": "FUNCBINSTR",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEBYTEA",
        "ret_type": "TYPEBYTEA"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "convert",
    "func_type": "FUNCBINSTR",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEBYTEA",
        "arg_type_1": "TYPEENUM",
        "arg_type_1_enum": [
          "UTF8",
          "LATIN1"
        ],
        "arg_type_2": "TYPEENUM",
        "arg_type_2_enum": [
          "UTF8",
          "LATIN1"
        ],
        "ret_type": "TYPEBYTEA"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "convert_from",
    "func_type": "FUNCBINSTR",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEBYTEA",
        "arg_type_1": "TYPEENUM",
        "arg_type_1_enum": [
          "UTF8",
          "LATIN1"
        ],
        "ret_type": "TYPEBYTEA"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "convert_to",
    "func_type": "FUNCBINSTR",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEBYTEA",
        "arg_type_1": "TYPEENUM",
        "arg_type_1_enum": [
          "UTF8",
          "LATIN1"
        ],
        "ret_type": "TYPEBYTEA"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "encode",
    "func_type": "FUNCBINSTR",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEBYTEA",
        "arg_type_1": "TYPEENUM",
        "arg_type_1_enum": [
          "'base64'",
          "'escape'",
          "'hex'"
        ],
        "ret_type": "TYPETEXT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "decode",
    "func_type": "FUNCBINSTR",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPETEXT",
        "arg_type_1": "TYPEENUM",
        "arg_type_1_enum": [
          "'base64'",
          "'escape'",
          "'hex'"
        ],
        "ret_type": "TYPEBYTEA"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "to_char",
    "func_type": "FUNCDATATYPE",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPETIMESTAMP",
        "arg_type_1": "TYPETEXT",
        "ret_type": "TYPETEXT"
      },
      {
        "arg_type_0": "TYPETIMESTAMPTZ",
        "arg_type_1": "TYPETEXT",
        "ret_type": "TYPETEXT"
      },
      {
        "arg_type_0": "TYPEINTEVAL",
        "arg_type_1": "TYPETEXT",
        "ret_type": "TYPETEXT"
      },
      {
        "arg_type_0": "TYPENUMERIC",
        "arg_type_1": "TYPETEXT",
        "ret_type": "TYPETEXT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "to_date",
    "func_type": "FUNCDATATYPE",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEDATE",
        "arg_type_1": "TYPEENUM",
        "arg_type_1_enum": [
          "YYYY-DD-Mon"
        ],
        "ret_type": "TYPEDATE"
      }
    ]
  },

  {
    "enable": false,
    "func_name": "to_number",
    "func_type": "FUNCDATATYPE",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPETEXT",
        "arg_type_1": "TYPETEXT",
        "ret_type": "TYPENUMERIC"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "to_timestamp",
    "func_type": "FUNCDATATYPE",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEDATE",
        "arg_type_1": "TYPEENUM",
        "arg_type_1_enum": [
          "YYYY-DD-Mon"
        ],
        "ret_type": "TYPETIMESTAMP"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "age",
    "func_type": "FUNCDATETIME",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPETIMESTAMP",
        "arg_type_1": "TYPETIMESTAMP",
        "ret_type": "TYPEINTERVAL"
      },
      {
        "arg_type_0": "TYPETIMESTAMP",
        "ret_type": "TYPEINTERVAL"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "clock_timestamp",
    "func_type": "FUNCDATETIME",
    "is_type_matched": true,
    "params": [
      {
        "ret_type": "TYPEINTERVAL"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "current_time",
    "func_type": "FUNCDATETIME",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEINT",
        "arg_type_0_range": {
          "min": 0,
          "max": 10
        },
        "ret_type": "TYPETIMETZ"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "current_timestamp",
    "func_type": "FUNCDATETIME",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEINT",
        "arg_type_0_range": {
          "min": 0,
          "max": 10
        },
        "ret_type": "TYPETIMESTAMPTZ"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "date_bin",
    "func_type": "FUNCDATETIME",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEINTERVAL",
        "arg_type_1": "TYPETIMESTAMP",
        "arg_type_2": "TYPETIMESTAMP",
        "ret_type": "TYPETIMESTAMP"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "date_part",
    "func_type": "FUNCDATETIME",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPETEXT",
        "arg_type_1": "TYPETIMESTAMP",
        "ret_type": "TYPEFLOAT"
      },
      {
        "arg_type_0": "TYPETEXT",
        "arg_type_1": "TYPEINTERVAL",
        "ret_type": "TYPEFLOAT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "date_trunc",
    "func_type": "FUNCDATETIME",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPETEXT",
        "arg_type_1": "TYPETIMESTAMP",
        "ret_type": "TYPETIMESTAMP"
      },
      {
        "arg_type_0": "TYPETEXT",
        "arg_type_1": "TYPETIMESTAMPTZ",
        "ret_type": "TYPETIMESTAMPTZ"
      },
      {
        "arg_type_0": "TYPETEXT",
        "arg_type_1": "TYPEINTERVAL",
        "ret_type": "TYPEINTERVAL"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "extract",
    "func_type": "FUNCDATETIME",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEENUM",
        "arg_type_0_enum": [
          "century",
          "day",
          "decade",
          "dow",
          "doy",
          "epoch",
          "hour",
          "isodow",
          "isoyear",
          "julian",
          "microseconds",
          "millennium",
          "milliseconds",
          "minute",
          "month",
          "quarter",
          "second",
          "timezone",
          "timezone_hour",
          "timezone_minute",
          "week",
          "year"
        ],
        "arg_type_1": "TYPEENUM",
        "arg_type_1_enum": [
          " FROM TIMESTAMP "
        ],
        "arg_type_2": "TYPTETIMESTAMP",
        "ret_type": "TYPENUMERIC"
      },
      {
        "arg_type_0": "TYPEENUM",
        "arg_type_0_enum": [
          "century",
          "day",
          "decade",
          "dow",
          "doy",
          "epoch",
          "hour",
          "isodow",
          "isoyear",
          "julian",
          "microseconds",
          "millennium",
          "milliseconds",
          "minute",
          "month",
          "quarter",
          "second",
          "timezone",
          "timezone_hour",
          "timezone_minute",
          "week",
          "year"
        ],
        "arg_type_1": "TYPEENUM",
        "arg_type_1_enum": [
          " FROM TIMESTAMP "
        ],
        "arg_type_2": "TYPEINTERVAL",
        "ret_type": "TYPENUMERIC"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "isfinite",
    "func_type": "FUNCDATETIME",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEDATE",
        "ret_type": "TYPEBOOL"
      },
      {
        "arg_type_0": "TYPEINTERVAL",
        "ret_type": "TYPEBOOL"
      },
      {
        "arg_type_0": "TYPETIMESTAMP",
        "ret_type": "TYPEBOOL"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "justify_days",
    "func_type": "FUNCDATETIME",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEINTERVAL",
        "ret_type": "TYPEINTERVAL"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "justify_hours",
    "func_type": "FUNCDATETIME",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEINTERVAL",
        "ret_type": "TYPEINTERVAL"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "justify_interval",
    "func_type": "FUNCDATETIME",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEINTERVAL",
        "ret_type": "TYPEINTERVAL"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "localtime",
    "func_type": "FUNCDATETIME",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEINT",
        "arg_type_0_range": {
          "min": 0,
          "max": 10
        },
        "ret_type": "TYPETIME"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "localtimestamp",
    "func_type": "FUNCDATETIME",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEINT",
        "arg_type_0_range": {
          "min": 0,
          "max": 10
        },
        "ret_type": "TYPETIMESTAMP"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "make_date",
    "func_type": "FUNCDATETIME",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEINT",
        "arg_type_0_range": {
          "min": 0,
          "max": 4000
        },
        "arg_type_1": "TYPEINT",
        "arg_type_1_range": {
          "min": 1,
          "max": 12
        },
        "arg_type_2": "TYPEINT",
        "arg_type_2_range": {
          "min": 1,
          "max": 31
        },
        "ret_type": "TYPEDATE"
      }
    ]
  },

  {
    "enable": false,
    "func_name": "make_interval",
    "func_type": "FUNCDATETIME",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEINT",
        "arg_type_0_range": {
          "min": 0,
          "max": 4000
        },
        "arg_type_1": "TYPEINT",
        "arg_type_1_range": {
          "min": 1,
          "max": 12
        },
        "arg_type_2": "TYPEINT",
        "arg_type_2_range": {
          "min": 1,
          "max": 31
        },
        "ret_type": "TYPEINTERVAL"
      }
    ]
  },

  {
    "enable": false,
    "func_name": "make_time",
    "func_type": "FUNCDATETIME",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEINT",
        "arg_type_0_range": {
          "min": 0,
          "max": 4000
        },
        "arg_type_1": "TYPEINT",
        "arg_type_1_range": {
          "min": 0,
          "max": 59
        },
        "arg_type_2": "TYPEFLOAT",
        "arg_type_2_range": {
          "min": 0.01,
          "max": 59.99
        },
        "ret_type": "TYPETIME"
      }
    ]
  },

  {
    "enable": false,
    "func_name": "make_timestamp",
    "func_type": "FUNCDATETIME",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEINT",
        "arg_type_0_range": {
          "min": 0,
          "max": 4000
        },
        "arg_type_1": "TYPEINT",
        "arg_type_1_range": {
          "min": 1,
          "max": 12
        },
        "arg_type_2": "TYPEINT",
        "arg_type_2_range": {
          "min": 1,
          "max": 31
        },
        "arg_type_3": "TYPEINT",
        "arg_type_3_range": {
          "min": 0,
          "max": 23
        },
        "arg_type_4": "TYPEINT",
        "arg_type_4_range": {
          "min": 0,
          "max": 59
        },
        "arg_type_5": "TYPEFLOAT",
        "arg_type_5_range": {
          "min": 0.01,
          "max": 59.99
        },
        "ret_type": "TYPETIMESTAMP"
      }
    ]
  },

  {
    "enable": false,
    "func_name": "make_timestamptz",
    "func_type": "FUNCDATETIME",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEINT",
        "arg_type_0_range": {
          "min": 0,
          "max": 4000
        },
        "arg_type_1": "TYPEINT",
        "arg_type_1_range": {
          "min": 1,
          "max": 12
        },
        "arg_type_2": "TYPEINT",
        "arg_type_2_range": {
          "min": 1,
          "max": 31
        },
        "arg_type_3": "TYPEINT",
        "arg_type_3_range": {
          "min": 0,
          "max": 23
        },
        "arg_type_4": "TYPEINT",
        "arg_type_4_range": {
          "min": 0,
          "max": 59
        },
        "arg_type_5": "TYPEFLOAT",
        "arg_type_5_range": {
          "min": 0.01,
          "max": 59.99
        },
        "ret_type": "TYPETIMESTAMPTZ"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "now",
    "func_type": "FUNCDATETIME",
    "is_type_matched": true,
    "params": [
      {
        "ret_type": "TYPETIMESTAMPTZ"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "statement_timestamp",
    "func_type": "FUNCDATETIME",
    "is_type_matched": true,
    "params": [
      {
        "ret_type": "TYPETIMESTAMPTZ"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "timeofday",
    "func_type": "FUNCDATETIME",
    "is_type_matched": true,
    "params": [
      {
        "ret_type": "TYPETEXT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "transaction_timestamp",
    "func_type": "FUNCDATETIME",
    "is_type_matched": true,
    "params": [
      {
        "ret_type": "TYPETIMESTAMPTZ"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "to_timestamp",
    "func_type": "FUNCDATETIME",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEFLOAT",
        "ret_type": "TYPETIMESTAMP"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "abbrev",
    "func_type": "FUNCINET",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEINET",
        "ret_type": "TYPETEXT"
      },
      {
        "arg_type_0": "TYPECIDR",
        "ret_type": "TYPETEXT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "broadcast",
    "func_type": "FUNCINET",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEINET",
        "ret_type": "TYPEINET"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "family",
    "func_type": "FUNCINET",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEINET",
        "ret_type": "TYPEINT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "host",
    "func_type": "FUNCINET",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEINET",
        "ret_type": "TYPETEXT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "hostmask",
    "func_type": "FUNCINET",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEINET",
        "ret_type": "TYPEINET"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "inet_merge",
    "func_type": "FUNCINET",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEINET",
        "arg_type_1": "TYPEINET",
        "ret_type": "TYPECIDR"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "inet_same_family",
    "func_type": "FUNCINET",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEINET",
        "arg_type_1": "TYPEINET",
        "ret_type": "TYPEBOOL"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "masklen",
    "func_type": "FUNCINET",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEINET",
        "ret_type": "TYPEINT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "netmask",
    "func_type": "FUNCINET",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEINET",
        "ret_type": "TYPEINET"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "network",
    "func_type": "FUNCINET",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEINET",
        "ret_type": "TYPECIDR"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "set_masklen",
    "func_type": "FUNCINET",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEINET",
        "arg_type_1": "TYPEINT",
        "ret_type": "TYPEINET"
      },
      {
        "arg_type_0": "TYPECIDR",
        "arg_type_1": "TYPEINT",
        "ret_type": "TYPECIDR"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "text",
    "func_type": "FUNCINET",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEINET",
        "ret_type": "TYPETEXT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "trunc",
    "func_type": "FUNCINET",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEMACADDR",
        "ret_type": "TYPEMACADDR"
      },
      {
        "arg_type_0": "TYPEMACADDR8",
        "ret_type": "TYPEMACADDR8"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "macaddr8_set7bit",
    "func_type": "FUNCINET",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEMACADDR8",
        "ret_type": "TYPEMACADDR8"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "gen_random_uuid",
    "func_type": "FUNCUUID",
    "is_type_matched": true,
    "params": [
      {
        "ret_type": "TYPEUUID"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "to_json",
    "func_type": "FUNCJSON",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEANY",
        "ret_type": "TYPEJSON"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "to_jsonb",
    "func_type": "FUNCJSON",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEANY",
        "ret_type": "TYPEJSONB"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "array_to_json",
    "func_type": "FUNCJSON",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "ARRAYTYPEANY",
        "ret_type": "TYPEJSON"
      }
    ]
  },

  {
    "enable": false,
    "func_name": "row_to_json",
    "func_type": "FUNCJSON",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "ARRAYTYPEANY",
        "ret_type": "TYPEJSON"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "json_build_array",
    "func_type": "FUNCJSON",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEANY",
        "arg_type_1": "TYPEANY",
        "ret_type": "TYPEJSON"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "jsonb_build_array",
    "func_type": "FUNCJSON",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEANY",
        "arg_type_1": "TYPEANY",
        "ret_type": "TYPEJSONB"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "json_build_object",
    "func_type": "FUNCJSON",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEANY",
        "arg_type_1": "TYPEANY",
        "ret_type": "TYPEJSON"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "jsonb_build_object",
    "func_type": "FUNCJSON",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEANY",
        "arg_type_1": "TYPEANY",
        "ret_type": "TYPEJSONB"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "json_object",
    "func_type": "FUNCJSON",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEJSON",
        "ret_type": "TYPEJSON"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "jsonb_object",
    "func_type": "FUNCJSON",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEJSON",
        "ret_type": "TYPEJSONB"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "json_object",
    "func_type": "FUNCJSON",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPETEXT",
        "arg_type_1": "TYPETEXT",
        "ret_type": "TYPEJSON"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "jsonb_object",
    "func_type": "FUNCJSON",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPETEXT",
        "arg_type_1": "TYPETEXT",
        "ret_type": "TYPEJSONB"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "json_array_length",
    "func_type": "FUNCJSON",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEJSON",
        "ret_type": "TYPEINT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "jsonb_array_length",
    "func_type": "FUNCJSON",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEJSONB",
        "ret_type": "TYPEINT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "json_strip_nulls",
    "func_type": "FUNCJSON",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEJSON",
        "ret_type": "TYPEJSON"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "jsonb_strip_nulls",
    "func_type": "FUNCJSON",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEJSONB",
        "ret_type": "TYPEJSONB"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "jsonb_path_exists",
    "func_type": "FUNCJSON",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEJSONB",
        "arg_type_1": "TYPEJSONB",
        "ret_type": "TYPEBOOL"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "jsonb_path_match",
    "func_type": "FUNCJSON",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEJSONB",
        "arg_type_1": "TYPEJSONB",
        "ret_type": "TYPEBOOL"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "jsonb_path_query",
    "func_type": "FUNCJSON",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEJSONB",
        "arg_type_1": "TYPEJSONB",
        "ret_type": "TYPEJSONB"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "jsonb_path_query_array",
    "func_type": "FUNCJSON",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEJSONB",
        "arg_type_1": "TYPEJSONB",
        "ret_type": "TYPEJSONB"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "jsonb_path_query_first",
    "func_type": "FUNCJSON",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEJSONB",
        "arg_type_1": "TYPEJSONB",
        "ret_type": "TYPEJSONB"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "jsonb_pretty",
    "func_type": "FUNCJSON",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEJSONB",
        "ret_type": "TYPETEXT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "json_typeof",
    "func_type": "FUNCJSON",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEJSON",
        "ret_type": "TYPETEXT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "jsonb_typeof",
    "func_type": "FUNCJSON",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEJSONB",
        "ret_type": "TYPETEXT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "nextval",
    "func_type": "FUNCSEQ",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEIDENT",
        "ret_type": "TYPEBIGINT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "setval",
    "func_type": "FUNCSEQ",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEIDENT",
        "arg_type_0": "TYPEBIGINT",
        "ret_type": "TYPEBIGINT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "currval",
    "func_type": "FUNCSEQ",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEIDENT",
        "ret_type": "TYPEBIGINT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "lastval",
    "func_type": "FUNCSEQ",
    "is_type_matched": true,
    "params": [
      {
        "ret_type": "TYPEBIGINT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "array_append",
    "func_type": "FUNCARRAY",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "ARRAYTYPEANY",
        "arg_type_1": "TYPEANY",
        "ret_type": "ARRAYTYPEANY"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "array_cat",
    "func_type": "FUNCARRAY",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "ARRAYTYPEANY",
        "arg_type_1": "ARRAYTYPEANY",
        "ret_type": "ARRAYTYPEANY"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "array_dims",
    "func_type": "FUNCARRAY",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "ARRAYTYPEANY",
        "ret_type": "TYPETEXT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "array_fill",
    "func_type": "FUNCARRAY",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEANY",
        "arg_type_1": "ARRAYTYPEINT",
        "ret_type": "ARRAYTYPEANY"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "array_length",
    "func_type": "FUNCARRAY",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEANY",
        "arg_type_1": "TYPEINT",
        "ret_type": "TYPEINT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "array_lower",
    "func_type": "FUNCARRAY",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEANY",
        "arg_type_1": "TYPEINT",
        "ret_type": "TYPEINT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "array_ndims",
    "func_type": "FUNCARRAY",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "ARRAYTYPEANY",
        "ret_type": "TYPEINT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "array_position",
    "func_type": "FUNCARRAY",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "ARRAYTYPEANY",
        "arg_type_1": "TYPEANY",
        "ret_type": "TYPEINT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "array_positions",
    "func_type": "FUNCARRAY",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "ARRAYTYPEANY",
        "arg_type_1": "TYPEANY",
        "ret_type": "ARRAYTYPEINT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "array_prepend",
    "func_type": "FUNCARRAY",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEANY",
        "arg_type_1": "ARRAYTYPEANY",
        "ret_type": "ARRAYTYPEANY"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "array_remove",
    "func_type": "FUNCARRAY",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "TYPEANY",
        "arg_type_1": "ARRAYTYPEANY",
        "ret_type": "ARRAYTYPEANY"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "array_replace",
    "func_type": "FUNCARRAY",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "ARRAYTYPEANY",
        "arg_type_1": "TYPEANY",
        "arg_type_2": "TYPEANY",
        "ret_type": "ARRAYTYPEANY"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "array_to_string",
    "func_type": "FUNCARRAY",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "ARRAYTYPEANY",
        "arg_type_1": "TYPETEXT",
        "ret_type": "TYPETEXT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "array_upper",
    "func_type": "FUNCARRAY",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "ARRAYTYPEANY",
        "arg_type_1": "TYPEINT",
        "ret_type": "TYPEINT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "cardinality",
    "func_type": "FUNCARRAY",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "ARRAYTYPEANY",
        "ret_type": "TYPEINT"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "trim_array",
    "func_type": "FUNCARRAY",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "ARRAYTYPEANY",
        "arg_type_1": "TYPEINT",
        "ret_type": "TYPETYPEANY"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "trim_array",
    "func_type": "FUNCARRAY",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "ARRAYTYPEANY",
        "arg_type_1": "TYPEINT",
        "ret_type": "TYPETYPEANY"
      }
    ]
  },


  {
    "enable": true,
    "func_name": "unnest",
    "func_type": "FUNCARRAY",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "ARRAYTYPEANY",
        "ret_type": "TYPEANY"
      },
      {
        "arg_type_0": "ARRAYTYPEANY",
        "arg_type_1": "ARRAYTYPEANY",
        "ret_type": "TYPEANY"
      },
      {
        "arg_type_0": "MULTIRANGETYPEANY",
        "ret_type": "RANGETYPEANY"
      }
    ]
  },


  {
    "enable": true,
    "func_name": "lower",
    "func_type": "FUNCRANGE",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "RANGETYPEANY",
        "ret_type": "TYPEANY"
      },
      {
        "arg_type_0": "MULTIRANGETYPEANY",
        "ret_type": "TYPEANY"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "upper",
    "func_type": "FUNCRANGE",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "RANGETYPEANY",
        "ret_type": "TYPEANY"
      },
      {
        "arg_type_0": "MULTIRANGETYPEANY",
        "ret_type": "TYPEANY"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "isempty",
    "func_type": "FUNCRANGE",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "RANGETYPEANY",
        "ret_type": "TYPEBOOL"
      },
      {
        "arg_type_0": "MULTIRANGETYPEANY",
        "ret_type": "TYPEANY"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "lower_inc",
    "func_type": "FUNCRANGE",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "RANGETYPEANY",
        "ret_type": "TYPEBOOL"
      },
      {
        "arg_type_0": "MULTIRANGETYPEANY",
        "ret_type": "TYPEANY"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "upper_inc",
    "func_type": "FUNCRANGE",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "RANGETYPEANY",
        "ret_type": "TYPEBOOL"
      },
      {
        "arg_type_0": "MULTIRANGETYPEANY",
        "ret_type": "TYPEANY"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "lower_inf",
    "func_type": "FUNCRANGE",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "RANGETYPEANY",
        "ret_type": "TYPEBOOL"
      },
      {
        "arg_type_0": "MULTIRANGETYPEANY",
        "ret_type": "TYPEANY"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "upper_inf",
    "func_type": "FUNCRANGE",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "RANGETYPEANY",
        "ret_type": "TYPEBOOL"
      },
      {
        "arg_type_0": "MULTIRANGETYPEANY",
        "ret_type": "TYPEANY"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "range_merge",
    "func_type": "FUNCRANGE",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "RANGETYPEANY",
        "arg_type_1": "RANGETYPEANY",
        "ret_type": "RANGETYPEANY"
      },
      {
        "arg_type_0": "MULTIRANGETYPEANY",
        "ret_type": "RANGETYPEANY"
      }
    ]
  },

  {
    "enable": true,
    "func_name": "multirange",
    "func_type": "FUNCRANGE",
    "is_type_matched": true,
    "params": [
      {
        "arg_type_0": "RANGETYPEANY",
        "ret_type": "MULTIRANGETYPEANY"
      }
    ]
  }
]