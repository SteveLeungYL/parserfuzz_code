%{
#include "bison_parser.h"
#include <stdio.h>
#include <sstream>
#include <string>
#include <cstring>
#define TOKEN(name) { return SQL_##name; }
static thread_local std::stringstream strbuf;
%}

%option reentrant
%option bison-bridge
%option never-interactive
%option batch
%option noyywrap
%option nounput
%option warn
%option case-insensitive
%option bison-locations
%option header-file="flex_lexer.h"
%option outfile="flex_lexer.cpp"
%option prefix="ff_"
%s COMMENT
%x singlequotedstring

%%
"!="	TOKEN(OP_NOTEQUAL)
SIMPLE	TOKEN(SIMPLE)
TEXT	TOKEN(TEXT)
OVER	TOKEN(OVER)
BETWEEN	TOKEN(BETWEEN)
";"	TOKEN(OP_SEMI)
BIGINT	TOKEN(BIGINT)
LIMIT	TOKEN(LIMIT)
WITH	TOKEN(WITH)
WITH_LA	TOKEN(WITH_LA)
MATERIALIZED TOKEN(MATERIALIZED)
READ TOKEN(READ)
SHARE TOKEN(SHARE)
SKIP TOKEN(SKIP)
LOCKED TOKEN(LOCKED)
ORDER	TOKEN(ORDER)
LAST	TOKEN(LAST)
UNBOUNDED	TOKEN(UNBOUNDED)
PRECEDING	TOKEN(PRECEDING)
EXCEPT	TOKEN(EXCEPT)
NUMERIC	TOKEN(NUMERIC)
"<"	TOKEN(OP_LESSTHAN)
PROCEDURE	TOKEN(PROCEDURE)
ACTION	TOKEN(ACTION)
FIRST	TOKEN(FIRST)
">="	TOKEN(OP_GREATEREQ)
CHECK	TOKEN(CHECK)
FULL	TOKEN(FULL)
NATURAL	TOKEN(NATURAL)
DOUBLE	TOKEN(DOUBLE)
NATIONAL	TOKEN(NATIONAL)
"+"	TOKEN(OP_ADD)
CURRENT	TOKEN(CURRENT)
TRIGGER	TOKEN(TRIGGER)
"-"	TOKEN(OP_SUB)
FALSE	TOKEN(FALSE)
UNIQUE	TOKEN(UNIQUE)
WHERE	TOKEN(WHERE)
MINUTE	TOKEN(MINUTE)
BEFORE	TOKEN(BEFORE)
ON	TOKEN(ON)
OFF TOKEN(OFF)
PARTIAL	TOKEN(PARTIAL)
OF	TOKEN(OF)
AFTER	TOKEN(AFTER)
PRIMARY	TOKEN(PRIMARY)
MONTH	TOKEN(MONTH)
DEFERRED	TOKEN(DEFERRED)
"$$"	TOKEN(OP_DOUBLE_DOLLAR)
VARYING	TOKEN(VARYING)
">"	TOKEN(OP_GREATERTHAN)
OR	TOKEN(OR)
PLPGSQL	TOKEN(PLPGSQL)
DELETE	TOKEN(DELETE)
INDEX	TOKEN(INDEX)
RETURN	TOKEN(RETURN)
"*"	TOKEN(OP_MUL)
FOREIGN	TOKEN(FOREIGN)
RESTRICT	TOKEN(RESTRICT)
FOLLOWING	TOKEN(FOLLOWING)
TIES	TOKEN(TIES)
DEC	TOKEN(DEC)
SELECT	TOKEN(SELECT)
BEGIN	TOKEN(BEGIN)
LANGUAGE	TOKEN(LANGUAGE)
DISTINCT	TOKEN(DISTINCT)
TRUE	TOKEN(TRUE)
BY	TOKEN(BY)
"%"	TOKEN(OP_MOD)
VALUES	TOKEN(VALUES)
IS	TOKEN(IS)
ROW	TOKEN(ROW)
FUNCTION	TOKEN(FUNCTION)
END	TOKEN(END)
RECURSIVE	TOKEN(RECURSIVE)
FOR	TOKEN(FOR)
UNION	TOKEN(UNION)
NULLS	TOKEN(NULLS)
UPDATE	TOKEN(UPDATE)
ELSE	TOKEN(ELSE)
RANGE	TOKEN(RANGE)
OFFSET	TOKEN(OFFSET)
INDEXED	TOKEN(INDEXED)
INSTEAD	TOKEN(INSTEAD)
NCHAR	TOKEN(NCHAR)
AND	TOKEN(AND)
REINDEX	TOKEN(REINDEX)
INITIALLY	TOKEN(INITIALLY)
YEAR	TOKEN(YEAR)
PRECISION	TOKEN(PRECISION)
FILTER	TOKEN(FILTER)
NOT	TOKEN(NOT)
VIEW	TOKEN(VIEW)
DEFFERRABLE	TOKEN(DEFFERRABLE)
REAL	TOKEN(REAL)
THEN	TOKEN(THEN)
OPTION	TOKEN(OPTION)
DEFAULT	TOKEN(DEFAULT)
GLOBAL	TOKEN(GLOBAL)
CROSS	TOKEN(CROSS)
CHAR	TOKEN(CHAR)
REFERENCES	TOKEN(REFERENCES)
"^"	TOKEN(OP_XOR)
GROUP	TOKEN(GROUP)
CASE	TOKEN(CASE)
SET	TOKEN(SET)
RESET TOKEN(RESET)
HOUR	TOKEN(HOUR)
NO	TOKEN(NO)
COLUMN	TOKEN(COLUMN)
LOCAL	TOKEN(LOCAL)
DROP	TOKEN(DROP)
REPLACE	TOKEN(REPLACE)
ASC	TOKEN(ASC)
","	TOKEN(OP_COMMA)
TABLE	TOKEN(TABLE)
ARRAY	TOKEN(ARRAY)
IF	TOKEN(IF)
EXTRACT	TOKEN(EXTRACT)
LEFT	TOKEN(LEFT)
OUTER	TOKEN(OUTER)
DECIMAL	TOKEN(DECIMAL)
PARTITION	TOKEN(PARTITION)
CASCADE	TOKEN(CASCADE)
ADD	TOKEN(ADD)
OTHERS	TOKEN(OTHERS)
"<="	TOKEN(OP_LESSEQ)
MATCH	TOKEN(MATCH)
ROWS	TOKEN(ROWS)
JOIN	TOKEN(JOIN)
LIKE	TOKEN(LIKE)
INTEGER	TOKEN(INTEGER)
")"	TOKEN(OP_RP)
INT	TOKEN(INT)
BOOLEAN	TOKEN(BOOLEAN)
KEY	TOKEN(KEY)
EACH	TOKEN(EACH)
USING	TOKEN(USING)
RENAME	TOKEN(RENAME)
DO	TOKEN(DO)
FLOAT	TOKEN(FLOAT)
"("	TOKEN(OP_LP)
CHARACTER	TOKEN(CHARACTER)
UMINUS	TOKEN(UMINUS)
CAST	TOKEN(CAST)
GROUPS	TOKEN(GROUPS)
NULL	TOKEN(NULL)
SMALLINT	TOKEN(SMALLINT)
INSERT	TOKEN(INSERT)
TEMPORARY	TOKEN(TEMPORARY)
CONSTRAINT	TOKEN(CONSTRAINT)
CREATE	TOKEN(CREATE)
"["	TOKEN(OP_LBRACKET)
WHEN	TOKEN(WHEN)
IMMEDIATE	TOKEN(IMMEDIATE)
TO	TOKEN(TO)
EXCLUDE	TOKEN(EXCLUDE)
DAY	TOKEN(DAY)
CONFLICT	TOKEN(CONFLICT)
"]"	TOKEN(OP_RBRACKET)
EXECUTE	TOKEN(EXECUTE)
EXISTS	TOKEN(EXISTS)
INTO	TOKEN(INTO)
"/"	TOKEN(OP_DIVIDE)
CASCADED	TOKEN(CASCADED)
ISNULL	TOKEN(ISNULL)
AS	TOKEN(AS)
INNER	TOKEN(INNER)
INTERSECT	TOKEN(INTERSECT)
IN	TOKEN(IN)
"="	TOKEN(OP_EQUAL)
VARCHAR	TOKEN(VARCHAR)
ALTER	TOKEN(ALTER)
DESC	TOKEN(DESC)
FROM	TOKEN(FROM)
TEMP	TOKEN(TEMP)
UNLOGGED	TOKEN(UNLOGGED)
SECOND	TOKEN(SECOND)
WINDOW	TOKEN(WINDOW)
NOTHING	TOKEN(NOTHING)
HAVING	TOKEN(HAVING)
SUM TOKEN(SUM)
COUNT TOKEN(COUNT)
COALESCE TOKEN(COALESCE)
ALL TOKEN(ALL)
ANY TOKEN(ANY)
SOME TOKEN(SOME)
LOWER TOKEN(LOWER)
TABLESPACE TOKEN(TABLESPACE)
ATTACH TOKEN(ATTACH)
DEPENDS TOKEN(DEPENDS)
EXTENSION TOKEN(EXTENSION)
STATISTICS TOKEN(STATISTICS)
OWNED TOKEN(OWNED)
NOWAIT TOKEN(NOWAIT)
FILLFACTOR TOKEN(FILLFACTOR)
BUFFERING TOKEN(BUFFERING)
FASTUPDATE TOKEN(FASTUPDATE)
"gin_pending_list_limit" TOKEN(GINPENDINGLISTLIMIT)
"pages_per_range" TOKEN(PAGESPERRANGE)
AUTOSUMMARIZE TOKEN(AUTOSUMMARIZE)
"deduplicate_items" TOKEN(DEDUPLICATEITEMS)
CONCURRENTLY TOKEN(CONCURRENTLY)
COLLATE TOKEN(COLLATE)
INCLUDE TOKEN(INCLUDE)
ONLY TOKEN(ONLY)
USER TOKEN(USER)
CURRENT_USER TOKEN(CURRENT_USER)
SESSION_USER TOKEN(SESSION_USER)
MAX TOKEN(MAX)
MIN TOKEN(MIN)
OWNER TOKEN(OWNER)
SCHEMA TOKEN(SCHEMA)
DATABASE TOKEN(DATABASE)
SYSTEM TOKEN(SYSTEM)
VERBOSE TOKEN(VERBOSE)
SUPERUSER TOKEN(SUPERUSER)
NOSUPERUSER TOKEN(NOSUPERUSER)
CREATEDB TOKEN(CREATEDB)
NOCREATEDB TOKEN(NOCREATEDB)
CREATEROLE TOKEN(CREATEROLE)
NOCREATEROLE TOKEN(NOCREATEROLE)
INHERIT TOKEN(INHERIT)
NOINHERIT TOKEN(NOINHERIT)
LOGIN TOKEN(LOGIN)
NOLOGIN TOKEN(NOLOGIN)
REPLICATION TOKEN(REPLICATION)
NOREPLICATION TOKEN(NOREPLICATION)
BYPASSRLS TOKEN(BYPASSRLS)
NOBYPASSRLS TOKEN(NOBYPASSRLS)
CONNECTION TOKEN(CONNECTION)
PASSWORD TOKEN(PASSWORD)
VALID TOKEN(VALID)
UNTIL TOKEN(UNTIL)
ROLE TOKEN(ROLE)
ADMIN TOKEN(ADMIN)
USER TOKEN(USER)
SYSID TOKEN(SYSID)
ENCRYPTED TOKEN(ENCRYPTED)
WITHOUT TOKEN(WITHOUT)
OIDS TOKEN(OIDS)
COMMIT TOKEN(COMMIT)
PRESERVE TOKEN(PRESERVE)
DATA TOKEN(DATA)
RETURNING TOKEN(RETURNING)
OVERRIDING TOKEN(OVERRIDING)
VALUE TOKEN(VALUE)
CONVERSION TOKEN(CONVERSION)
"." TOKEN(OP_DOT)
SETS TOKEN(SETS)
ILIKE TOKEN(ILIKE)
CURRENT_SCHEMA TOKEN(CURRENT_SCHEMA)
SEQUENCES TOKEN(SEQUENCES)
DOMAIN TOKEN(DOMAIN)
DETACH TOKEN(DETACH)
POSITION TOKEN(POSITION)
STORAGE TOKEN(STORAGE)
PROCEDURES TOKEN(PROCEDURES)
VOLATILE TOKEN(VOLATILE)
REFERENCING TOKEN(REFERENCING)
PRIVILEGES TOKEN(PRIVILEGES)
RETURNS TOKEN(RETURNS)
FREEZE TOKEN(FREEZE)
NULLIF TOKEN(NULLIF)
ZONE TOKEN(ZONE)
LEAKPROOF TOKEN(LEAKPROOF)
CURRENT_ROLE TOKEN(CURRENT_ROLE)
ENUM TOKEN(ENUM)
MINVALUE TOKEN(MINVALUE)
GENERATED TOKEN(GENERATED)
LOGGED TOKEN(LOGGED)
STDIN TOKEN(STDIN)
CURRENT_CATALOG TOKEN(CURRENT_CATALOG)
RELEASE TOKEN(RELEASE)
SUBSCRIPTION TOKEN(SUBSCRIPTION)
NOTNULL TOKEN(NOTNULL)
SAVEPOINT TOKEN(SAVEPOINT)
SETOF TOKEN(SETOF)
LATERAL TOKEN(LATERAL)
LOCALTIMESTAMP TOKEN(LOCALTIMESTAMP)
REF TOKEN(REF)
DEALLOCATE TOKEN(DEALLOCATE)
RULE TOKEN(RULE)
XML TOKEN(XML)
UESCAPE TOKEN(UESCAPE)
CHARACTERISTICS TOKEN(CHARACTERISTICS)
RIGHT TOKEN(RIGHT)
LEVEL TOKEN(LEVEL)
IMPLICIT TOKEN(IMPLICIT)
ROLLUP TOKEN(ROLLUP)
FORWARD TOKEN(FORWARD)
FORCE TOKEN(FORCE)
ORDINALITY TOKEN(ORDINALITY)
REPLICA TOKEN(REPLICA)
BOTH TOKEN(BOTH)
DECLARE TOKEN(DECLARE)
CONSTRAINTS TOKEN(CONSTRAINTS)
UNKNOWN TOKEN(UNKNOWN)
SNAPSHOT TOKEN(SNAPSHOT)
ASYMMETRIC TOKEN(ASYMMETRIC)
SCROLL TOKEN(SCROLL)
OPERATOR TOKEN(OPERATOR)
EXPLAIN TOKEN(EXPLAIN)
PLANS TOKEN(PLANS)
LOAD TOKEN(LOAD)
STDOUT TOKEN(STDOUT)
PRIOR TOKEN(PRIOR)
ABSOLUTE TOKEN(ABSOLUTE)
PARALLEL TOKEN(PARALLEL)
TYPE TOKEN(TYPE)
XMLSERIALIZE TOKEN(XMLSERIALIZE)
XMLFOREST TOKEN(XMLFOREST)
ALSO TOKEN(ALSO)
PUBLICATION TOKEN(PUBLICATION)
XMLCONCAT TOKEN(XMLCONCAT)
TIME TOKEN(TIME)
CONFIGURATION TOKEN(CONFIGURATION)
OLD TOKEN(OLD)
COLLATION TOKEN(COLLATION)
COMMITTED TOKEN(COMMITTED)
TRAILING TOKEN(TRAILING)
VALIDATE TOKEN(VALIDATE)
ASSIGNMENT TOKEN(ASSIGNMENT)
EXPRESSION TOKEN(EXPRESSION)
COPY TOKEN(COPY)
STRICT TOKEN(STRICT)
ENABLE TOKEN(ENABLE)
INCLUDING TOKEN(INCLUDING)
HEADER TOKEN(HEADER)
INLINE TOKEN(INLINE)
CALL TOKEN(CALL)
PARSER TOKEN(PARSER)
VIEWS TOKEN(VIEWS)
NFD TOKEN(NFD)
SHOW TOKEN(SHOW)
BINARY TOKEN(BINARY)
REPEATABLE TOKEN(REPEATABLE)
NFKD TOKEN(NFKD)
SECURITY TOKEN(SECURITY)
DEFINER TOKEN(DEFINER)
SESSION TOKEN(SESSION)
SUBSTRING TOKEN(SUBSTRING)
OVERLAPS TOKEN(OVERLAPS)
UNENCRYPTED TOKEN(UNENCRYPTED)
XMLATTRIBUTES TOKEN(XMLATTRIBUTES)
NORMALIZE TOKEN(NORMALIZE)
ASENSITIVE TOKEN(ASENSITIVE)
NEW TOKEN(NEW)
TABLES TOKEN(TABLES)
CONTENT TOKEN(CONTENT)
SERVER TOKEN(SERVER)
GRANT TOKEN(GRANT)
SEQUENCE TOKEN(SEQUENCE)
XMLEXISTS TOKEN(XMLEXISTS)
ATOMIC TOKEN(ATOMIC)
COMMENT TOKEN(COMMENT)
LISTEN TOKEN(LISTEN)
CURRENT_DATE TOKEN(CURRENT_DATE)
WITHIN TOKEN(WITHIN)
INSENSITIVE TOKEN(INSENSITIVE)
COMMENTS TOKEN(COMMENTS)
VACUUM TOKEN(VACUUM)
IMPORT TOKEN(IMPORT)
COMPRESSION TOKEN(COMPRESSION)
CURRENT_TIME TOKEN(CURRENT_TIME)
LOCATION TOKEN(LOCATION)
DOCUMENT TOKEN(DOCUMENT)
CHAIN TOKEN(CHAIN)
SEARCH TOKEN(SEARCH)
REASSIGN TOKEN(REASSIGN)
TRANSFORM TOKEN(TRANSFORM)
INPUT TOKEN(INPUT)
GROUPING TOKEN(GROUPING)
WRITE TOKEN(WRITE)
TABLESAMPLE TOKEN(TABLESAMPLE)
COST TOKEN(COST)
INCREMENT TOKEN(INCREMENT)
CATALOG TOKEN(CATALOG)
DICTIONARY TOKEN(DICTIONARY)
STANDALONE TOKEN(STANDALONE)
MAXVALUE TOKEN(MAXVALUE)
ESCAPE TOKEN(ESCAPE)
ROLLBACK TOKEN(ROLLBACK)
TEMPLATE TOKEN(TEMPLATE)
ALWAYS TOKEN(ALWAYS)
PROCEDURAL TOKEN(PROCEDURAL)
XMLNAMESPACES TOKEN(XMLNAMESPACES)
DEFAULTS TOKEN(DEFAULTS)
ROUTINES TOKEN(ROUTINES)
REVOKE TOKEN(REVOKE)
EVENT TOKEN(EVENT)
IMMUTABLE TOKEN(IMMUTABLE)
ROUTINE TOKEN(ROUTINE)
INVOKER TOKEN(INVOKER)
TRUNCATE TOKEN(TRUNCATE)
AGGREGATE TOKEN(AGGREGATE)
PLACING TOKEN(PLACING)
CYCLE TOKEN(CYCLE)
SIMILAR TOKEN(SIMILAR)
INTERVAL TOKEN(INTERVAL)
XMLPARSE TOKEN(XMLPARSE)
HOLD TOKEN(HOLD)
CSV TOKEN(CSV)
EXCLUDING TOKEN(EXCLUDING)
NAMES TOKEN(NAMES)
CACHE TOKEN(CACHE)
STRIP TOKEN(STRIP)
WRAPPER TOKEN(WRAPPER)
NFC TOKEN(NFC)
UNLISTEN TOKEN(UNLISTEN)
DEPTH TOKEN(DEPTH)
DELIMITER TOKEN(DELIMITER)
NAME TOKEN(NAME)
EXTERNAL TOKEN(EXTERNAL)
INDEXES TOKEN(INDEXES)
XMLELEMENT TOKEN(XMLELEMENT)
CURSOR TOKEN(CURSOR)
STORED TOKEN(STORED)
PREPARED TOKEN(PREPARED)
NOTIFY TOKEN(NOTIFY)
LOCALTIME TOKEN(LOCALTIME)
OBJECT TOKEN(OBJECT)
TRUSTED TOKEN(TRUSTED)
ISOLATION TOKEN(ISOLATION)
VALIDATOR TOKEN(VALIDATOR)
SYMMETRIC TOKEN(SYMMETRIC)
DELIMITERS TOKEN(DELIMITERS)
FUNCTIONS TOKEN(FUNCTIONS)
PROGRAM TOKEN(PROGRAM)
OPTIONS TOKEN(OPTIONS)
EXCLUSIVE TOKEN(EXCLUSIVE)
WHITESPACE TOKEN(WHITESPACE)
REFRESH TOKEN(REFRESH)
BREADTH TOKEN(BREADTH)
FAMILY TOKEN(FAMILY)
GRANTED TOKEN(GRANTED)
INOUT TOKEN(INOUT)
DEFERRABLE TOKEN(DEFERRABLE)
HANDLER TOKEN(HANDLER)
ANALYZE TOKEN(ANALYZE)
NORMALIZED TOKEN(NORMALIZED)
DISABLE TOKEN(DISABLE)
MODE TOKEN(MODE)
SERIALIZABLE TOKEN(SERIALIZABLE)
OUT TOKEN(OUT)
ANALYSE TOKEN(ANALYSE)
ENCODING TOKEN(ENCODING)
TIMESTAMP TOKEN(TIMESTAMP)
CLUSTER TOKEN(CLUSTER)
LEAST TOKEN(LEAST)
XMLTABLE TOKEN(XMLTABLE)
NFKC TOKEN(NFKC)
QUOTE TOKEN(QUOTE)
PREPARE TOKEN(PREPARE)
STABLE TOKEN(STABLE)
GREATEST TOKEN(GREATEST)
INHERITS TOKEN(INHERITS)
WORK TOKEN(WORK)
XMLPI TOKEN(XMLPI)
FETCH TOKEN(FETCH)
RECHECK TOKEN(RECHECK)
OVERLAY TOKEN(OVERLAY)
CONTINUE TOKEN(CONTINUE)
XMLROOT TOKEN(XMLROOT)
FINALIZE TOKEN(FINALIZE)
UNCOMMITTED TOKEN(UNCOMMITTED)
CURRENT_TIMESTAMP TOKEN(CURRENT_TIMESTAMP)
YES TOKEN(YES)
LABEL TOKEN(LABEL)
CLOSE TOKEN(CLOSE)
BIT TOKEN(BIT)
BACKWARD TOKEN(BACKWARD)
ABORT TOKEN(ABORT)
TRANSACTION TOKEN(TRANSACTION)
SCHEMAS TOKEN(SCHEMAS)
LEADING TOKEN(LEADING)
MOVE TOKEN(MOVE)
SQL TOKEN(SQL)
CALLED TOKEN(CALLED)
TYPES TOKEN(TYPES)
ATTRIBUTE TOKEN(ATTRIBUTE)
CUBE TOKEN(CUBE)
VERSION TOKEN(VERSION)
CHECKPOINT TOKEN(CHECKPOINT)
CLASS TOKEN(CLASS)
AT TOKEN(AT)
LARGE TOKEN(LARGE)
RELATIVE TOKEN(RELATIVE)
MAPPING TOKEN(MAPPING)
START TOKEN(START)
VARIADIC TOKEN(VARIADIC)
RESTART TOKEN(RESTART)
SUPPORT TOKEN(SUPPORT)
STATEMENT TOKEN(STATEMENT)
COLUMNS TOKEN(COLUMNS)
LOCK TOKEN(LOCK)
NONE TOKEN(NONE)
DISCARD TOKEN(DISCARD)
TREAT TOKEN(TREAT)
PASSING TOKEN(PASSING)
AUTHORIZATION TOKEN(AUTHORIZATION)
TRIM TOKEN(TRIM)
ACCESS TOKEN(ACCESS)
ASSERTION TOKEN(ASSERTION)
METHOD TOKEN(METHOD)
IDENTITY TOKEN(IDENTITY)
NEXT TOKEN(NEXT)
POLICY TOKEN(POLICY)
IDENT TOKEN(IDENT)
ICONST TOKEN(ICONST)
SCONST TOKEN(SCONST)
FCONST TOKEN(FCONST)

"::"  TOKEN(DOUBLE_COLON)
-?[0-9]+"."[0-9]* |
"."[0-9]* {
	yylval->fval = atof(yytext);
	return SQL_FLOATLITERAL;
	}

-?[0-9]+ {
	yylval->ival = atol(yytext);
	return SQL_INTLITERAL;
	}

\"[^\"\n]+\" {
	std::string s(yytext);
	yylval->sval = strdup(s.substr(1, s.size()-1).c_str());
	return SQL_STRINGLITERAL;
	}

[A-Za-z][A-Za-z0-9_]* {
	yylval->sval = strdup(yytext);
	return SQL_IDENTIFIER;
	}

\' {
	BEGIN singlequotedstring; strbuf = std::stringstream{}; strbuf << '\'';
	}

<singlequotedstring>\'\' {
	strbuf << '\'';
	}

<singlequotedstring>[^']* {
	strbuf << yytext;
	}

<singlequotedstring>\' {
	BEGIN 0; 
	strbuf << '\'';
	yylval->sval = strdup(strbuf.str().c_str());
	return SQL_STRINGLITERAL;
	}

<singlequotedstring><<EOF>> {
	return 0;
	}

[ \t\n]+ {
	}

. {
	return 0;
	}

%%
