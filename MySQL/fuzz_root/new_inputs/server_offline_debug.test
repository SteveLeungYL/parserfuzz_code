      VARIABLE_NAME = 'THREAD_HANDLING' AND      VARIABLE_VALUE = 'loaded-dynamically'`){  skip Test requires: 'not_threadpool';
     let $wait_counter= `SELECT $wait_timeout * 10`;
while ($wait_counter)   let $current_sessions= query_get_value(SHOW GLOBAL STATUS LIKE 'Threads_connected', Value, 1);
   let $success= `SELECT $current_sessions <= $count_sessions`;
   if ($success)   {      let $wait_counter= 0;
   }   if (!$success)   {      sleep 0.1;
      dec $wait_counter;
   }         SHOW PROCESSLIST;
   SET @global_saved_tmp =  @@global.offline_mode;
connect(con1, localhost, root,,);
SET DEBUG_SYNC='after_lock_offline_mode_acquire SIGNAL lock_offline_mode_acquired WAIT_FOR lock_thd_data_acquired';
SET DEBUG_SYNC='now WAIT_FOR lock_offline_mode_acquired';
SET DEBUG_SYNC='materialize_session_variable_array_THD_locked SIGNAL lock_thd_data_acquired';
SET DEBUG_SYNC='RESET';
SET @@global.offline_mode = @global_saved_tmp;
SET @global_saved_tmp =  @@global.offline_mode;
CREATE USER u1@localhost;
GRANT ALL PRIVILEGES ON *.* to u1@localhost;
REVOKE CONNECTION_ADMIN, SUPER ON *.* FROM u1@localhost;
connect(con_u1,localhost,u1,,test);
connection con_u1;
set global offline_mode=on;
SELECT 1 FROM DUAL;
connection default;
disconnect con_u1;
SET @@global.offline_mode = @global_saved_tmp;
DROP USER u1@localhost;
      VARIABLE_NAME = 'THREAD_HANDLING' AND      VARIABLE_VALUE = 'loaded-dynamically'`){  skip Test requires: 'not_threadpool';
     let $wait_counter= `SELECT $wait_timeout * 10`;
while ($wait_counter)   let $current_sessions= query_get_value(SHOW GLOBAL STATUS LIKE 'Threads_connected', Value, 1);
   let $success= `SELECT $current_sessions <= $count_sessions`;
   if ($success)   {      let $wait_counter= 0;
   }   if (!$success)   {      sleep 0.1;
      dec $wait_counter;
   }         SHOW PROCESSLIST;
   SET @global_saved_tmp =  @@global.offline_mode;
connect(con1, localhost, root,,);
SET DEBUG_SYNC='after_lock_offline_mode_acquire SIGNAL lock_offline_mode_acquired WAIT_FOR lock_thd_data_acquired';
SET DEBUG_SYNC='now WAIT_FOR lock_offline_mode_acquired';
SET DEBUG_SYNC='materialize_session_variable_array_THD_locked SIGNAL lock_thd_data_acquired';
SET DEBUG_SYNC='RESET';
SET @@global.offline_mode = @global_saved_tmp;
SET @global_saved_tmp =  @@global.offline_mode;
CREATE USER u1@localhost;
GRANT ALL PRIVILEGES ON *.* to u1@localhost;
REVOKE CONNECTION_ADMIN, SUPER ON *.* FROM u1@localhost;
connect(con_u1,localhost,u1,,test);
connection con_u1;
set global offline_mode=on;
SELECT 1 FROM DUAL;
connection default;
disconnect con_u1;
SET @@global.offline_mode = @global_saved_tmp;
DROP USER u1@localhost;
      VARIABLE_NAME = 'THREAD_HANDLING' AND      VARIABLE_VALUE = 'loaded-dynamically'`){  skip Test requires: 'not_threadpool';
     let $wait_counter= `SELECT $wait_timeout * 10`;
while ($wait_counter)   let $current_sessions= query_get_value(SHOW GLOBAL STATUS LIKE 'Threads_connected', Value, 1);
   let $success= `SELECT $current_sessions <= $count_sessions`;
   if ($success)   {      let $wait_counter= 0;
   }   if (!$success)   {      sleep 0.1;
      dec $wait_counter;
   }         SHOW PROCESSLIST;
   SET @global_saved_tmp =  @@global.offline_mode;
connect(con1, localhost, root,,);
SET DEBUG_SYNC='after_lock_offline_mode_acquire SIGNAL lock_offline_mode_acquired WAIT_FOR lock_thd_data_acquired';
SET DEBUG_SYNC='now WAIT_FOR lock_offline_mode_acquired';
SET DEBUG_SYNC='materialize_session_variable_array_THD_locked SIGNAL lock_thd_data_acquired';
SET DEBUG_SYNC='RESET';
SET @@global.offline_mode = @global_saved_tmp;
SET @global_saved_tmp =  @@global.offline_mode;
CREATE USER u1@localhost;
GRANT ALL PRIVILEGES ON *.* to u1@localhost;
REVOKE CONNECTION_ADMIN, SUPER ON *.* FROM u1@localhost;
connect(con_u1,localhost,u1,,test);
connection con_u1;
set global offline_mode=on;
SELECT 1 FROM DUAL;
connection default;
disconnect con_u1;
SET @@global.offline_mode = @global_saved_tmp;
DROP USER u1@localhost;
      VARIABLE_NAME = 'THREAD_HANDLING' AND      VARIABLE_VALUE = 'loaded-dynamically'`){  skip Test requires: 'not_threadpool';
     let $wait_counter= `SELECT $wait_timeout * 10`;
while ($wait_counter)   let $current_sessions= query_get_value(SHOW GLOBAL STATUS LIKE 'Threads_connected', Value, 1);
   let $success= `SELECT $current_sessions <= $count_sessions`;
   if ($success)   {      let $wait_counter= 0;
   }   if (!$success)   {      sleep 0.1;
      dec $wait_counter;
   }         SHOW PROCESSLIST;
   SET @global_saved_tmp =  @@global.offline_mode;
connect(con1, localhost, root,,);
SET DEBUG_SYNC='after_lock_offline_mode_acquire SIGNAL lock_offline_mode_acquired WAIT_FOR lock_thd_data_acquired';
SET DEBUG_SYNC='now WAIT_FOR lock_offline_mode_acquired';
SET DEBUG_SYNC='materialize_session_variable_array_THD_locked SIGNAL lock_thd_data_acquired';
SET DEBUG_SYNC='RESET';
SET @@global.offline_mode = @global_saved_tmp;
SET @global_saved_tmp =  @@global.offline_mode;
CREATE USER u1@localhost;
GRANT ALL PRIVILEGES ON *.* to u1@localhost;
REVOKE CONNECTION_ADMIN, SUPER ON *.* FROM u1@localhost;
connect(con_u1,localhost,u1,,test);
connection con_u1;
set global offline_mode=on;
SELECT 1 FROM DUAL;
connection default;
disconnect con_u1;
SET @@global.offline_mode = @global_saved_tmp;
DROP USER u1@localhost;
      VARIABLE_NAME = 'THREAD_HANDLING' AND      VARIABLE_VALUE = 'loaded-dynamically'`){  skip Test requires: 'not_threadpool';
     let $wait_counter= `SELECT $wait_timeout * 10`;
while ($wait_counter)   let $current_sessions= query_get_value(SHOW GLOBAL STATUS LIKE 'Threads_connected', Value, 1);
   let $success= `SELECT $current_sessions <= $count_sessions`;
   if ($success)   {      let $wait_counter= 0;
   }   if (!$success)   {      sleep 0.1;
      dec $wait_counter;
   }         SHOW PROCESSLIST;
   SET @global_saved_tmp =  @@global.offline_mode;
connect(con1, localhost, root,,);
SET DEBUG_SYNC='after_lock_offline_mode_acquire SIGNAL lock_offline_mode_acquired WAIT_FOR lock_thd_data_acquired';
SET DEBUG_SYNC='now WAIT_FOR lock_offline_mode_acquired';
SET DEBUG_SYNC='materialize_session_variable_array_THD_locked SIGNAL lock_thd_data_acquired';
SET DEBUG_SYNC='RESET';
SET @@global.offline_mode = @global_saved_tmp;
SET @global_saved_tmp =  @@global.offline_mode;
CREATE USER u1@localhost;
GRANT ALL PRIVILEGES ON *.* to u1@localhost;
REVOKE CONNECTION_ADMIN, SUPER ON *.* FROM u1@localhost;
connect(con_u1,localhost,u1,,test);
connection con_u1;
set global offline_mode=on;
SELECT 1 FROM DUAL;
connection default;
disconnect con_u1;
SET @@global.offline_mode = @global_saved_tmp;
DROP USER u1@localhost;
      VARIABLE_NAME = 'THREAD_HANDLING' AND      VARIABLE_VALUE = 'loaded-dynamically'`){  skip Test requires: 'not_threadpool';
     let $wait_counter= `SELECT $wait_timeout * 10`;
while ($wait_counter)   let $current_sessions= query_get_value(SHOW GLOBAL STATUS LIKE 'Threads_connected', Value, 1);
   let $success= `SELECT $current_sessions <= $count_sessions`;
   if ($success)   {      let $wait_counter= 0;
   }   if (!$success)   {      sleep 0.1;
      dec $wait_counter;
   }         SHOW PROCESSLIST;
   SET @global_saved_tmp =  @@global.offline_mode;
connect(con1, localhost, root,,);
SET DEBUG_SYNC='after_lock_offline_mode_acquire SIGNAL lock_offline_mode_acquired WAIT_FOR lock_thd_data_acquired';
SET DEBUG_SYNC='now WAIT_FOR lock_offline_mode_acquired';
SET DEBUG_SYNC='materialize_session_variable_array_THD_locked SIGNAL lock_thd_data_acquired';
SET DEBUG_SYNC='RESET';
SET @@global.offline_mode = @global_saved_tmp;
SET @global_saved_tmp =  @@global.offline_mode;
CREATE USER u1@localhost;
GRANT ALL PRIVILEGES ON *.* to u1@localhost;
REVOKE CONNECTION_ADMIN, SUPER ON *.* FROM u1@localhost;
connect(con_u1,localhost,u1,,test);
connection con_u1;
set global offline_mode=on;
SELECT 1 FROM DUAL;
connection default;
disconnect con_u1;
SET @@global.offline_mode = @global_saved_tmp;
DROP USER u1@localhost;
