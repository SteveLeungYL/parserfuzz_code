DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
TRUNCATE TABLE performance_schema.memory_summary_global_by_event_name;
CREATE SCHEMA dd_pfs;
CREATE TABLE dd_pfs.mem_events (Seq int auto_increment PRIMARY KEY, Query varchar(1000)) AS  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
echo ###############################################################################;
  eval $operation;
  SELECT         after_stats.EVENT_NAME                                           AS Name,         after_stats.COUNT_ALLOC                  - before_stats.N_alloc  AS N_alloc,         after_stats.COUNT_FREE                   - before_stats.N_free   AS N_free,         after_stats.CURRENT_COUNT_USED           - before_stats.N_curr   AS N_curr,         after_stats.SUM_NUMBER_OF_BYTES_ALLOC    - before_stats.Sz_alloc AS Sz_alloc,         after_STATS.SUM_NUMBER_OF_BYTES_FREE     - before_stats.Sz_free  AS Sz_free,         after_stats.CURRENT_NUMBER_OF_BYTES_USED - before_stats.Sz_curr  AS Sz_curr    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SELECT         SUM(after_stats.CURRENT_COUNT_USED) - SUM(before_stats.N_curr)   AS N_left,         SUM(after_stats.CURRENT_NUMBER_OF_BYTES_USED) - SUM(before_stats.Sz_curr)  AS Sz_left    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SET @diff = (SELECT COUNT_ALLOC - N_alloc                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_alloc;
  let $assert_text = '$operation' will allocate $object_alloc objects.;
  source include/assert.inc;
  let $object_alloc=;
  SET @diff = (SELECT COUNT_FREE - N_free                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_free;
  let $assert_text = '$operation' will free $object_free objects.;
  source include/assert.inc;
  let $object_free=;
  SET @diff = (SELECT CURRENT_COUNT_USED - N_curr                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_count;
  let $assert_text = '$operation' will leave $object_count objects.;
  source include/assert.inc;
  let $object_count=;
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
echo ###############################################################################;
  eval $operation;
  SELECT         after_stats.EVENT_NAME                                           AS Name,         after_stats.COUNT_ALLOC                  - before_stats.N_alloc  AS N_alloc,         after_stats.COUNT_FREE                   - before_stats.N_free   AS N_free,         after_stats.CURRENT_COUNT_USED           - before_stats.N_curr   AS N_curr,         after_stats.SUM_NUMBER_OF_BYTES_ALLOC    - before_stats.Sz_alloc AS Sz_alloc,         after_STATS.SUM_NUMBER_OF_BYTES_FREE     - before_stats.Sz_free  AS Sz_free,         after_stats.CURRENT_NUMBER_OF_BYTES_USED - before_stats.Sz_curr  AS Sz_curr    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SELECT         SUM(after_stats.CURRENT_COUNT_USED) - SUM(before_stats.N_curr)   AS N_left,         SUM(after_stats.CURRENT_NUMBER_OF_BYTES_USED) - SUM(before_stats.Sz_curr)  AS Sz_left    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SET @diff = (SELECT COUNT_ALLOC - N_alloc                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_alloc;
  let $assert_text = '$operation' will allocate $object_alloc objects.;
  source include/assert.inc;
  let $object_alloc=;
  SET @diff = (SELECT COUNT_FREE - N_free                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_free;
  let $assert_text = '$operation' will free $object_free objects.;
  source include/assert.inc;
  let $object_free=;
  SET @diff = (SELECT CURRENT_COUNT_USED - N_curr                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_count;
  let $assert_text = '$operation' will leave $object_count objects.;
  source include/assert.inc;
  let $object_count=;
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
echo ###############################################################################;
  eval $operation;
  SELECT         after_stats.EVENT_NAME                                           AS Name,         after_stats.COUNT_ALLOC                  - before_stats.N_alloc  AS N_alloc,         after_stats.COUNT_FREE                   - before_stats.N_free   AS N_free,         after_stats.CURRENT_COUNT_USED           - before_stats.N_curr   AS N_curr,         after_stats.SUM_NUMBER_OF_BYTES_ALLOC    - before_stats.Sz_alloc AS Sz_alloc,         after_STATS.SUM_NUMBER_OF_BYTES_FREE     - before_stats.Sz_free  AS Sz_free,         after_stats.CURRENT_NUMBER_OF_BYTES_USED - before_stats.Sz_curr  AS Sz_curr    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SELECT         SUM(after_stats.CURRENT_COUNT_USED) - SUM(before_stats.N_curr)   AS N_left,         SUM(after_stats.CURRENT_NUMBER_OF_BYTES_USED) - SUM(before_stats.Sz_curr)  AS Sz_left    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SET @diff = (SELECT COUNT_ALLOC - N_alloc                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_alloc;
  let $assert_text = '$operation' will allocate $object_alloc objects.;
  source include/assert.inc;
  let $object_alloc=;
  SET @diff = (SELECT COUNT_FREE - N_free                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_free;
  let $assert_text = '$operation' will free $object_free objects.;
  source include/assert.inc;
  let $object_free=;
  SET @diff = (SELECT CURRENT_COUNT_USED - N_curr                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_count;
  let $assert_text = '$operation' will leave $object_count objects.;
  source include/assert.inc;
  let $object_count=;
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
echo ###############################################################################;
  eval $operation;
  SELECT         after_stats.EVENT_NAME                                           AS Name,         after_stats.COUNT_ALLOC                  - before_stats.N_alloc  AS N_alloc,         after_stats.COUNT_FREE                   - before_stats.N_free   AS N_free,         after_stats.CURRENT_COUNT_USED           - before_stats.N_curr   AS N_curr,         after_stats.SUM_NUMBER_OF_BYTES_ALLOC    - before_stats.Sz_alloc AS Sz_alloc,         after_STATS.SUM_NUMBER_OF_BYTES_FREE     - before_stats.Sz_free  AS Sz_free,         after_stats.CURRENT_NUMBER_OF_BYTES_USED - before_stats.Sz_curr  AS Sz_curr    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SELECT         SUM(after_stats.CURRENT_COUNT_USED) - SUM(before_stats.N_curr)   AS N_left,         SUM(after_stats.CURRENT_NUMBER_OF_BYTES_USED) - SUM(before_stats.Sz_curr)  AS Sz_left    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SET @diff = (SELECT COUNT_ALLOC - N_alloc                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_alloc;
  let $assert_text = '$operation' will allocate $object_alloc objects.;
  source include/assert.inc;
  let $object_alloc=;
  SET @diff = (SELECT COUNT_FREE - N_free                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_free;
  let $assert_text = '$operation' will free $object_free objects.;
  source include/assert.inc;
  let $object_free=;
  SET @diff = (SELECT CURRENT_COUNT_USED - N_curr                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_count;
  let $assert_text = '$operation' will leave $object_count objects.;
  source include/assert.inc;
  let $object_count=;
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
echo ###############################################################################;
  eval $operation;
  SELECT         after_stats.EVENT_NAME                                           AS Name,         after_stats.COUNT_ALLOC                  - before_stats.N_alloc  AS N_alloc,         after_stats.COUNT_FREE                   - before_stats.N_free   AS N_free,         after_stats.CURRENT_COUNT_USED           - before_stats.N_curr   AS N_curr,         after_stats.SUM_NUMBER_OF_BYTES_ALLOC    - before_stats.Sz_alloc AS Sz_alloc,         after_STATS.SUM_NUMBER_OF_BYTES_FREE     - before_stats.Sz_free  AS Sz_free,         after_stats.CURRENT_NUMBER_OF_BYTES_USED - before_stats.Sz_curr  AS Sz_curr    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SELECT         SUM(after_stats.CURRENT_COUNT_USED) - SUM(before_stats.N_curr)   AS N_left,         SUM(after_stats.CURRENT_NUMBER_OF_BYTES_USED) - SUM(before_stats.Sz_curr)  AS Sz_left    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SET @diff = (SELECT COUNT_ALLOC - N_alloc                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_alloc;
  let $assert_text = '$operation' will allocate $object_alloc objects.;
  source include/assert.inc;
  let $object_alloc=;
  SET @diff = (SELECT COUNT_FREE - N_free                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_free;
  let $assert_text = '$operation' will free $object_free objects.;
  source include/assert.inc;
  let $object_free=;
  SET @diff = (SELECT CURRENT_COUNT_USED - N_curr                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_count;
  let $assert_text = '$operation' will leave $object_count objects.;
  source include/assert.inc;
  let $object_count=;
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
echo ###############################################################################;
  eval $operation;
  SELECT         after_stats.EVENT_NAME                                           AS Name,         after_stats.COUNT_ALLOC                  - before_stats.N_alloc  AS N_alloc,         after_stats.COUNT_FREE                   - before_stats.N_free   AS N_free,         after_stats.CURRENT_COUNT_USED           - before_stats.N_curr   AS N_curr,         after_stats.SUM_NUMBER_OF_BYTES_ALLOC    - before_stats.Sz_alloc AS Sz_alloc,         after_STATS.SUM_NUMBER_OF_BYTES_FREE     - before_stats.Sz_free  AS Sz_free,         after_stats.CURRENT_NUMBER_OF_BYTES_USED - before_stats.Sz_curr  AS Sz_curr    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SELECT         SUM(after_stats.CURRENT_COUNT_USED) - SUM(before_stats.N_curr)   AS N_left,         SUM(after_stats.CURRENT_NUMBER_OF_BYTES_USED) - SUM(before_stats.Sz_curr)  AS Sz_left    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SET @diff = (SELECT COUNT_ALLOC - N_alloc                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_alloc;
  let $assert_text = '$operation' will allocate $object_alloc objects.;
  source include/assert.inc;
  let $object_alloc=;
  SET @diff = (SELECT COUNT_FREE - N_free                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_free;
  let $assert_text = '$operation' will free $object_free objects.;
  source include/assert.inc;
  let $object_free=;
  SET @diff = (SELECT CURRENT_COUNT_USED - N_curr                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_count;
  let $assert_text = '$operation' will leave $object_count objects.;
  source include/assert.inc;
  let $object_count=;
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
echo ###############################################################################;
  eval $operation;
  SELECT         after_stats.EVENT_NAME                                           AS Name,         after_stats.COUNT_ALLOC                  - before_stats.N_alloc  AS N_alloc,         after_stats.COUNT_FREE                   - before_stats.N_free   AS N_free,         after_stats.CURRENT_COUNT_USED           - before_stats.N_curr   AS N_curr,         after_stats.SUM_NUMBER_OF_BYTES_ALLOC    - before_stats.Sz_alloc AS Sz_alloc,         after_STATS.SUM_NUMBER_OF_BYTES_FREE     - before_stats.Sz_free  AS Sz_free,         after_stats.CURRENT_NUMBER_OF_BYTES_USED - before_stats.Sz_curr  AS Sz_curr    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SELECT         SUM(after_stats.CURRENT_COUNT_USED) - SUM(before_stats.N_curr)   AS N_left,         SUM(after_stats.CURRENT_NUMBER_OF_BYTES_USED) - SUM(before_stats.Sz_curr)  AS Sz_left    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SET @diff = (SELECT COUNT_ALLOC - N_alloc                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_alloc;
  let $assert_text = '$operation' will allocate $object_alloc objects.;
  source include/assert.inc;
  let $object_alloc=;
  SET @diff = (SELECT COUNT_FREE - N_free                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_free;
  let $assert_text = '$operation' will free $object_free objects.;
  source include/assert.inc;
  let $object_free=;
  SET @diff = (SELECT CURRENT_COUNT_USED - N_curr                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_count;
  let $assert_text = '$operation' will leave $object_count objects.;
  source include/assert.inc;
  let $object_count=;
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
echo ###############################################################################;
  eval $operation;
  SELECT         after_stats.EVENT_NAME                                           AS Name,         after_stats.COUNT_ALLOC                  - before_stats.N_alloc  AS N_alloc,         after_stats.COUNT_FREE                   - before_stats.N_free   AS N_free,         after_stats.CURRENT_COUNT_USED           - before_stats.N_curr   AS N_curr,         after_stats.SUM_NUMBER_OF_BYTES_ALLOC    - before_stats.Sz_alloc AS Sz_alloc,         after_STATS.SUM_NUMBER_OF_BYTES_FREE     - before_stats.Sz_free  AS Sz_free,         after_stats.CURRENT_NUMBER_OF_BYTES_USED - before_stats.Sz_curr  AS Sz_curr    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SELECT         SUM(after_stats.CURRENT_COUNT_USED) - SUM(before_stats.N_curr)   AS N_left,         SUM(after_stats.CURRENT_NUMBER_OF_BYTES_USED) - SUM(before_stats.Sz_curr)  AS Sz_left    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SET @diff = (SELECT COUNT_ALLOC - N_alloc                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_alloc;
  let $assert_text = '$operation' will allocate $object_alloc objects.;
  source include/assert.inc;
  let $object_alloc=;
  SET @diff = (SELECT COUNT_FREE - N_free                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_free;
  let $assert_text = '$operation' will free $object_free objects.;
  source include/assert.inc;
  let $object_free=;
  SET @diff = (SELECT CURRENT_COUNT_USED - N_curr                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_count;
  let $assert_text = '$operation' will leave $object_count objects.;
  source include/assert.inc;
  let $object_count=;
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
echo ###############################################################################;
  eval $operation;
  SELECT         after_stats.EVENT_NAME                                           AS Name,         after_stats.COUNT_ALLOC                  - before_stats.N_alloc  AS N_alloc,         after_stats.COUNT_FREE                   - before_stats.N_free   AS N_free,         after_stats.CURRENT_COUNT_USED           - before_stats.N_curr   AS N_curr,         after_stats.SUM_NUMBER_OF_BYTES_ALLOC    - before_stats.Sz_alloc AS Sz_alloc,         after_STATS.SUM_NUMBER_OF_BYTES_FREE     - before_stats.Sz_free  AS Sz_free,         after_stats.CURRENT_NUMBER_OF_BYTES_USED - before_stats.Sz_curr  AS Sz_curr    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SELECT         SUM(after_stats.CURRENT_COUNT_USED) - SUM(before_stats.N_curr)   AS N_left,         SUM(after_stats.CURRENT_NUMBER_OF_BYTES_USED) - SUM(before_stats.Sz_curr)  AS Sz_left    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SET @diff = (SELECT COUNT_ALLOC - N_alloc                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_alloc;
  let $assert_text = '$operation' will allocate $object_alloc objects.;
  source include/assert.inc;
  let $object_alloc=;
  SET @diff = (SELECT COUNT_FREE - N_free                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_free;
  let $assert_text = '$operation' will free $object_free objects.;
  source include/assert.inc;
  let $object_free=;
  SET @diff = (SELECT CURRENT_COUNT_USED - N_curr                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_count;
  let $assert_text = '$operation' will leave $object_count objects.;
  source include/assert.inc;
  let $object_count=;
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
echo ###############################################################################;
  eval $operation;
  SELECT         after_stats.EVENT_NAME                                           AS Name,         after_stats.COUNT_ALLOC                  - before_stats.N_alloc  AS N_alloc,         after_stats.COUNT_FREE                   - before_stats.N_free   AS N_free,         after_stats.CURRENT_COUNT_USED           - before_stats.N_curr   AS N_curr,         after_stats.SUM_NUMBER_OF_BYTES_ALLOC    - before_stats.Sz_alloc AS Sz_alloc,         after_STATS.SUM_NUMBER_OF_BYTES_FREE     - before_stats.Sz_free  AS Sz_free,         after_stats.CURRENT_NUMBER_OF_BYTES_USED - before_stats.Sz_curr  AS Sz_curr    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SELECT         SUM(after_stats.CURRENT_COUNT_USED) - SUM(before_stats.N_curr)   AS N_left,         SUM(after_stats.CURRENT_NUMBER_OF_BYTES_USED) - SUM(before_stats.Sz_curr)  AS Sz_left    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SET @diff = (SELECT COUNT_ALLOC - N_alloc                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_alloc;
  let $assert_text = '$operation' will allocate $object_alloc objects.;
  source include/assert.inc;
  let $object_alloc=;
  SET @diff = (SELECT COUNT_FREE - N_free                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_free;
  let $assert_text = '$operation' will free $object_free objects.;
  source include/assert.inc;
  let $object_free=;
  SET @diff = (SELECT CURRENT_COUNT_USED - N_curr                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_count;
  let $assert_text = '$operation' will leave $object_count objects.;
  source include/assert.inc;
  let $object_count=;
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
echo ###############################################################################;
  eval $operation;
  SELECT         after_stats.EVENT_NAME                                           AS Name,         after_stats.COUNT_ALLOC                  - before_stats.N_alloc  AS N_alloc,         after_stats.COUNT_FREE                   - before_stats.N_free   AS N_free,         after_stats.CURRENT_COUNT_USED           - before_stats.N_curr   AS N_curr,         after_stats.SUM_NUMBER_OF_BYTES_ALLOC    - before_stats.Sz_alloc AS Sz_alloc,         after_STATS.SUM_NUMBER_OF_BYTES_FREE     - before_stats.Sz_free  AS Sz_free,         after_stats.CURRENT_NUMBER_OF_BYTES_USED - before_stats.Sz_curr  AS Sz_curr    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SELECT         SUM(after_stats.CURRENT_COUNT_USED) - SUM(before_stats.N_curr)   AS N_left,         SUM(after_stats.CURRENT_NUMBER_OF_BYTES_USED) - SUM(before_stats.Sz_curr)  AS Sz_left    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SET @diff = (SELECT COUNT_ALLOC - N_alloc                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_alloc;
  let $assert_text = '$operation' will allocate $object_alloc objects.;
  source include/assert.inc;
  let $object_alloc=;
  SET @diff = (SELECT COUNT_FREE - N_free                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_free;
  let $assert_text = '$operation' will free $object_free objects.;
  source include/assert.inc;
  let $object_free=;
  SET @diff = (SELECT CURRENT_COUNT_USED - N_curr                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_count;
  let $assert_text = '$operation' will leave $object_count objects.;
  source include/assert.inc;
  let $object_count=;
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
echo ###############################################################################;
  eval $operation;
  SELECT         after_stats.EVENT_NAME                                           AS Name,         after_stats.COUNT_ALLOC                  - before_stats.N_alloc  AS N_alloc,         after_stats.COUNT_FREE                   - before_stats.N_free   AS N_free,         after_stats.CURRENT_COUNT_USED           - before_stats.N_curr   AS N_curr,         after_stats.SUM_NUMBER_OF_BYTES_ALLOC    - before_stats.Sz_alloc AS Sz_alloc,         after_STATS.SUM_NUMBER_OF_BYTES_FREE     - before_stats.Sz_free  AS Sz_free,         after_stats.CURRENT_NUMBER_OF_BYTES_USED - before_stats.Sz_curr  AS Sz_curr    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SELECT         SUM(after_stats.CURRENT_COUNT_USED) - SUM(before_stats.N_curr)   AS N_left,         SUM(after_stats.CURRENT_NUMBER_OF_BYTES_USED) - SUM(before_stats.Sz_curr)  AS Sz_left    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SET @diff = (SELECT COUNT_ALLOC - N_alloc                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_alloc;
  let $assert_text = '$operation' will allocate $object_alloc objects.;
  source include/assert.inc;
  let $object_alloc=;
  SET @diff = (SELECT COUNT_FREE - N_free                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_free;
  let $assert_text = '$operation' will free $object_free objects.;
  source include/assert.inc;
  let $object_free=;
  SET @diff = (SELECT CURRENT_COUNT_USED - N_curr                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_count;
  let $assert_text = '$operation' will leave $object_count objects.;
  source include/assert.inc;
  let $object_count=;
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
echo ###############################################################################;
  eval $operation;
  SELECT         after_stats.EVENT_NAME                                           AS Name,         after_stats.COUNT_ALLOC                  - before_stats.N_alloc  AS N_alloc,         after_stats.COUNT_FREE                   - before_stats.N_free   AS N_free,         after_stats.CURRENT_COUNT_USED           - before_stats.N_curr   AS N_curr,         after_stats.SUM_NUMBER_OF_BYTES_ALLOC    - before_stats.Sz_alloc AS Sz_alloc,         after_STATS.SUM_NUMBER_OF_BYTES_FREE     - before_stats.Sz_free  AS Sz_free,         after_stats.CURRENT_NUMBER_OF_BYTES_USED - before_stats.Sz_curr  AS Sz_curr    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SELECT         SUM(after_stats.CURRENT_COUNT_USED) - SUM(before_stats.N_curr)   AS N_left,         SUM(after_stats.CURRENT_NUMBER_OF_BYTES_USED) - SUM(before_stats.Sz_curr)  AS Sz_left    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SET @diff = (SELECT COUNT_ALLOC - N_alloc                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_alloc;
  let $assert_text = '$operation' will allocate $object_alloc objects.;
  source include/assert.inc;
  let $object_alloc=;
  SET @diff = (SELECT COUNT_FREE - N_free                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_free;
  let $assert_text = '$operation' will free $object_free objects.;
  source include/assert.inc;
  let $object_free=;
  SET @diff = (SELECT CURRENT_COUNT_USED - N_curr                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_count;
  let $assert_text = '$operation' will leave $object_count objects.;
  source include/assert.inc;
  let $object_count=;
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
echo ###############################################################################;
  eval $operation;
  SELECT         after_stats.EVENT_NAME                                           AS Name,         after_stats.COUNT_ALLOC                  - before_stats.N_alloc  AS N_alloc,         after_stats.COUNT_FREE                   - before_stats.N_free   AS N_free,         after_stats.CURRENT_COUNT_USED           - before_stats.N_curr   AS N_curr,         after_stats.SUM_NUMBER_OF_BYTES_ALLOC    - before_stats.Sz_alloc AS Sz_alloc,         after_STATS.SUM_NUMBER_OF_BYTES_FREE     - before_stats.Sz_free  AS Sz_free,         after_stats.CURRENT_NUMBER_OF_BYTES_USED - before_stats.Sz_curr  AS Sz_curr    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SELECT         SUM(after_stats.CURRENT_COUNT_USED) - SUM(before_stats.N_curr)   AS N_left,         SUM(after_stats.CURRENT_NUMBER_OF_BYTES_USED) - SUM(before_stats.Sz_curr)  AS Sz_left    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SET @diff = (SELECT COUNT_ALLOC - N_alloc                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_alloc;
  let $assert_text = '$operation' will allocate $object_alloc objects.;
  source include/assert.inc;
  let $object_alloc=;
  SET @diff = (SELECT COUNT_FREE - N_free                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_free;
  let $assert_text = '$operation' will free $object_free objects.;
  source include/assert.inc;
  let $object_free=;
  SET @diff = (SELECT CURRENT_COUNT_USED - N_curr                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_count;
  let $assert_text = '$operation' will leave $object_count objects.;
  source include/assert.inc;
  let $object_count=;
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
echo ###############################################################################;
  eval $operation;
  SELECT         after_stats.EVENT_NAME                                           AS Name,         after_stats.COUNT_ALLOC                  - before_stats.N_alloc  AS N_alloc,         after_stats.COUNT_FREE                   - before_stats.N_free   AS N_free,         after_stats.CURRENT_COUNT_USED           - before_stats.N_curr   AS N_curr,         after_stats.SUM_NUMBER_OF_BYTES_ALLOC    - before_stats.Sz_alloc AS Sz_alloc,         after_STATS.SUM_NUMBER_OF_BYTES_FREE     - before_stats.Sz_free  AS Sz_free,         after_stats.CURRENT_NUMBER_OF_BYTES_USED - before_stats.Sz_curr  AS Sz_curr    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SELECT         SUM(after_stats.CURRENT_COUNT_USED) - SUM(before_stats.N_curr)   AS N_left,         SUM(after_stats.CURRENT_NUMBER_OF_BYTES_USED) - SUM(before_stats.Sz_curr)  AS Sz_left    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SET @diff = (SELECT COUNT_ALLOC - N_alloc                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_alloc;
  let $assert_text = '$operation' will allocate $object_alloc objects.;
  source include/assert.inc;
  let $object_alloc=;
  SET @diff = (SELECT COUNT_FREE - N_free                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_free;
  let $assert_text = '$operation' will free $object_free objects.;
  source include/assert.inc;
  let $object_free=;
  SET @diff = (SELECT CURRENT_COUNT_USED - N_curr                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_count;
  let $assert_text = '$operation' will leave $object_count objects.;
  source include/assert.inc;
  let $object_count=;
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
echo ###############################################################################;
  eval $operation;
  SELECT         after_stats.EVENT_NAME                                           AS Name,         after_stats.COUNT_ALLOC                  - before_stats.N_alloc  AS N_alloc,         after_stats.COUNT_FREE                   - before_stats.N_free   AS N_free,         after_stats.CURRENT_COUNT_USED           - before_stats.N_curr   AS N_curr,         after_stats.SUM_NUMBER_OF_BYTES_ALLOC    - before_stats.Sz_alloc AS Sz_alloc,         after_STATS.SUM_NUMBER_OF_BYTES_FREE     - before_stats.Sz_free  AS Sz_free,         after_stats.CURRENT_NUMBER_OF_BYTES_USED - before_stats.Sz_curr  AS Sz_curr    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SELECT         SUM(after_stats.CURRENT_COUNT_USED) - SUM(before_stats.N_curr)   AS N_left,         SUM(after_stats.CURRENT_NUMBER_OF_BYTES_USED) - SUM(before_stats.Sz_curr)  AS Sz_left    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SET @diff = (SELECT COUNT_ALLOC - N_alloc                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_alloc;
  let $assert_text = '$operation' will allocate $object_alloc objects.;
  source include/assert.inc;
  let $object_alloc=;
  SET @diff = (SELECT COUNT_FREE - N_free                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_free;
  let $assert_text = '$operation' will free $object_free objects.;
  source include/assert.inc;
  let $object_free=;
  SET @diff = (SELECT CURRENT_COUNT_USED - N_curr                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_count;
  let $assert_text = '$operation' will leave $object_count objects.;
  source include/assert.inc;
  let $object_count=;
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
echo ###############################################################################;
  eval $operation;
  SELECT         after_stats.EVENT_NAME                                           AS Name,         after_stats.COUNT_ALLOC                  - before_stats.N_alloc  AS N_alloc,         after_stats.COUNT_FREE                   - before_stats.N_free   AS N_free,         after_stats.CURRENT_COUNT_USED           - before_stats.N_curr   AS N_curr,         after_stats.SUM_NUMBER_OF_BYTES_ALLOC    - before_stats.Sz_alloc AS Sz_alloc,         after_STATS.SUM_NUMBER_OF_BYTES_FREE     - before_stats.Sz_free  AS Sz_free,         after_stats.CURRENT_NUMBER_OF_BYTES_USED - before_stats.Sz_curr  AS Sz_curr    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SELECT         SUM(after_stats.CURRENT_COUNT_USED) - SUM(before_stats.N_curr)   AS N_left,         SUM(after_stats.CURRENT_NUMBER_OF_BYTES_USED) - SUM(before_stats.Sz_curr)  AS Sz_left    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SET @diff = (SELECT COUNT_ALLOC - N_alloc                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_alloc;
  let $assert_text = '$operation' will allocate $object_alloc objects.;
  source include/assert.inc;
  let $object_alloc=;
  SET @diff = (SELECT COUNT_FREE - N_free                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_free;
  let $assert_text = '$operation' will free $object_free objects.;
  source include/assert.inc;
  let $object_free=;
  SET @diff = (SELECT CURRENT_COUNT_USED - N_curr                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_count;
  let $assert_text = '$operation' will leave $object_count objects.;
  source include/assert.inc;
  let $object_count=;
DROP TABLE dd_pfs.mem_events;
DROP SCHEMA dd_pfs;
create schema s;
create table s.t1(i int);
create table s.t2(i int) tablespace innodb_system;
drop schema s;
source include/dd_pfs_save_state.inc;
source include/dd_pfs_report_state.inc;
SET foreign_key_checks= 0;
CREATE TABLE test.tables (  `id` bigint unsigned NOT NULL AUTO_INCREMENT,  `schema_id` bigint unsigned NOT NULL,  `name` varchar(64) COLLATE utf8_bin NOT NULL,  `type` enum('BASE TABLE','VIEW','SYSTEM VIEW') COLLATE utf8_bin NOT NULL,  `engine` varchar(64) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,  `mysql_version_id` int unsigned NOT NULL,  `row_format` enum('Fixed','Dynamic','Compressed','Redundant','Compact','Paged') COLLATE utf8_bin DEFAULT NULL,  `collation_id` bigint unsigned DEFAULT NULL,  `comment` varchar(2048) COLLATE utf8_bin NOT NULL,  `hidden` enum('Visible','System','SE','DDL') COLLATE utf8_bin NOT NULL,  `options` mediumtext COLLATE utf8_bin,  `se_private_data` mediumtext COLLATE utf8_bin,  `se_private_id` bigint unsigned DEFAULT NULL,  `tablespace_id` bigint unsigned DEFAULT NULL,  `partition_type` enum('HASH','KEY_51','KEY_55','LINEAR_HASH','LINEAR_KEY_51','LINEAR_KEY_55','RANGE','LIST','RANGE_COLUMNS','LIST_COLUMNS','AUTO','AUTO_LINEAR') COLLATE utf8_bin DEFAULT NULL,  `partition_expression` varchar(2048) COLLATE utf8_bin DEFAULT NULL,  `partition_expression_utf8` varchar(2048) COLLATE utf8_bin DEFAULT NULL,  `default_partitioning` enum('NO','YES','NUMBER') COLLATE utf8_bin DEFAULT NULL,  `subpartition_type` enum('HASH','KEY_51','KEY_55','LINEAR_HASH','LINEAR_KEY_51','LINEAR_KEY_55') COLLATE utf8_bin DEFAULT NULL,  `subpartition_expression` varchar(2048) COLLATE utf8_bin DEFAULT NULL,  `subpartition_expression_utf8` varchar(2048) COLLATE utf8_bin DEFAULT NULL,  `default_subpartitioning` enum('NO','YES','NUMBER') COLLATE utf8_bin DEFAULT NULL,  `created` timestamp NOT NULL,  `last_altered` timestamp NOT NULL,  `view_definition` longblob,  `view_definition_utf8` longtext COLLATE utf8_bin,  `view_check_option` enum('NONE','LOCAL','CASCADED') COLLATE utf8_bin DEFAULT NULL,  `view_is_updatable` enum('NO','YES') COLLATE utf8_bin DEFAULT NULL,  `view_algorithm` enum('UNDEFINED','TEMPTABLE','MERGE') COLLATE utf8_bin DEFAULT NULL,  `view_security_type` enum('DEFAULT','INVOKER','DEFINER') COLLATE utf8_bin DEFAULT NULL,  `view_definer` varchar(192) COLLATE utf8_bin DEFAULT NULL,  `view_client_collation_id` bigint unsigned DEFAULT NULL,  `view_connection_collation_id` bigint unsigned DEFAULT NULL,  `view_column_names` longtext COLLATE utf8_bin,  `last_checked_for_upgrade_version_id` int unsigned NOT NULL,  `engine_attribute` json DEFAULT NULL,  `secondary_engine_attribute` json DEFAULT NULL,  PRIMARY KEY (`id`),  UNIQUE KEY `schema_id` (`schema_id`,`name`),  UNIQUE KEY `engine` (`engine`,`se_private_id`),  KEY `engine_2` (`engine`),  KEY `collation_id` (`collation_id`),  KEY `tablespace_id` (`tablespace_id`),  KEY `type` (`type`),  KEY `view_client_collation_id` (`view_client_collation_id`),  KEY `view_connection_collation_id` (`view_connection_collation_id`),  KEY `type_2` (`type`,`view_definer`),  CONSTRAINT `tables_ibfk_1` FOREIGN KEY (`schema_id`) REFERENCES test.dummy (`id`),  CONSTRAINT `tables_ibfk_2` FOREIGN KEY (`collation_id`) REFERENCES test.dummy (`id`),  CONSTRAINT `tables_ibfk_3` FOREIGN KEY (`tablespace_id`) REFERENCES test.dummy (`id`),  CONSTRAINT `tables_ibfk_4` FOREIGN KEY (`view_client_collation_id`) REFERENCES test.dummy (`id`),  CONSTRAINT `tables_ibfk_5` FOREIGN KEY (`view_connection_collation_id`) REFERENCES test.dummy (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin STATS_PERSISTENT=0 ROW_FORMAT=DYNAMIC;
SET foreign_key_checks= DEFAULT;
DROP TABLE test.tables;
while ($i > 0)  dec $i;
  eval CREATE TABLE test.t_$i (i int) TABLESPACE innodb_system;
  eval SELECT * FROM  test.t_$i;
  eval FLUSH TABLES test.t_$i;
while ($i > 0)  dec $i;
  eval SELECT * FROM  test.t_$i;
while ($i > 0)  dec $i;
  eval DROP TABLE  test.t_$i;
CREATE SCHEMA s;
while ($i > 0)  dec $i;
  eval CREATE TABLE s.t_$i (i int, j int, k int, l int);
  # Pull in DD objects for tables in cache.  eval SELECT * FROM s.t_$i;
CREATE SCHEMA s1;
CREATE TABLE s1.t_myisam(i INT) ENGINE=MYISAM;
CREATE VIEW s1.v1 AS SELECT * FROM s1.t_myisam;
SELECT * FROM s1.v1;
CREATE SCHEMA s2;
CREATE TABLE s2.t_innodb(i INT) TABLESPACE=innodb_system;
CREATE VIEW v2 AS SELECT * FROM s2.t_innodb;
SELECT * FROM v2;
DROP VIEW v2;
CREATE SCHEMA s3;
CREATE TABLE s3.t_innodb(i INT) TABLESPACE=innodb_system;
CREATE VIEW s3.v3 AS SELECT * FROM s3.t_innodb;
SELECT * FROM s3.v3;
CREATE SCHEMA s4;
CREATE VIEW s4.v4 AS SELECT 1 AS i;
CREATE VIEW s4.v5 AS SELECT * FROM s4.v4;
SELECT * FROM s4.v5;
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
TRUNCATE TABLE performance_schema.memory_summary_global_by_event_name;
CREATE SCHEMA dd_pfs;
CREATE TABLE dd_pfs.mem_events (Seq int auto_increment PRIMARY KEY, Query varchar(1000)) AS  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
echo ###############################################################################;
  eval $operation;
  SELECT         after_stats.EVENT_NAME                                           AS Name,         after_stats.COUNT_ALLOC                  - before_stats.N_alloc  AS N_alloc,         after_stats.COUNT_FREE                   - before_stats.N_free   AS N_free,         after_stats.CURRENT_COUNT_USED           - before_stats.N_curr   AS N_curr,         after_stats.SUM_NUMBER_OF_BYTES_ALLOC    - before_stats.Sz_alloc AS Sz_alloc,         after_STATS.SUM_NUMBER_OF_BYTES_FREE     - before_stats.Sz_free  AS Sz_free,         after_stats.CURRENT_NUMBER_OF_BYTES_USED - before_stats.Sz_curr  AS Sz_curr    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SELECT         SUM(after_stats.CURRENT_COUNT_USED) - SUM(before_stats.N_curr)   AS N_left,         SUM(after_stats.CURRENT_NUMBER_OF_BYTES_USED) - SUM(before_stats.Sz_curr)  AS Sz_left    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SET @diff = (SELECT COUNT_ALLOC - N_alloc                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_alloc;
  let $assert_text = '$operation' will allocate $object_alloc objects.;
  source include/assert.inc;
  let $object_alloc=;
  SET @diff = (SELECT COUNT_FREE - N_free                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_free;
  let $assert_text = '$operation' will free $object_free objects.;
  source include/assert.inc;
  let $object_free=;
  SET @diff = (SELECT CURRENT_COUNT_USED - N_curr                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_count;
  let $assert_text = '$operation' will leave $object_count objects.;
  source include/assert.inc;
  let $object_count=;
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
echo ###############################################################################;
  eval $operation;
  SELECT         after_stats.EVENT_NAME                                           AS Name,         after_stats.COUNT_ALLOC                  - before_stats.N_alloc  AS N_alloc,         after_stats.COUNT_FREE                   - before_stats.N_free   AS N_free,         after_stats.CURRENT_COUNT_USED           - before_stats.N_curr   AS N_curr,         after_stats.SUM_NUMBER_OF_BYTES_ALLOC    - before_stats.Sz_alloc AS Sz_alloc,         after_STATS.SUM_NUMBER_OF_BYTES_FREE     - before_stats.Sz_free  AS Sz_free,         after_stats.CURRENT_NUMBER_OF_BYTES_USED - before_stats.Sz_curr  AS Sz_curr    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SELECT         SUM(after_stats.CURRENT_COUNT_USED) - SUM(before_stats.N_curr)   AS N_left,         SUM(after_stats.CURRENT_NUMBER_OF_BYTES_USED) - SUM(before_stats.Sz_curr)  AS Sz_left    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SET @diff = (SELECT COUNT_ALLOC - N_alloc                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_alloc;
  let $assert_text = '$operation' will allocate $object_alloc objects.;
  source include/assert.inc;
  let $object_alloc=;
  SET @diff = (SELECT COUNT_FREE - N_free                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_free;
  let $assert_text = '$operation' will free $object_free objects.;
  source include/assert.inc;
  let $object_free=;
  SET @diff = (SELECT CURRENT_COUNT_USED - N_curr                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_count;
  let $assert_text = '$operation' will leave $object_count objects.;
  source include/assert.inc;
  let $object_count=;
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
echo ###############################################################################;
  eval $operation;
  SELECT         after_stats.EVENT_NAME                                           AS Name,         after_stats.COUNT_ALLOC                  - before_stats.N_alloc  AS N_alloc,         after_stats.COUNT_FREE                   - before_stats.N_free   AS N_free,         after_stats.CURRENT_COUNT_USED           - before_stats.N_curr   AS N_curr,         after_stats.SUM_NUMBER_OF_BYTES_ALLOC    - before_stats.Sz_alloc AS Sz_alloc,         after_STATS.SUM_NUMBER_OF_BYTES_FREE     - before_stats.Sz_free  AS Sz_free,         after_stats.CURRENT_NUMBER_OF_BYTES_USED - before_stats.Sz_curr  AS Sz_curr    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SELECT         SUM(after_stats.CURRENT_COUNT_USED) - SUM(before_stats.N_curr)   AS N_left,         SUM(after_stats.CURRENT_NUMBER_OF_BYTES_USED) - SUM(before_stats.Sz_curr)  AS Sz_left    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SET @diff = (SELECT COUNT_ALLOC - N_alloc                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_alloc;
  let $assert_text = '$operation' will allocate $object_alloc objects.;
  source include/assert.inc;
  let $object_alloc=;
  SET @diff = (SELECT COUNT_FREE - N_free                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_free;
  let $assert_text = '$operation' will free $object_free objects.;
  source include/assert.inc;
  let $object_free=;
  SET @diff = (SELECT CURRENT_COUNT_USED - N_curr                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_count;
  let $assert_text = '$operation' will leave $object_count objects.;
  source include/assert.inc;
  let $object_count=;
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
echo ###############################################################################;
  eval $operation;
  SELECT         after_stats.EVENT_NAME                                           AS Name,         after_stats.COUNT_ALLOC                  - before_stats.N_alloc  AS N_alloc,         after_stats.COUNT_FREE                   - before_stats.N_free   AS N_free,         after_stats.CURRENT_COUNT_USED           - before_stats.N_curr   AS N_curr,         after_stats.SUM_NUMBER_OF_BYTES_ALLOC    - before_stats.Sz_alloc AS Sz_alloc,         after_STATS.SUM_NUMBER_OF_BYTES_FREE     - before_stats.Sz_free  AS Sz_free,         after_stats.CURRENT_NUMBER_OF_BYTES_USED - before_stats.Sz_curr  AS Sz_curr    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SELECT         SUM(after_stats.CURRENT_COUNT_USED) - SUM(before_stats.N_curr)   AS N_left,         SUM(after_stats.CURRENT_NUMBER_OF_BYTES_USED) - SUM(before_stats.Sz_curr)  AS Sz_left    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SET @diff = (SELECT COUNT_ALLOC - N_alloc                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_alloc;
  let $assert_text = '$operation' will allocate $object_alloc objects.;
  source include/assert.inc;
  let $object_alloc=;
  SET @diff = (SELECT COUNT_FREE - N_free                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_free;
  let $assert_text = '$operation' will free $object_free objects.;
  source include/assert.inc;
  let $object_free=;
  SET @diff = (SELECT CURRENT_COUNT_USED - N_curr                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_count;
  let $assert_text = '$operation' will leave $object_count objects.;
  source include/assert.inc;
  let $object_count=;
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
echo ###############################################################################;
  eval $operation;
  SELECT         after_stats.EVENT_NAME                                           AS Name,         after_stats.COUNT_ALLOC                  - before_stats.N_alloc  AS N_alloc,         after_stats.COUNT_FREE                   - before_stats.N_free   AS N_free,         after_stats.CURRENT_COUNT_USED           - before_stats.N_curr   AS N_curr,         after_stats.SUM_NUMBER_OF_BYTES_ALLOC    - before_stats.Sz_alloc AS Sz_alloc,         after_STATS.SUM_NUMBER_OF_BYTES_FREE     - before_stats.Sz_free  AS Sz_free,         after_stats.CURRENT_NUMBER_OF_BYTES_USED - before_stats.Sz_curr  AS Sz_curr    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SELECT         SUM(after_stats.CURRENT_COUNT_USED) - SUM(before_stats.N_curr)   AS N_left,         SUM(after_stats.CURRENT_NUMBER_OF_BYTES_USED) - SUM(before_stats.Sz_curr)  AS Sz_left    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SET @diff = (SELECT COUNT_ALLOC - N_alloc                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_alloc;
  let $assert_text = '$operation' will allocate $object_alloc objects.;
  source include/assert.inc;
  let $object_alloc=;
  SET @diff = (SELECT COUNT_FREE - N_free                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_free;
  let $assert_text = '$operation' will free $object_free objects.;
  source include/assert.inc;
  let $object_free=;
  SET @diff = (SELECT CURRENT_COUNT_USED - N_curr                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_count;
  let $assert_text = '$operation' will leave $object_count objects.;
  source include/assert.inc;
  let $object_count=;
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
echo ###############################################################################;
  eval $operation;
  SELECT         after_stats.EVENT_NAME                                           AS Name,         after_stats.COUNT_ALLOC                  - before_stats.N_alloc  AS N_alloc,         after_stats.COUNT_FREE                   - before_stats.N_free   AS N_free,         after_stats.CURRENT_COUNT_USED           - before_stats.N_curr   AS N_curr,         after_stats.SUM_NUMBER_OF_BYTES_ALLOC    - before_stats.Sz_alloc AS Sz_alloc,         after_STATS.SUM_NUMBER_OF_BYTES_FREE     - before_stats.Sz_free  AS Sz_free,         after_stats.CURRENT_NUMBER_OF_BYTES_USED - before_stats.Sz_curr  AS Sz_curr    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SELECT         SUM(after_stats.CURRENT_COUNT_USED) - SUM(before_stats.N_curr)   AS N_left,         SUM(after_stats.CURRENT_NUMBER_OF_BYTES_USED) - SUM(before_stats.Sz_curr)  AS Sz_left    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SET @diff = (SELECT COUNT_ALLOC - N_alloc                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_alloc;
  let $assert_text = '$operation' will allocate $object_alloc objects.;
  source include/assert.inc;
  let $object_alloc=;
  SET @diff = (SELECT COUNT_FREE - N_free                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_free;
  let $assert_text = '$operation' will free $object_free objects.;
  source include/assert.inc;
  let $object_free=;
  SET @diff = (SELECT CURRENT_COUNT_USED - N_curr                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_count;
  let $assert_text = '$operation' will leave $object_count objects.;
  source include/assert.inc;
  let $object_count=;
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
echo ###############################################################################;
  eval $operation;
  SELECT         after_stats.EVENT_NAME                                           AS Name,         after_stats.COUNT_ALLOC                  - before_stats.N_alloc  AS N_alloc,         after_stats.COUNT_FREE                   - before_stats.N_free   AS N_free,         after_stats.CURRENT_COUNT_USED           - before_stats.N_curr   AS N_curr,         after_stats.SUM_NUMBER_OF_BYTES_ALLOC    - before_stats.Sz_alloc AS Sz_alloc,         after_STATS.SUM_NUMBER_OF_BYTES_FREE     - before_stats.Sz_free  AS Sz_free,         after_stats.CURRENT_NUMBER_OF_BYTES_USED - before_stats.Sz_curr  AS Sz_curr    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SELECT         SUM(after_stats.CURRENT_COUNT_USED) - SUM(before_stats.N_curr)   AS N_left,         SUM(after_stats.CURRENT_NUMBER_OF_BYTES_USED) - SUM(before_stats.Sz_curr)  AS Sz_left    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SET @diff = (SELECT COUNT_ALLOC - N_alloc                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_alloc;
  let $assert_text = '$operation' will allocate $object_alloc objects.;
  source include/assert.inc;
  let $object_alloc=;
  SET @diff = (SELECT COUNT_FREE - N_free                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_free;
  let $assert_text = '$operation' will free $object_free objects.;
  source include/assert.inc;
  let $object_free=;
  SET @diff = (SELECT CURRENT_COUNT_USED - N_curr                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_count;
  let $assert_text = '$operation' will leave $object_count objects.;
  source include/assert.inc;
  let $object_count=;
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
echo ###############################################################################;
  eval $operation;
  SELECT         after_stats.EVENT_NAME                                           AS Name,         after_stats.COUNT_ALLOC                  - before_stats.N_alloc  AS N_alloc,         after_stats.COUNT_FREE                   - before_stats.N_free   AS N_free,         after_stats.CURRENT_COUNT_USED           - before_stats.N_curr   AS N_curr,         after_stats.SUM_NUMBER_OF_BYTES_ALLOC    - before_stats.Sz_alloc AS Sz_alloc,         after_STATS.SUM_NUMBER_OF_BYTES_FREE     - before_stats.Sz_free  AS Sz_free,         after_stats.CURRENT_NUMBER_OF_BYTES_USED - before_stats.Sz_curr  AS Sz_curr    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SELECT         SUM(after_stats.CURRENT_COUNT_USED) - SUM(before_stats.N_curr)   AS N_left,         SUM(after_stats.CURRENT_NUMBER_OF_BYTES_USED) - SUM(before_stats.Sz_curr)  AS Sz_left    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SET @diff = (SELECT COUNT_ALLOC - N_alloc                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_alloc;
  let $assert_text = '$operation' will allocate $object_alloc objects.;
  source include/assert.inc;
  let $object_alloc=;
  SET @diff = (SELECT COUNT_FREE - N_free                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_free;
  let $assert_text = '$operation' will free $object_free objects.;
  source include/assert.inc;
  let $object_free=;
  SET @diff = (SELECT CURRENT_COUNT_USED - N_curr                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_count;
  let $assert_text = '$operation' will leave $object_count objects.;
  source include/assert.inc;
  let $object_count=;
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
echo ###############################################################################;
  eval $operation;
  SELECT         after_stats.EVENT_NAME                                           AS Name,         after_stats.COUNT_ALLOC                  - before_stats.N_alloc  AS N_alloc,         after_stats.COUNT_FREE                   - before_stats.N_free   AS N_free,         after_stats.CURRENT_COUNT_USED           - before_stats.N_curr   AS N_curr,         after_stats.SUM_NUMBER_OF_BYTES_ALLOC    - before_stats.Sz_alloc AS Sz_alloc,         after_STATS.SUM_NUMBER_OF_BYTES_FREE     - before_stats.Sz_free  AS Sz_free,         after_stats.CURRENT_NUMBER_OF_BYTES_USED - before_stats.Sz_curr  AS Sz_curr    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SELECT         SUM(after_stats.CURRENT_COUNT_USED) - SUM(before_stats.N_curr)   AS N_left,         SUM(after_stats.CURRENT_NUMBER_OF_BYTES_USED) - SUM(before_stats.Sz_curr)  AS Sz_left    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SET @diff = (SELECT COUNT_ALLOC - N_alloc                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_alloc;
  let $assert_text = '$operation' will allocate $object_alloc objects.;
  source include/assert.inc;
  let $object_alloc=;
  SET @diff = (SELECT COUNT_FREE - N_free                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_free;
  let $assert_text = '$operation' will free $object_free objects.;
  source include/assert.inc;
  let $object_free=;
  SET @diff = (SELECT CURRENT_COUNT_USED - N_curr                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_count;
  let $assert_text = '$operation' will leave $object_count objects.;
  source include/assert.inc;
  let $object_count=;
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
echo ###############################################################################;
  eval $operation;
  SELECT         after_stats.EVENT_NAME                                           AS Name,         after_stats.COUNT_ALLOC                  - before_stats.N_alloc  AS N_alloc,         after_stats.COUNT_FREE                   - before_stats.N_free   AS N_free,         after_stats.CURRENT_COUNT_USED           - before_stats.N_curr   AS N_curr,         after_stats.SUM_NUMBER_OF_BYTES_ALLOC    - before_stats.Sz_alloc AS Sz_alloc,         after_STATS.SUM_NUMBER_OF_BYTES_FREE     - before_stats.Sz_free  AS Sz_free,         after_stats.CURRENT_NUMBER_OF_BYTES_USED - before_stats.Sz_curr  AS Sz_curr    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SELECT         SUM(after_stats.CURRENT_COUNT_USED) - SUM(before_stats.N_curr)   AS N_left,         SUM(after_stats.CURRENT_NUMBER_OF_BYTES_USED) - SUM(before_stats.Sz_curr)  AS Sz_left    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SET @diff = (SELECT COUNT_ALLOC - N_alloc                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_alloc;
  let $assert_text = '$operation' will allocate $object_alloc objects.;
  source include/assert.inc;
  let $object_alloc=;
  SET @diff = (SELECT COUNT_FREE - N_free                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_free;
  let $assert_text = '$operation' will free $object_free objects.;
  source include/assert.inc;
  let $object_free=;
  SET @diff = (SELECT CURRENT_COUNT_USED - N_curr                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_count;
  let $assert_text = '$operation' will leave $object_count objects.;
  source include/assert.inc;
  let $object_count=;
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
echo ###############################################################################;
  eval $operation;
  SELECT         after_stats.EVENT_NAME                                           AS Name,         after_stats.COUNT_ALLOC                  - before_stats.N_alloc  AS N_alloc,         after_stats.COUNT_FREE                   - before_stats.N_free   AS N_free,         after_stats.CURRENT_COUNT_USED           - before_stats.N_curr   AS N_curr,         after_stats.SUM_NUMBER_OF_BYTES_ALLOC    - before_stats.Sz_alloc AS Sz_alloc,         after_STATS.SUM_NUMBER_OF_BYTES_FREE     - before_stats.Sz_free  AS Sz_free,         after_stats.CURRENT_NUMBER_OF_BYTES_USED - before_stats.Sz_curr  AS Sz_curr    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SELECT         SUM(after_stats.CURRENT_COUNT_USED) - SUM(before_stats.N_curr)   AS N_left,         SUM(after_stats.CURRENT_NUMBER_OF_BYTES_USED) - SUM(before_stats.Sz_curr)  AS Sz_left    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SET @diff = (SELECT COUNT_ALLOC - N_alloc                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_alloc;
  let $assert_text = '$operation' will allocate $object_alloc objects.;
  source include/assert.inc;
  let $object_alloc=;
  SET @diff = (SELECT COUNT_FREE - N_free                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_free;
  let $assert_text = '$operation' will free $object_free objects.;
  source include/assert.inc;
  let $object_free=;
  SET @diff = (SELECT CURRENT_COUNT_USED - N_curr                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_count;
  let $assert_text = '$operation' will leave $object_count objects.;
  source include/assert.inc;
  let $object_count=;
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
echo ###############################################################################;
  eval $operation;
  SELECT         after_stats.EVENT_NAME                                           AS Name,         after_stats.COUNT_ALLOC                  - before_stats.N_alloc  AS N_alloc,         after_stats.COUNT_FREE                   - before_stats.N_free   AS N_free,         after_stats.CURRENT_COUNT_USED           - before_stats.N_curr   AS N_curr,         after_stats.SUM_NUMBER_OF_BYTES_ALLOC    - before_stats.Sz_alloc AS Sz_alloc,         after_STATS.SUM_NUMBER_OF_BYTES_FREE     - before_stats.Sz_free  AS Sz_free,         after_stats.CURRENT_NUMBER_OF_BYTES_USED - before_stats.Sz_curr  AS Sz_curr    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SELECT         SUM(after_stats.CURRENT_COUNT_USED) - SUM(before_stats.N_curr)   AS N_left,         SUM(after_stats.CURRENT_NUMBER_OF_BYTES_USED) - SUM(before_stats.Sz_curr)  AS Sz_left    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SET @diff = (SELECT COUNT_ALLOC - N_alloc                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_alloc;
  let $assert_text = '$operation' will allocate $object_alloc objects.;
  source include/assert.inc;
  let $object_alloc=;
  SET @diff = (SELECT COUNT_FREE - N_free                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_free;
  let $assert_text = '$operation' will free $object_free objects.;
  source include/assert.inc;
  let $object_free=;
  SET @diff = (SELECT CURRENT_COUNT_USED - N_curr                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_count;
  let $assert_text = '$operation' will leave $object_count objects.;
  source include/assert.inc;
  let $object_count=;
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
echo ###############################################################################;
  eval $operation;
  SELECT         after_stats.EVENT_NAME                                           AS Name,         after_stats.COUNT_ALLOC                  - before_stats.N_alloc  AS N_alloc,         after_stats.COUNT_FREE                   - before_stats.N_free   AS N_free,         after_stats.CURRENT_COUNT_USED           - before_stats.N_curr   AS N_curr,         after_stats.SUM_NUMBER_OF_BYTES_ALLOC    - before_stats.Sz_alloc AS Sz_alloc,         after_STATS.SUM_NUMBER_OF_BYTES_FREE     - before_stats.Sz_free  AS Sz_free,         after_stats.CURRENT_NUMBER_OF_BYTES_USED - before_stats.Sz_curr  AS Sz_curr    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SELECT         SUM(after_stats.CURRENT_COUNT_USED) - SUM(before_stats.N_curr)   AS N_left,         SUM(after_stats.CURRENT_NUMBER_OF_BYTES_USED) - SUM(before_stats.Sz_curr)  AS Sz_left    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SET @diff = (SELECT COUNT_ALLOC - N_alloc                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_alloc;
  let $assert_text = '$operation' will allocate $object_alloc objects.;
  source include/assert.inc;
  let $object_alloc=;
  SET @diff = (SELECT COUNT_FREE - N_free                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_free;
  let $assert_text = '$operation' will free $object_free objects.;
  source include/assert.inc;
  let $object_free=;
  SET @diff = (SELECT CURRENT_COUNT_USED - N_curr                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_count;
  let $assert_text = '$operation' will leave $object_count objects.;
  source include/assert.inc;
  let $object_count=;
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
echo ###############################################################################;
  eval $operation;
  SELECT         after_stats.EVENT_NAME                                           AS Name,         after_stats.COUNT_ALLOC                  - before_stats.N_alloc  AS N_alloc,         after_stats.COUNT_FREE                   - before_stats.N_free   AS N_free,         after_stats.CURRENT_COUNT_USED           - before_stats.N_curr   AS N_curr,         after_stats.SUM_NUMBER_OF_BYTES_ALLOC    - before_stats.Sz_alloc AS Sz_alloc,         after_STATS.SUM_NUMBER_OF_BYTES_FREE     - before_stats.Sz_free  AS Sz_free,         after_stats.CURRENT_NUMBER_OF_BYTES_USED - before_stats.Sz_curr  AS Sz_curr    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SELECT         SUM(after_stats.CURRENT_COUNT_USED) - SUM(before_stats.N_curr)   AS N_left,         SUM(after_stats.CURRENT_NUMBER_OF_BYTES_USED) - SUM(before_stats.Sz_curr)  AS Sz_left    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SET @diff = (SELECT COUNT_ALLOC - N_alloc                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_alloc;
  let $assert_text = '$operation' will allocate $object_alloc objects.;
  source include/assert.inc;
  let $object_alloc=;
  SET @diff = (SELECT COUNT_FREE - N_free                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_free;
  let $assert_text = '$operation' will free $object_free objects.;
  source include/assert.inc;
  let $object_free=;
  SET @diff = (SELECT CURRENT_COUNT_USED - N_curr                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_count;
  let $assert_text = '$operation' will leave $object_count objects.;
  source include/assert.inc;
  let $object_count=;
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
echo ###############################################################################;
  eval $operation;
  SELECT         after_stats.EVENT_NAME                                           AS Name,         after_stats.COUNT_ALLOC                  - before_stats.N_alloc  AS N_alloc,         after_stats.COUNT_FREE                   - before_stats.N_free   AS N_free,         after_stats.CURRENT_COUNT_USED           - before_stats.N_curr   AS N_curr,         after_stats.SUM_NUMBER_OF_BYTES_ALLOC    - before_stats.Sz_alloc AS Sz_alloc,         after_STATS.SUM_NUMBER_OF_BYTES_FREE     - before_stats.Sz_free  AS Sz_free,         after_stats.CURRENT_NUMBER_OF_BYTES_USED - before_stats.Sz_curr  AS Sz_curr    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SELECT         SUM(after_stats.CURRENT_COUNT_USED) - SUM(before_stats.N_curr)   AS N_left,         SUM(after_stats.CURRENT_NUMBER_OF_BYTES_USED) - SUM(before_stats.Sz_curr)  AS Sz_left    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SET @diff = (SELECT COUNT_ALLOC - N_alloc                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_alloc;
  let $assert_text = '$operation' will allocate $object_alloc objects.;
  source include/assert.inc;
  let $object_alloc=;
  SET @diff = (SELECT COUNT_FREE - N_free                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_free;
  let $assert_text = '$operation' will free $object_free objects.;
  source include/assert.inc;
  let $object_free=;
  SET @diff = (SELECT CURRENT_COUNT_USED - N_curr                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_count;
  let $assert_text = '$operation' will leave $object_count objects.;
  source include/assert.inc;
  let $object_count=;
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
echo ###############################################################################;
  eval $operation;
  SELECT         after_stats.EVENT_NAME                                           AS Name,         after_stats.COUNT_ALLOC                  - before_stats.N_alloc  AS N_alloc,         after_stats.COUNT_FREE                   - before_stats.N_free   AS N_free,         after_stats.CURRENT_COUNT_USED           - before_stats.N_curr   AS N_curr,         after_stats.SUM_NUMBER_OF_BYTES_ALLOC    - before_stats.Sz_alloc AS Sz_alloc,         after_STATS.SUM_NUMBER_OF_BYTES_FREE     - before_stats.Sz_free  AS Sz_free,         after_stats.CURRENT_NUMBER_OF_BYTES_USED - before_stats.Sz_curr  AS Sz_curr    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SELECT         SUM(after_stats.CURRENT_COUNT_USED) - SUM(before_stats.N_curr)   AS N_left,         SUM(after_stats.CURRENT_NUMBER_OF_BYTES_USED) - SUM(before_stats.Sz_curr)  AS Sz_left    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SET @diff = (SELECT COUNT_ALLOC - N_alloc                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_alloc;
  let $assert_text = '$operation' will allocate $object_alloc objects.;
  source include/assert.inc;
  let $object_alloc=;
  SET @diff = (SELECT COUNT_FREE - N_free                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_free;
  let $assert_text = '$operation' will free $object_free objects.;
  source include/assert.inc;
  let $object_free=;
  SET @diff = (SELECT CURRENT_COUNT_USED - N_curr                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_count;
  let $assert_text = '$operation' will leave $object_count objects.;
  source include/assert.inc;
  let $object_count=;
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
echo ###############################################################################;
  eval $operation;
  SELECT         after_stats.EVENT_NAME                                           AS Name,         after_stats.COUNT_ALLOC                  - before_stats.N_alloc  AS N_alloc,         after_stats.COUNT_FREE                   - before_stats.N_free   AS N_free,         after_stats.CURRENT_COUNT_USED           - before_stats.N_curr   AS N_curr,         after_stats.SUM_NUMBER_OF_BYTES_ALLOC    - before_stats.Sz_alloc AS Sz_alloc,         after_STATS.SUM_NUMBER_OF_BYTES_FREE     - before_stats.Sz_free  AS Sz_free,         after_stats.CURRENT_NUMBER_OF_BYTES_USED - before_stats.Sz_curr  AS Sz_curr    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SELECT         SUM(after_stats.CURRENT_COUNT_USED) - SUM(before_stats.N_curr)   AS N_left,         SUM(after_stats.CURRENT_NUMBER_OF_BYTES_USED) - SUM(before_stats.Sz_curr)  AS Sz_left    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SET @diff = (SELECT COUNT_ALLOC - N_alloc                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_alloc;
  let $assert_text = '$operation' will allocate $object_alloc objects.;
  source include/assert.inc;
  let $object_alloc=;
  SET @diff = (SELECT COUNT_FREE - N_free                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_free;
  let $assert_text = '$operation' will free $object_free objects.;
  source include/assert.inc;
  let $object_free=;
  SET @diff = (SELECT CURRENT_COUNT_USED - N_curr                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_count;
  let $assert_text = '$operation' will leave $object_count objects.;
  source include/assert.inc;
  let $object_count=;
DROP TABLE dd_pfs.mem_events;
DROP SCHEMA dd_pfs;
create schema s;
create table s.t1(i int);
create table s.t2(i int) tablespace innodb_system;
drop schema s;
source include/dd_pfs_save_state.inc;
source include/dd_pfs_report_state.inc;
SET foreign_key_checks= 0;
CREATE TABLE test.tables (  `id` bigint unsigned NOT NULL AUTO_INCREMENT,  `schema_id` bigint unsigned NOT NULL,  `name` varchar(64) COLLATE utf8_bin NOT NULL,  `type` enum('BASE TABLE','VIEW','SYSTEM VIEW') COLLATE utf8_bin NOT NULL,  `engine` varchar(64) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,  `mysql_version_id` int unsigned NOT NULL,  `row_format` enum('Fixed','Dynamic','Compressed','Redundant','Compact','Paged') COLLATE utf8_bin DEFAULT NULL,  `collation_id` bigint unsigned DEFAULT NULL,  `comment` varchar(2048) COLLATE utf8_bin NOT NULL,  `hidden` enum('Visible','System','SE','DDL') COLLATE utf8_bin NOT NULL,  `options` mediumtext COLLATE utf8_bin,  `se_private_data` mediumtext COLLATE utf8_bin,  `se_private_id` bigint unsigned DEFAULT NULL,  `tablespace_id` bigint unsigned DEFAULT NULL,  `partition_type` enum('HASH','KEY_51','KEY_55','LINEAR_HASH','LINEAR_KEY_51','LINEAR_KEY_55','RANGE','LIST','RANGE_COLUMNS','LIST_COLUMNS','AUTO','AUTO_LINEAR') COLLATE utf8_bin DEFAULT NULL,  `partition_expression` varchar(2048) COLLATE utf8_bin DEFAULT NULL,  `partition_expression_utf8` varchar(2048) COLLATE utf8_bin DEFAULT NULL,  `default_partitioning` enum('NO','YES','NUMBER') COLLATE utf8_bin DEFAULT NULL,  `subpartition_type` enum('HASH','KEY_51','KEY_55','LINEAR_HASH','LINEAR_KEY_51','LINEAR_KEY_55') COLLATE utf8_bin DEFAULT NULL,  `subpartition_expression` varchar(2048) COLLATE utf8_bin DEFAULT NULL,  `subpartition_expression_utf8` varchar(2048) COLLATE utf8_bin DEFAULT NULL,  `default_subpartitioning` enum('NO','YES','NUMBER') COLLATE utf8_bin DEFAULT NULL,  `created` timestamp NOT NULL,  `last_altered` timestamp NOT NULL,  `view_definition` longblob,  `view_definition_utf8` longtext COLLATE utf8_bin,  `view_check_option` enum('NONE','LOCAL','CASCADED') COLLATE utf8_bin DEFAULT NULL,  `view_is_updatable` enum('NO','YES') COLLATE utf8_bin DEFAULT NULL,  `view_algorithm` enum('UNDEFINED','TEMPTABLE','MERGE') COLLATE utf8_bin DEFAULT NULL,  `view_security_type` enum('DEFAULT','INVOKER','DEFINER') COLLATE utf8_bin DEFAULT NULL,  `view_definer` varchar(192) COLLATE utf8_bin DEFAULT NULL,  `view_client_collation_id` bigint unsigned DEFAULT NULL,  `view_connection_collation_id` bigint unsigned DEFAULT NULL,  `view_column_names` longtext COLLATE utf8_bin,  `last_checked_for_upgrade_version_id` int unsigned NOT NULL,  `engine_attribute` json DEFAULT NULL,  `secondary_engine_attribute` json DEFAULT NULL,  PRIMARY KEY (`id`),  UNIQUE KEY `schema_id` (`schema_id`,`name`),  UNIQUE KEY `engine` (`engine`,`se_private_id`),  KEY `engine_2` (`engine`),  KEY `collation_id` (`collation_id`),  KEY `tablespace_id` (`tablespace_id`),  KEY `type` (`type`),  KEY `view_client_collation_id` (`view_client_collation_id`),  KEY `view_connection_collation_id` (`view_connection_collation_id`),  KEY `type_2` (`type`,`view_definer`),  CONSTRAINT `tables_ibfk_1` FOREIGN KEY (`schema_id`) REFERENCES test.dummy (`id`),  CONSTRAINT `tables_ibfk_2` FOREIGN KEY (`collation_id`) REFERENCES test.dummy (`id`),  CONSTRAINT `tables_ibfk_3` FOREIGN KEY (`tablespace_id`) REFERENCES test.dummy (`id`),  CONSTRAINT `tables_ibfk_4` FOREIGN KEY (`view_client_collation_id`) REFERENCES test.dummy (`id`),  CONSTRAINT `tables_ibfk_5` FOREIGN KEY (`view_connection_collation_id`) REFERENCES test.dummy (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin STATS_PERSISTENT=0 ROW_FORMAT=DYNAMIC;
SET foreign_key_checks= DEFAULT;
DROP TABLE test.tables;
while ($i > 0)  dec $i;
  eval CREATE TABLE test.t_$i (i int) TABLESPACE innodb_system;
  eval SELECT * FROM  test.t_$i;
  eval FLUSH TABLES test.t_$i;
while ($i > 0)  dec $i;
  eval SELECT * FROM  test.t_$i;
while ($i > 0)  dec $i;
  eval DROP TABLE  test.t_$i;
CREATE SCHEMA s;
while ($i > 0)  dec $i;
  eval CREATE TABLE s.t_$i (i int, j int, k int, l int);
  # Pull in DD objects for tables in cache.  eval SELECT * FROM s.t_$i;
CREATE SCHEMA s1;
CREATE TABLE s1.t_myisam(i INT) ENGINE=MYISAM;
CREATE VIEW s1.v1 AS SELECT * FROM s1.t_myisam;
SELECT * FROM s1.v1;
CREATE SCHEMA s2;
CREATE TABLE s2.t_innodb(i INT) TABLESPACE=innodb_system;
CREATE VIEW v2 AS SELECT * FROM s2.t_innodb;
SELECT * FROM v2;
DROP VIEW v2;
CREATE SCHEMA s3;
CREATE TABLE s3.t_innodb(i INT) TABLESPACE=innodb_system;
CREATE VIEW s3.v3 AS SELECT * FROM s3.t_innodb;
SELECT * FROM s3.v3;
CREATE SCHEMA s4;
CREATE VIEW s4.v4 AS SELECT 1 AS i;
CREATE VIEW s4.v5 AS SELECT * FROM s4.v4;
SELECT * FROM s4.v5;
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
TRUNCATE TABLE performance_schema.memory_summary_global_by_event_name;
CREATE SCHEMA dd_pfs;
CREATE TABLE dd_pfs.mem_events (Seq int auto_increment PRIMARY KEY, Query varchar(1000)) AS  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
echo ###############################################################################;
  eval $operation;
  SELECT         after_stats.EVENT_NAME                                           AS Name,         after_stats.COUNT_ALLOC                  - before_stats.N_alloc  AS N_alloc,         after_stats.COUNT_FREE                   - before_stats.N_free   AS N_free,         after_stats.CURRENT_COUNT_USED           - before_stats.N_curr   AS N_curr,         after_stats.SUM_NUMBER_OF_BYTES_ALLOC    - before_stats.Sz_alloc AS Sz_alloc,         after_STATS.SUM_NUMBER_OF_BYTES_FREE     - before_stats.Sz_free  AS Sz_free,         after_stats.CURRENT_NUMBER_OF_BYTES_USED - before_stats.Sz_curr  AS Sz_curr    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SELECT         SUM(after_stats.CURRENT_COUNT_USED) - SUM(before_stats.N_curr)   AS N_left,         SUM(after_stats.CURRENT_NUMBER_OF_BYTES_USED) - SUM(before_stats.Sz_curr)  AS Sz_left    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SET @diff = (SELECT COUNT_ALLOC - N_alloc                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_alloc;
  let $assert_text = '$operation' will allocate $object_alloc objects.;
  source include/assert.inc;
  let $object_alloc=;
  SET @diff = (SELECT COUNT_FREE - N_free                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_free;
  let $assert_text = '$operation' will free $object_free objects.;
  source include/assert.inc;
  let $object_free=;
  SET @diff = (SELECT CURRENT_COUNT_USED - N_curr                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_count;
  let $assert_text = '$operation' will leave $object_count objects.;
  source include/assert.inc;
  let $object_count=;
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
echo ###############################################################################;
  eval $operation;
  SELECT         after_stats.EVENT_NAME                                           AS Name,         after_stats.COUNT_ALLOC                  - before_stats.N_alloc  AS N_alloc,         after_stats.COUNT_FREE                   - before_stats.N_free   AS N_free,         after_stats.CURRENT_COUNT_USED           - before_stats.N_curr   AS N_curr,         after_stats.SUM_NUMBER_OF_BYTES_ALLOC    - before_stats.Sz_alloc AS Sz_alloc,         after_STATS.SUM_NUMBER_OF_BYTES_FREE     - before_stats.Sz_free  AS Sz_free,         after_stats.CURRENT_NUMBER_OF_BYTES_USED - before_stats.Sz_curr  AS Sz_curr    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SELECT         SUM(after_stats.CURRENT_COUNT_USED) - SUM(before_stats.N_curr)   AS N_left,         SUM(after_stats.CURRENT_NUMBER_OF_BYTES_USED) - SUM(before_stats.Sz_curr)  AS Sz_left    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SET @diff = (SELECT COUNT_ALLOC - N_alloc                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_alloc;
  let $assert_text = '$operation' will allocate $object_alloc objects.;
  source include/assert.inc;
  let $object_alloc=;
  SET @diff = (SELECT COUNT_FREE - N_free                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_free;
  let $assert_text = '$operation' will free $object_free objects.;
  source include/assert.inc;
  let $object_free=;
  SET @diff = (SELECT CURRENT_COUNT_USED - N_curr                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_count;
  let $assert_text = '$operation' will leave $object_count objects.;
  source include/assert.inc;
  let $object_count=;
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
echo ###############################################################################;
  eval $operation;
  SELECT         after_stats.EVENT_NAME                                           AS Name,         after_stats.COUNT_ALLOC                  - before_stats.N_alloc  AS N_alloc,         after_stats.COUNT_FREE                   - before_stats.N_free   AS N_free,         after_stats.CURRENT_COUNT_USED           - before_stats.N_curr   AS N_curr,         after_stats.SUM_NUMBER_OF_BYTES_ALLOC    - before_stats.Sz_alloc AS Sz_alloc,         after_STATS.SUM_NUMBER_OF_BYTES_FREE     - before_stats.Sz_free  AS Sz_free,         after_stats.CURRENT_NUMBER_OF_BYTES_USED - before_stats.Sz_curr  AS Sz_curr    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SELECT         SUM(after_stats.CURRENT_COUNT_USED) - SUM(before_stats.N_curr)   AS N_left,         SUM(after_stats.CURRENT_NUMBER_OF_BYTES_USED) - SUM(before_stats.Sz_curr)  AS Sz_left    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SET @diff = (SELECT COUNT_ALLOC - N_alloc                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_alloc;
  let $assert_text = '$operation' will allocate $object_alloc objects.;
  source include/assert.inc;
  let $object_alloc=;
  SET @diff = (SELECT COUNT_FREE - N_free                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_free;
  let $assert_text = '$operation' will free $object_free objects.;
  source include/assert.inc;
  let $object_free=;
  SET @diff = (SELECT CURRENT_COUNT_USED - N_curr                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_count;
  let $assert_text = '$operation' will leave $object_count objects.;
  source include/assert.inc;
  let $object_count=;
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
echo ###############################################################################;
  eval $operation;
  SELECT         after_stats.EVENT_NAME                                           AS Name,         after_stats.COUNT_ALLOC                  - before_stats.N_alloc  AS N_alloc,         after_stats.COUNT_FREE                   - before_stats.N_free   AS N_free,         after_stats.CURRENT_COUNT_USED           - before_stats.N_curr   AS N_curr,         after_stats.SUM_NUMBER_OF_BYTES_ALLOC    - before_stats.Sz_alloc AS Sz_alloc,         after_STATS.SUM_NUMBER_OF_BYTES_FREE     - before_stats.Sz_free  AS Sz_free,         after_stats.CURRENT_NUMBER_OF_BYTES_USED - before_stats.Sz_curr  AS Sz_curr    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SELECT         SUM(after_stats.CURRENT_COUNT_USED) - SUM(before_stats.N_curr)   AS N_left,         SUM(after_stats.CURRENT_NUMBER_OF_BYTES_USED) - SUM(before_stats.Sz_curr)  AS Sz_left    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SET @diff = (SELECT COUNT_ALLOC - N_alloc                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_alloc;
  let $assert_text = '$operation' will allocate $object_alloc objects.;
  source include/assert.inc;
  let $object_alloc=;
  SET @diff = (SELECT COUNT_FREE - N_free                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_free;
  let $assert_text = '$operation' will free $object_free objects.;
  source include/assert.inc;
  let $object_free=;
  SET @diff = (SELECT CURRENT_COUNT_USED - N_curr                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_count;
  let $assert_text = '$operation' will leave $object_count objects.;
  source include/assert.inc;
  let $object_count=;
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
echo ###############################################################################;
  eval $operation;
  SELECT         after_stats.EVENT_NAME                                           AS Name,         after_stats.COUNT_ALLOC                  - before_stats.N_alloc  AS N_alloc,         after_stats.COUNT_FREE                   - before_stats.N_free   AS N_free,         after_stats.CURRENT_COUNT_USED           - before_stats.N_curr   AS N_curr,         after_stats.SUM_NUMBER_OF_BYTES_ALLOC    - before_stats.Sz_alloc AS Sz_alloc,         after_STATS.SUM_NUMBER_OF_BYTES_FREE     - before_stats.Sz_free  AS Sz_free,         after_stats.CURRENT_NUMBER_OF_BYTES_USED - before_stats.Sz_curr  AS Sz_curr    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SELECT         SUM(after_stats.CURRENT_COUNT_USED) - SUM(before_stats.N_curr)   AS N_left,         SUM(after_stats.CURRENT_NUMBER_OF_BYTES_USED) - SUM(before_stats.Sz_curr)  AS Sz_left    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SET @diff = (SELECT COUNT_ALLOC - N_alloc                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_alloc;
  let $assert_text = '$operation' will allocate $object_alloc objects.;
  source include/assert.inc;
  let $object_alloc=;
  SET @diff = (SELECT COUNT_FREE - N_free                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_free;
  let $assert_text = '$operation' will free $object_free objects.;
  source include/assert.inc;
  let $object_free=;
  SET @diff = (SELECT CURRENT_COUNT_USED - N_curr                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_count;
  let $assert_text = '$operation' will leave $object_count objects.;
  source include/assert.inc;
  let $object_count=;
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
echo ###############################################################################;
  eval $operation;
  SELECT         after_stats.EVENT_NAME                                           AS Name,         after_stats.COUNT_ALLOC                  - before_stats.N_alloc  AS N_alloc,         after_stats.COUNT_FREE                   - before_stats.N_free   AS N_free,         after_stats.CURRENT_COUNT_USED           - before_stats.N_curr   AS N_curr,         after_stats.SUM_NUMBER_OF_BYTES_ALLOC    - before_stats.Sz_alloc AS Sz_alloc,         after_STATS.SUM_NUMBER_OF_BYTES_FREE     - before_stats.Sz_free  AS Sz_free,         after_stats.CURRENT_NUMBER_OF_BYTES_USED - before_stats.Sz_curr  AS Sz_curr    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SELECT         SUM(after_stats.CURRENT_COUNT_USED) - SUM(before_stats.N_curr)   AS N_left,         SUM(after_stats.CURRENT_NUMBER_OF_BYTES_USED) - SUM(before_stats.Sz_curr)  AS Sz_left    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SET @diff = (SELECT COUNT_ALLOC - N_alloc                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_alloc;
  let $assert_text = '$operation' will allocate $object_alloc objects.;
  source include/assert.inc;
  let $object_alloc=;
  SET @diff = (SELECT COUNT_FREE - N_free                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_free;
  let $assert_text = '$operation' will free $object_free objects.;
  source include/assert.inc;
  let $object_free=;
  SET @diff = (SELECT CURRENT_COUNT_USED - N_curr                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_count;
  let $assert_text = '$operation' will leave $object_count objects.;
  source include/assert.inc;
  let $object_count=;
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
echo ###############################################################################;
  eval $operation;
  SELECT         after_stats.EVENT_NAME                                           AS Name,         after_stats.COUNT_ALLOC                  - before_stats.N_alloc  AS N_alloc,         after_stats.COUNT_FREE                   - before_stats.N_free   AS N_free,         after_stats.CURRENT_COUNT_USED           - before_stats.N_curr   AS N_curr,         after_stats.SUM_NUMBER_OF_BYTES_ALLOC    - before_stats.Sz_alloc AS Sz_alloc,         after_STATS.SUM_NUMBER_OF_BYTES_FREE     - before_stats.Sz_free  AS Sz_free,         after_stats.CURRENT_NUMBER_OF_BYTES_USED - before_stats.Sz_curr  AS Sz_curr    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SELECT         SUM(after_stats.CURRENT_COUNT_USED) - SUM(before_stats.N_curr)   AS N_left,         SUM(after_stats.CURRENT_NUMBER_OF_BYTES_USED) - SUM(before_stats.Sz_curr)  AS Sz_left    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SET @diff = (SELECT COUNT_ALLOC - N_alloc                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_alloc;
  let $assert_text = '$operation' will allocate $object_alloc objects.;
  source include/assert.inc;
  let $object_alloc=;
  SET @diff = (SELECT COUNT_FREE - N_free                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_free;
  let $assert_text = '$operation' will free $object_free objects.;
  source include/assert.inc;
  let $object_free=;
  SET @diff = (SELECT CURRENT_COUNT_USED - N_curr                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_count;
  let $assert_text = '$operation' will leave $object_count objects.;
  source include/assert.inc;
  let $object_count=;
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
echo ###############################################################################;
  eval $operation;
  SELECT         after_stats.EVENT_NAME                                           AS Name,         after_stats.COUNT_ALLOC                  - before_stats.N_alloc  AS N_alloc,         after_stats.COUNT_FREE                   - before_stats.N_free   AS N_free,         after_stats.CURRENT_COUNT_USED           - before_stats.N_curr   AS N_curr,         after_stats.SUM_NUMBER_OF_BYTES_ALLOC    - before_stats.Sz_alloc AS Sz_alloc,         after_STATS.SUM_NUMBER_OF_BYTES_FREE     - before_stats.Sz_free  AS Sz_free,         after_stats.CURRENT_NUMBER_OF_BYTES_USED - before_stats.Sz_curr  AS Sz_curr    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SELECT         SUM(after_stats.CURRENT_COUNT_USED) - SUM(before_stats.N_curr)   AS N_left,         SUM(after_stats.CURRENT_NUMBER_OF_BYTES_USED) - SUM(before_stats.Sz_curr)  AS Sz_left    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SET @diff = (SELECT COUNT_ALLOC - N_alloc                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_alloc;
  let $assert_text = '$operation' will allocate $object_alloc objects.;
  source include/assert.inc;
  let $object_alloc=;
  SET @diff = (SELECT COUNT_FREE - N_free                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_free;
  let $assert_text = '$operation' will free $object_free objects.;
  source include/assert.inc;
  let $object_free=;
  SET @diff = (SELECT CURRENT_COUNT_USED - N_curr                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_count;
  let $assert_text = '$operation' will leave $object_count objects.;
  source include/assert.inc;
  let $object_count=;
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
echo ###############################################################################;
  eval $operation;
  SELECT         after_stats.EVENT_NAME                                           AS Name,         after_stats.COUNT_ALLOC                  - before_stats.N_alloc  AS N_alloc,         after_stats.COUNT_FREE                   - before_stats.N_free   AS N_free,         after_stats.CURRENT_COUNT_USED           - before_stats.N_curr   AS N_curr,         after_stats.SUM_NUMBER_OF_BYTES_ALLOC    - before_stats.Sz_alloc AS Sz_alloc,         after_STATS.SUM_NUMBER_OF_BYTES_FREE     - before_stats.Sz_free  AS Sz_free,         after_stats.CURRENT_NUMBER_OF_BYTES_USED - before_stats.Sz_curr  AS Sz_curr    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SELECT         SUM(after_stats.CURRENT_COUNT_USED) - SUM(before_stats.N_curr)   AS N_left,         SUM(after_stats.CURRENT_NUMBER_OF_BYTES_USED) - SUM(before_stats.Sz_curr)  AS Sz_left    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SET @diff = (SELECT COUNT_ALLOC - N_alloc                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_alloc;
  let $assert_text = '$operation' will allocate $object_alloc objects.;
  source include/assert.inc;
  let $object_alloc=;
  SET @diff = (SELECT COUNT_FREE - N_free                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_free;
  let $assert_text = '$operation' will free $object_free objects.;
  source include/assert.inc;
  let $object_free=;
  SET @diff = (SELECT CURRENT_COUNT_USED - N_curr                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_count;
  let $assert_text = '$operation' will leave $object_count objects.;
  source include/assert.inc;
  let $object_count=;
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
echo ###############################################################################;
  eval $operation;
  SELECT         after_stats.EVENT_NAME                                           AS Name,         after_stats.COUNT_ALLOC                  - before_stats.N_alloc  AS N_alloc,         after_stats.COUNT_FREE                   - before_stats.N_free   AS N_free,         after_stats.CURRENT_COUNT_USED           - before_stats.N_curr   AS N_curr,         after_stats.SUM_NUMBER_OF_BYTES_ALLOC    - before_stats.Sz_alloc AS Sz_alloc,         after_STATS.SUM_NUMBER_OF_BYTES_FREE     - before_stats.Sz_free  AS Sz_free,         after_stats.CURRENT_NUMBER_OF_BYTES_USED - before_stats.Sz_curr  AS Sz_curr    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SELECT         SUM(after_stats.CURRENT_COUNT_USED) - SUM(before_stats.N_curr)   AS N_left,         SUM(after_stats.CURRENT_NUMBER_OF_BYTES_USED) - SUM(before_stats.Sz_curr)  AS Sz_left    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SET @diff = (SELECT COUNT_ALLOC - N_alloc                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_alloc;
  let $assert_text = '$operation' will allocate $object_alloc objects.;
  source include/assert.inc;
  let $object_alloc=;
  SET @diff = (SELECT COUNT_FREE - N_free                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_free;
  let $assert_text = '$operation' will free $object_free objects.;
  source include/assert.inc;
  let $object_free=;
  SET @diff = (SELECT CURRENT_COUNT_USED - N_curr                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_count;
  let $assert_text = '$operation' will leave $object_count objects.;
  source include/assert.inc;
  let $object_count=;
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
echo ###############################################################################;
  eval $operation;
  SELECT         after_stats.EVENT_NAME                                           AS Name,         after_stats.COUNT_ALLOC                  - before_stats.N_alloc  AS N_alloc,         after_stats.COUNT_FREE                   - before_stats.N_free   AS N_free,         after_stats.CURRENT_COUNT_USED           - before_stats.N_curr   AS N_curr,         after_stats.SUM_NUMBER_OF_BYTES_ALLOC    - before_stats.Sz_alloc AS Sz_alloc,         after_STATS.SUM_NUMBER_OF_BYTES_FREE     - before_stats.Sz_free  AS Sz_free,         after_stats.CURRENT_NUMBER_OF_BYTES_USED - before_stats.Sz_curr  AS Sz_curr    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SELECT         SUM(after_stats.CURRENT_COUNT_USED) - SUM(before_stats.N_curr)   AS N_left,         SUM(after_stats.CURRENT_NUMBER_OF_BYTES_USED) - SUM(before_stats.Sz_curr)  AS Sz_left    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SET @diff = (SELECT COUNT_ALLOC - N_alloc                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_alloc;
  let $assert_text = '$operation' will allocate $object_alloc objects.;
  source include/assert.inc;
  let $object_alloc=;
  SET @diff = (SELECT COUNT_FREE - N_free                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_free;
  let $assert_text = '$operation' will free $object_free objects.;
  source include/assert.inc;
  let $object_free=;
  SET @diff = (SELECT CURRENT_COUNT_USED - N_curr                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_count;
  let $assert_text = '$operation' will leave $object_count objects.;
  source include/assert.inc;
  let $object_count=;
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
echo ###############################################################################;
  eval $operation;
  SELECT         after_stats.EVENT_NAME                                           AS Name,         after_stats.COUNT_ALLOC                  - before_stats.N_alloc  AS N_alloc,         after_stats.COUNT_FREE                   - before_stats.N_free   AS N_free,         after_stats.CURRENT_COUNT_USED           - before_stats.N_curr   AS N_curr,         after_stats.SUM_NUMBER_OF_BYTES_ALLOC    - before_stats.Sz_alloc AS Sz_alloc,         after_STATS.SUM_NUMBER_OF_BYTES_FREE     - before_stats.Sz_free  AS Sz_free,         after_stats.CURRENT_NUMBER_OF_BYTES_USED - before_stats.Sz_curr  AS Sz_curr    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SELECT         SUM(after_stats.CURRENT_COUNT_USED) - SUM(before_stats.N_curr)   AS N_left,         SUM(after_stats.CURRENT_NUMBER_OF_BYTES_USED) - SUM(before_stats.Sz_curr)  AS Sz_left    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SET @diff = (SELECT COUNT_ALLOC - N_alloc                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_alloc;
  let $assert_text = '$operation' will allocate $object_alloc objects.;
  source include/assert.inc;
  let $object_alloc=;
  SET @diff = (SELECT COUNT_FREE - N_free                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_free;
  let $assert_text = '$operation' will free $object_free objects.;
  source include/assert.inc;
  let $object_free=;
  SET @diff = (SELECT CURRENT_COUNT_USED - N_curr                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_count;
  let $assert_text = '$operation' will leave $object_count objects.;
  source include/assert.inc;
  let $object_count=;
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
echo ###############################################################################;
  eval $operation;
  SELECT         after_stats.EVENT_NAME                                           AS Name,         after_stats.COUNT_ALLOC                  - before_stats.N_alloc  AS N_alloc,         after_stats.COUNT_FREE                   - before_stats.N_free   AS N_free,         after_stats.CURRENT_COUNT_USED           - before_stats.N_curr   AS N_curr,         after_stats.SUM_NUMBER_OF_BYTES_ALLOC    - before_stats.Sz_alloc AS Sz_alloc,         after_STATS.SUM_NUMBER_OF_BYTES_FREE     - before_stats.Sz_free  AS Sz_free,         after_stats.CURRENT_NUMBER_OF_BYTES_USED - before_stats.Sz_curr  AS Sz_curr    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SELECT         SUM(after_stats.CURRENT_COUNT_USED) - SUM(before_stats.N_curr)   AS N_left,         SUM(after_stats.CURRENT_NUMBER_OF_BYTES_USED) - SUM(before_stats.Sz_curr)  AS Sz_left    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SET @diff = (SELECT COUNT_ALLOC - N_alloc                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_alloc;
  let $assert_text = '$operation' will allocate $object_alloc objects.;
  source include/assert.inc;
  let $object_alloc=;
  SET @diff = (SELECT COUNT_FREE - N_free                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_free;
  let $assert_text = '$operation' will free $object_free objects.;
  source include/assert.inc;
  let $object_free=;
  SET @diff = (SELECT CURRENT_COUNT_USED - N_curr                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_count;
  let $assert_text = '$operation' will leave $object_count objects.;
  source include/assert.inc;
  let $object_count=;
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
echo ###############################################################################;
  eval $operation;
  SELECT         after_stats.EVENT_NAME                                           AS Name,         after_stats.COUNT_ALLOC                  - before_stats.N_alloc  AS N_alloc,         after_stats.COUNT_FREE                   - before_stats.N_free   AS N_free,         after_stats.CURRENT_COUNT_USED           - before_stats.N_curr   AS N_curr,         after_stats.SUM_NUMBER_OF_BYTES_ALLOC    - before_stats.Sz_alloc AS Sz_alloc,         after_STATS.SUM_NUMBER_OF_BYTES_FREE     - before_stats.Sz_free  AS Sz_free,         after_stats.CURRENT_NUMBER_OF_BYTES_USED - before_stats.Sz_curr  AS Sz_curr    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SELECT         SUM(after_stats.CURRENT_COUNT_USED) - SUM(before_stats.N_curr)   AS N_left,         SUM(after_stats.CURRENT_NUMBER_OF_BYTES_USED) - SUM(before_stats.Sz_curr)  AS Sz_left    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SET @diff = (SELECT COUNT_ALLOC - N_alloc                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_alloc;
  let $assert_text = '$operation' will allocate $object_alloc objects.;
  source include/assert.inc;
  let $object_alloc=;
  SET @diff = (SELECT COUNT_FREE - N_free                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_free;
  let $assert_text = '$operation' will free $object_free objects.;
  source include/assert.inc;
  let $object_free=;
  SET @diff = (SELECT CURRENT_COUNT_USED - N_curr                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_count;
  let $assert_text = '$operation' will leave $object_count objects.;
  source include/assert.inc;
  let $object_count=;
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
echo ###############################################################################;
  eval $operation;
  SELECT         after_stats.EVENT_NAME                                           AS Name,         after_stats.COUNT_ALLOC                  - before_stats.N_alloc  AS N_alloc,         after_stats.COUNT_FREE                   - before_stats.N_free   AS N_free,         after_stats.CURRENT_COUNT_USED           - before_stats.N_curr   AS N_curr,         after_stats.SUM_NUMBER_OF_BYTES_ALLOC    - before_stats.Sz_alloc AS Sz_alloc,         after_STATS.SUM_NUMBER_OF_BYTES_FREE     - before_stats.Sz_free  AS Sz_free,         after_stats.CURRENT_NUMBER_OF_BYTES_USED - before_stats.Sz_curr  AS Sz_curr    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SELECT         SUM(after_stats.CURRENT_COUNT_USED) - SUM(before_stats.N_curr)   AS N_left,         SUM(after_stats.CURRENT_NUMBER_OF_BYTES_USED) - SUM(before_stats.Sz_curr)  AS Sz_left    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SET @diff = (SELECT COUNT_ALLOC - N_alloc                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_alloc;
  let $assert_text = '$operation' will allocate $object_alloc objects.;
  source include/assert.inc;
  let $object_alloc=;
  SET @diff = (SELECT COUNT_FREE - N_free                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_free;
  let $assert_text = '$operation' will free $object_free objects.;
  source include/assert.inc;
  let $object_free=;
  SET @diff = (SELECT CURRENT_COUNT_USED - N_curr                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_count;
  let $assert_text = '$operation' will leave $object_count objects.;
  source include/assert.inc;
  let $object_count=;
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
echo ###############################################################################;
  eval $operation;
  SELECT         after_stats.EVENT_NAME                                           AS Name,         after_stats.COUNT_ALLOC                  - before_stats.N_alloc  AS N_alloc,         after_stats.COUNT_FREE                   - before_stats.N_free   AS N_free,         after_stats.CURRENT_COUNT_USED           - before_stats.N_curr   AS N_curr,         after_stats.SUM_NUMBER_OF_BYTES_ALLOC    - before_stats.Sz_alloc AS Sz_alloc,         after_STATS.SUM_NUMBER_OF_BYTES_FREE     - before_stats.Sz_free  AS Sz_free,         after_stats.CURRENT_NUMBER_OF_BYTES_USED - before_stats.Sz_curr  AS Sz_curr    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SELECT         SUM(after_stats.CURRENT_COUNT_USED) - SUM(before_stats.N_curr)   AS N_left,         SUM(after_stats.CURRENT_NUMBER_OF_BYTES_USED) - SUM(before_stats.Sz_curr)  AS Sz_left    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SET @diff = (SELECT COUNT_ALLOC - N_alloc                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_alloc;
  let $assert_text = '$operation' will allocate $object_alloc objects.;
  source include/assert.inc;
  let $object_alloc=;
  SET @diff = (SELECT COUNT_FREE - N_free                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_free;
  let $assert_text = '$operation' will free $object_free objects.;
  source include/assert.inc;
  let $object_free=;
  SET @diff = (SELECT CURRENT_COUNT_USED - N_curr                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_count;
  let $assert_text = '$operation' will leave $object_count objects.;
  source include/assert.inc;
  let $object_count=;
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
echo ###############################################################################;
  eval $operation;
  SELECT         after_stats.EVENT_NAME                                           AS Name,         after_stats.COUNT_ALLOC                  - before_stats.N_alloc  AS N_alloc,         after_stats.COUNT_FREE                   - before_stats.N_free   AS N_free,         after_stats.CURRENT_COUNT_USED           - before_stats.N_curr   AS N_curr,         after_stats.SUM_NUMBER_OF_BYTES_ALLOC    - before_stats.Sz_alloc AS Sz_alloc,         after_STATS.SUM_NUMBER_OF_BYTES_FREE     - before_stats.Sz_free  AS Sz_free,         after_stats.CURRENT_NUMBER_OF_BYTES_USED - before_stats.Sz_curr  AS Sz_curr    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SELECT         SUM(after_stats.CURRENT_COUNT_USED) - SUM(before_stats.N_curr)   AS N_left,         SUM(after_stats.CURRENT_NUMBER_OF_BYTES_USED) - SUM(before_stats.Sz_curr)  AS Sz_left    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SET @diff = (SELECT COUNT_ALLOC - N_alloc                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_alloc;
  let $assert_text = '$operation' will allocate $object_alloc objects.;
  source include/assert.inc;
  let $object_alloc=;
  SET @diff = (SELECT COUNT_FREE - N_free                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_free;
  let $assert_text = '$operation' will free $object_free objects.;
  source include/assert.inc;
  let $object_free=;
  SET @diff = (SELECT CURRENT_COUNT_USED - N_curr                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_count;
  let $assert_text = '$operation' will leave $object_count objects.;
  source include/assert.inc;
  let $object_count=;
DROP TABLE dd_pfs.mem_events;
DROP SCHEMA dd_pfs;
create schema s;
create table s.t1(i int);
create table s.t2(i int) tablespace innodb_system;
drop schema s;
source include/dd_pfs_save_state.inc;
source include/dd_pfs_report_state.inc;
SET foreign_key_checks= 0;
CREATE TABLE test.tables (  `id` bigint unsigned NOT NULL AUTO_INCREMENT,  `schema_id` bigint unsigned NOT NULL,  `name` varchar(64) COLLATE utf8_bin NOT NULL,  `type` enum('BASE TABLE','VIEW','SYSTEM VIEW') COLLATE utf8_bin NOT NULL,  `engine` varchar(64) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,  `mysql_version_id` int unsigned NOT NULL,  `row_format` enum('Fixed','Dynamic','Compressed','Redundant','Compact','Paged') COLLATE utf8_bin DEFAULT NULL,  `collation_id` bigint unsigned DEFAULT NULL,  `comment` varchar(2048) COLLATE utf8_bin NOT NULL,  `hidden` enum('Visible','System','SE','DDL') COLLATE utf8_bin NOT NULL,  `options` mediumtext COLLATE utf8_bin,  `se_private_data` mediumtext COLLATE utf8_bin,  `se_private_id` bigint unsigned DEFAULT NULL,  `tablespace_id` bigint unsigned DEFAULT NULL,  `partition_type` enum('HASH','KEY_51','KEY_55','LINEAR_HASH','LINEAR_KEY_51','LINEAR_KEY_55','RANGE','LIST','RANGE_COLUMNS','LIST_COLUMNS','AUTO','AUTO_LINEAR') COLLATE utf8_bin DEFAULT NULL,  `partition_expression` varchar(2048) COLLATE utf8_bin DEFAULT NULL,  `partition_expression_utf8` varchar(2048) COLLATE utf8_bin DEFAULT NULL,  `default_partitioning` enum('NO','YES','NUMBER') COLLATE utf8_bin DEFAULT NULL,  `subpartition_type` enum('HASH','KEY_51','KEY_55','LINEAR_HASH','LINEAR_KEY_51','LINEAR_KEY_55') COLLATE utf8_bin DEFAULT NULL,  `subpartition_expression` varchar(2048) COLLATE utf8_bin DEFAULT NULL,  `subpartition_expression_utf8` varchar(2048) COLLATE utf8_bin DEFAULT NULL,  `default_subpartitioning` enum('NO','YES','NUMBER') COLLATE utf8_bin DEFAULT NULL,  `created` timestamp NOT NULL,  `last_altered` timestamp NOT NULL,  `view_definition` longblob,  `view_definition_utf8` longtext COLLATE utf8_bin,  `view_check_option` enum('NONE','LOCAL','CASCADED') COLLATE utf8_bin DEFAULT NULL,  `view_is_updatable` enum('NO','YES') COLLATE utf8_bin DEFAULT NULL,  `view_algorithm` enum('UNDEFINED','TEMPTABLE','MERGE') COLLATE utf8_bin DEFAULT NULL,  `view_security_type` enum('DEFAULT','INVOKER','DEFINER') COLLATE utf8_bin DEFAULT NULL,  `view_definer` varchar(192) COLLATE utf8_bin DEFAULT NULL,  `view_client_collation_id` bigint unsigned DEFAULT NULL,  `view_connection_collation_id` bigint unsigned DEFAULT NULL,  `view_column_names` longtext COLLATE utf8_bin,  `last_checked_for_upgrade_version_id` int unsigned NOT NULL,  `engine_attribute` json DEFAULT NULL,  `secondary_engine_attribute` json DEFAULT NULL,  PRIMARY KEY (`id`),  UNIQUE KEY `schema_id` (`schema_id`,`name`),  UNIQUE KEY `engine` (`engine`,`se_private_id`),  KEY `engine_2` (`engine`),  KEY `collation_id` (`collation_id`),  KEY `tablespace_id` (`tablespace_id`),  KEY `type` (`type`),  KEY `view_client_collation_id` (`view_client_collation_id`),  KEY `view_connection_collation_id` (`view_connection_collation_id`),  KEY `type_2` (`type`,`view_definer`),  CONSTRAINT `tables_ibfk_1` FOREIGN KEY (`schema_id`) REFERENCES test.dummy (`id`),  CONSTRAINT `tables_ibfk_2` FOREIGN KEY (`collation_id`) REFERENCES test.dummy (`id`),  CONSTRAINT `tables_ibfk_3` FOREIGN KEY (`tablespace_id`) REFERENCES test.dummy (`id`),  CONSTRAINT `tables_ibfk_4` FOREIGN KEY (`view_client_collation_id`) REFERENCES test.dummy (`id`),  CONSTRAINT `tables_ibfk_5` FOREIGN KEY (`view_connection_collation_id`) REFERENCES test.dummy (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin STATS_PERSISTENT=0 ROW_FORMAT=DYNAMIC;
SET foreign_key_checks= DEFAULT;
DROP TABLE test.tables;
while ($i > 0)  dec $i;
  eval CREATE TABLE test.t_$i (i int) TABLESPACE innodb_system;
  eval SELECT * FROM  test.t_$i;
  eval FLUSH TABLES test.t_$i;
while ($i > 0)  dec $i;
  eval SELECT * FROM  test.t_$i;
while ($i > 0)  dec $i;
  eval DROP TABLE  test.t_$i;
CREATE SCHEMA s;
while ($i > 0)  dec $i;
  eval CREATE TABLE s.t_$i (i int, j int, k int, l int);
  # Pull in DD objects for tables in cache.  eval SELECT * FROM s.t_$i;
CREATE SCHEMA s1;
CREATE TABLE s1.t_myisam(i INT) ENGINE=MYISAM;
CREATE VIEW s1.v1 AS SELECT * FROM s1.t_myisam;
SELECT * FROM s1.v1;
CREATE SCHEMA s2;
CREATE TABLE s2.t_innodb(i INT) TABLESPACE=innodb_system;
CREATE VIEW v2 AS SELECT * FROM s2.t_innodb;
SELECT * FROM v2;
DROP VIEW v2;
CREATE SCHEMA s3;
CREATE TABLE s3.t_innodb(i INT) TABLESPACE=innodb_system;
CREATE VIEW s3.v3 AS SELECT * FROM s3.t_innodb;
SELECT * FROM s3.v3;
CREATE SCHEMA s4;
CREATE VIEW s4.v4 AS SELECT 1 AS i;
CREATE VIEW s4.v5 AS SELECT * FROM s4.v4;
SELECT * FROM s4.v5;
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
TRUNCATE TABLE performance_schema.memory_summary_global_by_event_name;
CREATE SCHEMA dd_pfs;
CREATE TABLE dd_pfs.mem_events (Seq int auto_increment PRIMARY KEY, Query varchar(1000)) AS  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
echo ###############################################################################;
  eval $operation;
  SELECT         after_stats.EVENT_NAME                                           AS Name,         after_stats.COUNT_ALLOC                  - before_stats.N_alloc  AS N_alloc,         after_stats.COUNT_FREE                   - before_stats.N_free   AS N_free,         after_stats.CURRENT_COUNT_USED           - before_stats.N_curr   AS N_curr,         after_stats.SUM_NUMBER_OF_BYTES_ALLOC    - before_stats.Sz_alloc AS Sz_alloc,         after_STATS.SUM_NUMBER_OF_BYTES_FREE     - before_stats.Sz_free  AS Sz_free,         after_stats.CURRENT_NUMBER_OF_BYTES_USED - before_stats.Sz_curr  AS Sz_curr    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SELECT         SUM(after_stats.CURRENT_COUNT_USED) - SUM(before_stats.N_curr)   AS N_left,         SUM(after_stats.CURRENT_NUMBER_OF_BYTES_USED) - SUM(before_stats.Sz_curr)  AS Sz_left    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SET @diff = (SELECT COUNT_ALLOC - N_alloc                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_alloc;
  let $assert_text = '$operation' will allocate $object_alloc objects.;
  source include/assert.inc;
  let $object_alloc=;
  SET @diff = (SELECT COUNT_FREE - N_free                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_free;
  let $assert_text = '$operation' will free $object_free objects.;
  source include/assert.inc;
  let $object_free=;
  SET @diff = (SELECT CURRENT_COUNT_USED - N_curr                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_count;
  let $assert_text = '$operation' will leave $object_count objects.;
  source include/assert.inc;
  let $object_count=;
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
echo ###############################################################################;
  eval $operation;
  SELECT         after_stats.EVENT_NAME                                           AS Name,         after_stats.COUNT_ALLOC                  - before_stats.N_alloc  AS N_alloc,         after_stats.COUNT_FREE                   - before_stats.N_free   AS N_free,         after_stats.CURRENT_COUNT_USED           - before_stats.N_curr   AS N_curr,         after_stats.SUM_NUMBER_OF_BYTES_ALLOC    - before_stats.Sz_alloc AS Sz_alloc,         after_STATS.SUM_NUMBER_OF_BYTES_FREE     - before_stats.Sz_free  AS Sz_free,         after_stats.CURRENT_NUMBER_OF_BYTES_USED - before_stats.Sz_curr  AS Sz_curr    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SELECT         SUM(after_stats.CURRENT_COUNT_USED) - SUM(before_stats.N_curr)   AS N_left,         SUM(after_stats.CURRENT_NUMBER_OF_BYTES_USED) - SUM(before_stats.Sz_curr)  AS Sz_left    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SET @diff = (SELECT COUNT_ALLOC - N_alloc                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_alloc;
  let $assert_text = '$operation' will allocate $object_alloc objects.;
  source include/assert.inc;
  let $object_alloc=;
  SET @diff = (SELECT COUNT_FREE - N_free                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_free;
  let $assert_text = '$operation' will free $object_free objects.;
  source include/assert.inc;
  let $object_free=;
  SET @diff = (SELECT CURRENT_COUNT_USED - N_curr                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_count;
  let $assert_text = '$operation' will leave $object_count objects.;
  source include/assert.inc;
  let $object_count=;
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
echo ###############################################################################;
  eval $operation;
  SELECT         after_stats.EVENT_NAME                                           AS Name,         after_stats.COUNT_ALLOC                  - before_stats.N_alloc  AS N_alloc,         after_stats.COUNT_FREE                   - before_stats.N_free   AS N_free,         after_stats.CURRENT_COUNT_USED           - before_stats.N_curr   AS N_curr,         after_stats.SUM_NUMBER_OF_BYTES_ALLOC    - before_stats.Sz_alloc AS Sz_alloc,         after_STATS.SUM_NUMBER_OF_BYTES_FREE     - before_stats.Sz_free  AS Sz_free,         after_stats.CURRENT_NUMBER_OF_BYTES_USED - before_stats.Sz_curr  AS Sz_curr    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SELECT         SUM(after_stats.CURRENT_COUNT_USED) - SUM(before_stats.N_curr)   AS N_left,         SUM(after_stats.CURRENT_NUMBER_OF_BYTES_USED) - SUM(before_stats.Sz_curr)  AS Sz_left    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SET @diff = (SELECT COUNT_ALLOC - N_alloc                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_alloc;
  let $assert_text = '$operation' will allocate $object_alloc objects.;
  source include/assert.inc;
  let $object_alloc=;
  SET @diff = (SELECT COUNT_FREE - N_free                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_free;
  let $assert_text = '$operation' will free $object_free objects.;
  source include/assert.inc;
  let $object_free=;
  SET @diff = (SELECT CURRENT_COUNT_USED - N_curr                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_count;
  let $assert_text = '$operation' will leave $object_count objects.;
  source include/assert.inc;
  let $object_count=;
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
echo ###############################################################################;
  eval $operation;
  SELECT         after_stats.EVENT_NAME                                           AS Name,         after_stats.COUNT_ALLOC                  - before_stats.N_alloc  AS N_alloc,         after_stats.COUNT_FREE                   - before_stats.N_free   AS N_free,         after_stats.CURRENT_COUNT_USED           - before_stats.N_curr   AS N_curr,         after_stats.SUM_NUMBER_OF_BYTES_ALLOC    - before_stats.Sz_alloc AS Sz_alloc,         after_STATS.SUM_NUMBER_OF_BYTES_FREE     - before_stats.Sz_free  AS Sz_free,         after_stats.CURRENT_NUMBER_OF_BYTES_USED - before_stats.Sz_curr  AS Sz_curr    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SELECT         SUM(after_stats.CURRENT_COUNT_USED) - SUM(before_stats.N_curr)   AS N_left,         SUM(after_stats.CURRENT_NUMBER_OF_BYTES_USED) - SUM(before_stats.Sz_curr)  AS Sz_left    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SET @diff = (SELECT COUNT_ALLOC - N_alloc                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_alloc;
  let $assert_text = '$operation' will allocate $object_alloc objects.;
  source include/assert.inc;
  let $object_alloc=;
  SET @diff = (SELECT COUNT_FREE - N_free                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_free;
  let $assert_text = '$operation' will free $object_free objects.;
  source include/assert.inc;
  let $object_free=;
  SET @diff = (SELECT CURRENT_COUNT_USED - N_curr                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_count;
  let $assert_text = '$operation' will leave $object_count objects.;
  source include/assert.inc;
  let $object_count=;
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
echo ###############################################################################;
  eval $operation;
  SELECT         after_stats.EVENT_NAME                                           AS Name,         after_stats.COUNT_ALLOC                  - before_stats.N_alloc  AS N_alloc,         after_stats.COUNT_FREE                   - before_stats.N_free   AS N_free,         after_stats.CURRENT_COUNT_USED           - before_stats.N_curr   AS N_curr,         after_stats.SUM_NUMBER_OF_BYTES_ALLOC    - before_stats.Sz_alloc AS Sz_alloc,         after_STATS.SUM_NUMBER_OF_BYTES_FREE     - before_stats.Sz_free  AS Sz_free,         after_stats.CURRENT_NUMBER_OF_BYTES_USED - before_stats.Sz_curr  AS Sz_curr    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SELECT         SUM(after_stats.CURRENT_COUNT_USED) - SUM(before_stats.N_curr)   AS N_left,         SUM(after_stats.CURRENT_NUMBER_OF_BYTES_USED) - SUM(before_stats.Sz_curr)  AS Sz_left    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SET @diff = (SELECT COUNT_ALLOC - N_alloc                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_alloc;
  let $assert_text = '$operation' will allocate $object_alloc objects.;
  source include/assert.inc;
  let $object_alloc=;
  SET @diff = (SELECT COUNT_FREE - N_free                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_free;
  let $assert_text = '$operation' will free $object_free objects.;
  source include/assert.inc;
  let $object_free=;
  SET @diff = (SELECT CURRENT_COUNT_USED - N_curr                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_count;
  let $assert_text = '$operation' will leave $object_count objects.;
  source include/assert.inc;
  let $object_count=;
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
echo ###############################################################################;
  eval $operation;
  SELECT         after_stats.EVENT_NAME                                           AS Name,         after_stats.COUNT_ALLOC                  - before_stats.N_alloc  AS N_alloc,         after_stats.COUNT_FREE                   - before_stats.N_free   AS N_free,         after_stats.CURRENT_COUNT_USED           - before_stats.N_curr   AS N_curr,         after_stats.SUM_NUMBER_OF_BYTES_ALLOC    - before_stats.Sz_alloc AS Sz_alloc,         after_STATS.SUM_NUMBER_OF_BYTES_FREE     - before_stats.Sz_free  AS Sz_free,         after_stats.CURRENT_NUMBER_OF_BYTES_USED - before_stats.Sz_curr  AS Sz_curr    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SELECT         SUM(after_stats.CURRENT_COUNT_USED) - SUM(before_stats.N_curr)   AS N_left,         SUM(after_stats.CURRENT_NUMBER_OF_BYTES_USED) - SUM(before_stats.Sz_curr)  AS Sz_left    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SET @diff = (SELECT COUNT_ALLOC - N_alloc                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_alloc;
  let $assert_text = '$operation' will allocate $object_alloc objects.;
  source include/assert.inc;
  let $object_alloc=;
  SET @diff = (SELECT COUNT_FREE - N_free                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_free;
  let $assert_text = '$operation' will free $object_free objects.;
  source include/assert.inc;
  let $object_free=;
  SET @diff = (SELECT CURRENT_COUNT_USED - N_curr                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_count;
  let $assert_text = '$operation' will leave $object_count objects.;
  source include/assert.inc;
  let $object_count=;
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
echo ###############################################################################;
  eval $operation;
  SELECT         after_stats.EVENT_NAME                                           AS Name,         after_stats.COUNT_ALLOC                  - before_stats.N_alloc  AS N_alloc,         after_stats.COUNT_FREE                   - before_stats.N_free   AS N_free,         after_stats.CURRENT_COUNT_USED           - before_stats.N_curr   AS N_curr,         after_stats.SUM_NUMBER_OF_BYTES_ALLOC    - before_stats.Sz_alloc AS Sz_alloc,         after_STATS.SUM_NUMBER_OF_BYTES_FREE     - before_stats.Sz_free  AS Sz_free,         after_stats.CURRENT_NUMBER_OF_BYTES_USED - before_stats.Sz_curr  AS Sz_curr    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SELECT         SUM(after_stats.CURRENT_COUNT_USED) - SUM(before_stats.N_curr)   AS N_left,         SUM(after_stats.CURRENT_NUMBER_OF_BYTES_USED) - SUM(before_stats.Sz_curr)  AS Sz_left    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SET @diff = (SELECT COUNT_ALLOC - N_alloc                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_alloc;
  let $assert_text = '$operation' will allocate $object_alloc objects.;
  source include/assert.inc;
  let $object_alloc=;
  SET @diff = (SELECT COUNT_FREE - N_free                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_free;
  let $assert_text = '$operation' will free $object_free objects.;
  source include/assert.inc;
  let $object_free=;
  SET @diff = (SELECT CURRENT_COUNT_USED - N_curr                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_count;
  let $assert_text = '$operation' will leave $object_count objects.;
  source include/assert.inc;
  let $object_count=;
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
echo ###############################################################################;
  eval $operation;
  SELECT         after_stats.EVENT_NAME                                           AS Name,         after_stats.COUNT_ALLOC                  - before_stats.N_alloc  AS N_alloc,         after_stats.COUNT_FREE                   - before_stats.N_free   AS N_free,         after_stats.CURRENT_COUNT_USED           - before_stats.N_curr   AS N_curr,         after_stats.SUM_NUMBER_OF_BYTES_ALLOC    - before_stats.Sz_alloc AS Sz_alloc,         after_STATS.SUM_NUMBER_OF_BYTES_FREE     - before_stats.Sz_free  AS Sz_free,         after_stats.CURRENT_NUMBER_OF_BYTES_USED - before_stats.Sz_curr  AS Sz_curr    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SELECT         SUM(after_stats.CURRENT_COUNT_USED) - SUM(before_stats.N_curr)   AS N_left,         SUM(after_stats.CURRENT_NUMBER_OF_BYTES_USED) - SUM(before_stats.Sz_curr)  AS Sz_left    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SET @diff = (SELECT COUNT_ALLOC - N_alloc                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_alloc;
  let $assert_text = '$operation' will allocate $object_alloc objects.;
  source include/assert.inc;
  let $object_alloc=;
  SET @diff = (SELECT COUNT_FREE - N_free                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_free;
  let $assert_text = '$operation' will free $object_free objects.;
  source include/assert.inc;
  let $object_free=;
  SET @diff = (SELECT CURRENT_COUNT_USED - N_curr                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_count;
  let $assert_text = '$operation' will leave $object_count objects.;
  source include/assert.inc;
  let $object_count=;
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
echo ###############################################################################;
  eval $operation;
  SELECT         after_stats.EVENT_NAME                                           AS Name,         after_stats.COUNT_ALLOC                  - before_stats.N_alloc  AS N_alloc,         after_stats.COUNT_FREE                   - before_stats.N_free   AS N_free,         after_stats.CURRENT_COUNT_USED           - before_stats.N_curr   AS N_curr,         after_stats.SUM_NUMBER_OF_BYTES_ALLOC    - before_stats.Sz_alloc AS Sz_alloc,         after_STATS.SUM_NUMBER_OF_BYTES_FREE     - before_stats.Sz_free  AS Sz_free,         after_stats.CURRENT_NUMBER_OF_BYTES_USED - before_stats.Sz_curr  AS Sz_curr    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SELECT         SUM(after_stats.CURRENT_COUNT_USED) - SUM(before_stats.N_curr)   AS N_left,         SUM(after_stats.CURRENT_NUMBER_OF_BYTES_USED) - SUM(before_stats.Sz_curr)  AS Sz_left    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SET @diff = (SELECT COUNT_ALLOC - N_alloc                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_alloc;
  let $assert_text = '$operation' will allocate $object_alloc objects.;
  source include/assert.inc;
  let $object_alloc=;
  SET @diff = (SELECT COUNT_FREE - N_free                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_free;
  let $assert_text = '$operation' will free $object_free objects.;
  source include/assert.inc;
  let $object_free=;
  SET @diff = (SELECT CURRENT_COUNT_USED - N_curr                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_count;
  let $assert_text = '$operation' will leave $object_count objects.;
  source include/assert.inc;
  let $object_count=;
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
echo ###############################################################################;
  eval $operation;
  SELECT         after_stats.EVENT_NAME                                           AS Name,         after_stats.COUNT_ALLOC                  - before_stats.N_alloc  AS N_alloc,         after_stats.COUNT_FREE                   - before_stats.N_free   AS N_free,         after_stats.CURRENT_COUNT_USED           - before_stats.N_curr   AS N_curr,         after_stats.SUM_NUMBER_OF_BYTES_ALLOC    - before_stats.Sz_alloc AS Sz_alloc,         after_STATS.SUM_NUMBER_OF_BYTES_FREE     - before_stats.Sz_free  AS Sz_free,         after_stats.CURRENT_NUMBER_OF_BYTES_USED - before_stats.Sz_curr  AS Sz_curr    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SELECT         SUM(after_stats.CURRENT_COUNT_USED) - SUM(before_stats.N_curr)   AS N_left,         SUM(after_stats.CURRENT_NUMBER_OF_BYTES_USED) - SUM(before_stats.Sz_curr)  AS Sz_left    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SET @diff = (SELECT COUNT_ALLOC - N_alloc                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_alloc;
  let $assert_text = '$operation' will allocate $object_alloc objects.;
  source include/assert.inc;
  let $object_alloc=;
  SET @diff = (SELECT COUNT_FREE - N_free                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_free;
  let $assert_text = '$operation' will free $object_free objects.;
  source include/assert.inc;
  let $object_free=;
  SET @diff = (SELECT CURRENT_COUNT_USED - N_curr                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_count;
  let $assert_text = '$operation' will leave $object_count objects.;
  source include/assert.inc;
  let $object_count=;
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
echo ###############################################################################;
  eval $operation;
  SELECT         after_stats.EVENT_NAME                                           AS Name,         after_stats.COUNT_ALLOC                  - before_stats.N_alloc  AS N_alloc,         after_stats.COUNT_FREE                   - before_stats.N_free   AS N_free,         after_stats.CURRENT_COUNT_USED           - before_stats.N_curr   AS N_curr,         after_stats.SUM_NUMBER_OF_BYTES_ALLOC    - before_stats.Sz_alloc AS Sz_alloc,         after_STATS.SUM_NUMBER_OF_BYTES_FREE     - before_stats.Sz_free  AS Sz_free,         after_stats.CURRENT_NUMBER_OF_BYTES_USED - before_stats.Sz_curr  AS Sz_curr    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SELECT         SUM(after_stats.CURRENT_COUNT_USED) - SUM(before_stats.N_curr)   AS N_left,         SUM(after_stats.CURRENT_NUMBER_OF_BYTES_USED) - SUM(before_stats.Sz_curr)  AS Sz_left    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SET @diff = (SELECT COUNT_ALLOC - N_alloc                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_alloc;
  let $assert_text = '$operation' will allocate $object_alloc objects.;
  source include/assert.inc;
  let $object_alloc=;
  SET @diff = (SELECT COUNT_FREE - N_free                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_free;
  let $assert_text = '$operation' will free $object_free objects.;
  source include/assert.inc;
  let $object_free=;
  SET @diff = (SELECT CURRENT_COUNT_USED - N_curr                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_count;
  let $assert_text = '$operation' will leave $object_count objects.;
  source include/assert.inc;
  let $object_count=;
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
echo ###############################################################################;
  eval $operation;
  SELECT         after_stats.EVENT_NAME                                           AS Name,         after_stats.COUNT_ALLOC                  - before_stats.N_alloc  AS N_alloc,         after_stats.COUNT_FREE                   - before_stats.N_free   AS N_free,         after_stats.CURRENT_COUNT_USED           - before_stats.N_curr   AS N_curr,         after_stats.SUM_NUMBER_OF_BYTES_ALLOC    - before_stats.Sz_alloc AS Sz_alloc,         after_STATS.SUM_NUMBER_OF_BYTES_FREE     - before_stats.Sz_free  AS Sz_free,         after_stats.CURRENT_NUMBER_OF_BYTES_USED - before_stats.Sz_curr  AS Sz_curr    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SELECT         SUM(after_stats.CURRENT_COUNT_USED) - SUM(before_stats.N_curr)   AS N_left,         SUM(after_stats.CURRENT_NUMBER_OF_BYTES_USED) - SUM(before_stats.Sz_curr)  AS Sz_left    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SET @diff = (SELECT COUNT_ALLOC - N_alloc                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_alloc;
  let $assert_text = '$operation' will allocate $object_alloc objects.;
  source include/assert.inc;
  let $object_alloc=;
  SET @diff = (SELECT COUNT_FREE - N_free                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_free;
  let $assert_text = '$operation' will free $object_free objects.;
  source include/assert.inc;
  let $object_free=;
  SET @diff = (SELECT CURRENT_COUNT_USED - N_curr                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_count;
  let $assert_text = '$operation' will leave $object_count objects.;
  source include/assert.inc;
  let $object_count=;
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
echo ###############################################################################;
  eval $operation;
  SELECT         after_stats.EVENT_NAME                                           AS Name,         after_stats.COUNT_ALLOC                  - before_stats.N_alloc  AS N_alloc,         after_stats.COUNT_FREE                   - before_stats.N_free   AS N_free,         after_stats.CURRENT_COUNT_USED           - before_stats.N_curr   AS N_curr,         after_stats.SUM_NUMBER_OF_BYTES_ALLOC    - before_stats.Sz_alloc AS Sz_alloc,         after_STATS.SUM_NUMBER_OF_BYTES_FREE     - before_stats.Sz_free  AS Sz_free,         after_stats.CURRENT_NUMBER_OF_BYTES_USED - before_stats.Sz_curr  AS Sz_curr    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SELECT         SUM(after_stats.CURRENT_COUNT_USED) - SUM(before_stats.N_curr)   AS N_left,         SUM(after_stats.CURRENT_NUMBER_OF_BYTES_USED) - SUM(before_stats.Sz_curr)  AS Sz_left    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SET @diff = (SELECT COUNT_ALLOC - N_alloc                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_alloc;
  let $assert_text = '$operation' will allocate $object_alloc objects.;
  source include/assert.inc;
  let $object_alloc=;
  SET @diff = (SELECT COUNT_FREE - N_free                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_free;
  let $assert_text = '$operation' will free $object_free objects.;
  source include/assert.inc;
  let $object_free=;
  SET @diff = (SELECT CURRENT_COUNT_USED - N_curr                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_count;
  let $assert_text = '$operation' will leave $object_count objects.;
  source include/assert.inc;
  let $object_count=;
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
echo ###############################################################################;
  eval $operation;
  SELECT         after_stats.EVENT_NAME                                           AS Name,         after_stats.COUNT_ALLOC                  - before_stats.N_alloc  AS N_alloc,         after_stats.COUNT_FREE                   - before_stats.N_free   AS N_free,         after_stats.CURRENT_COUNT_USED           - before_stats.N_curr   AS N_curr,         after_stats.SUM_NUMBER_OF_BYTES_ALLOC    - before_stats.Sz_alloc AS Sz_alloc,         after_STATS.SUM_NUMBER_OF_BYTES_FREE     - before_stats.Sz_free  AS Sz_free,         after_stats.CURRENT_NUMBER_OF_BYTES_USED - before_stats.Sz_curr  AS Sz_curr    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SELECT         SUM(after_stats.CURRENT_COUNT_USED) - SUM(before_stats.N_curr)   AS N_left,         SUM(after_stats.CURRENT_NUMBER_OF_BYTES_USED) - SUM(before_stats.Sz_curr)  AS Sz_left    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SET @diff = (SELECT COUNT_ALLOC - N_alloc                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_alloc;
  let $assert_text = '$operation' will allocate $object_alloc objects.;
  source include/assert.inc;
  let $object_alloc=;
  SET @diff = (SELECT COUNT_FREE - N_free                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_free;
  let $assert_text = '$operation' will free $object_free objects.;
  source include/assert.inc;
  let $object_free=;
  SET @diff = (SELECT CURRENT_COUNT_USED - N_curr                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_count;
  let $assert_text = '$operation' will leave $object_count objects.;
  source include/assert.inc;
  let $object_count=;
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
echo ###############################################################################;
  eval $operation;
  SELECT         after_stats.EVENT_NAME                                           AS Name,         after_stats.COUNT_ALLOC                  - before_stats.N_alloc  AS N_alloc,         after_stats.COUNT_FREE                   - before_stats.N_free   AS N_free,         after_stats.CURRENT_COUNT_USED           - before_stats.N_curr   AS N_curr,         after_stats.SUM_NUMBER_OF_BYTES_ALLOC    - before_stats.Sz_alloc AS Sz_alloc,         after_STATS.SUM_NUMBER_OF_BYTES_FREE     - before_stats.Sz_free  AS Sz_free,         after_stats.CURRENT_NUMBER_OF_BYTES_USED - before_stats.Sz_curr  AS Sz_curr    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SELECT         SUM(after_stats.CURRENT_COUNT_USED) - SUM(before_stats.N_curr)   AS N_left,         SUM(after_stats.CURRENT_NUMBER_OF_BYTES_USED) - SUM(before_stats.Sz_curr)  AS Sz_left    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SET @diff = (SELECT COUNT_ALLOC - N_alloc                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_alloc;
  let $assert_text = '$operation' will allocate $object_alloc objects.;
  source include/assert.inc;
  let $object_alloc=;
  SET @diff = (SELECT COUNT_FREE - N_free                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_free;
  let $assert_text = '$operation' will free $object_free objects.;
  source include/assert.inc;
  let $object_free=;
  SET @diff = (SELECT CURRENT_COUNT_USED - N_curr                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_count;
  let $assert_text = '$operation' will leave $object_count objects.;
  source include/assert.inc;
  let $object_count=;
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
echo ###############################################################################;
  eval $operation;
  SELECT         after_stats.EVENT_NAME                                           AS Name,         after_stats.COUNT_ALLOC                  - before_stats.N_alloc  AS N_alloc,         after_stats.COUNT_FREE                   - before_stats.N_free   AS N_free,         after_stats.CURRENT_COUNT_USED           - before_stats.N_curr   AS N_curr,         after_stats.SUM_NUMBER_OF_BYTES_ALLOC    - before_stats.Sz_alloc AS Sz_alloc,         after_STATS.SUM_NUMBER_OF_BYTES_FREE     - before_stats.Sz_free  AS Sz_free,         after_stats.CURRENT_NUMBER_OF_BYTES_USED - before_stats.Sz_curr  AS Sz_curr    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SELECT         SUM(after_stats.CURRENT_COUNT_USED) - SUM(before_stats.N_curr)   AS N_left,         SUM(after_stats.CURRENT_NUMBER_OF_BYTES_USED) - SUM(before_stats.Sz_curr)  AS Sz_left    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SET @diff = (SELECT COUNT_ALLOC - N_alloc                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_alloc;
  let $assert_text = '$operation' will allocate $object_alloc objects.;
  source include/assert.inc;
  let $object_alloc=;
  SET @diff = (SELECT COUNT_FREE - N_free                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_free;
  let $assert_text = '$operation' will free $object_free objects.;
  source include/assert.inc;
  let $object_free=;
  SET @diff = (SELECT CURRENT_COUNT_USED - N_curr                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_count;
  let $assert_text = '$operation' will leave $object_count objects.;
  source include/assert.inc;
  let $object_count=;
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
echo ###############################################################################;
  eval $operation;
  SELECT         after_stats.EVENT_NAME                                           AS Name,         after_stats.COUNT_ALLOC                  - before_stats.N_alloc  AS N_alloc,         after_stats.COUNT_FREE                   - before_stats.N_free   AS N_free,         after_stats.CURRENT_COUNT_USED           - before_stats.N_curr   AS N_curr,         after_stats.SUM_NUMBER_OF_BYTES_ALLOC    - before_stats.Sz_alloc AS Sz_alloc,         after_STATS.SUM_NUMBER_OF_BYTES_FREE     - before_stats.Sz_free  AS Sz_free,         after_stats.CURRENT_NUMBER_OF_BYTES_USED - before_stats.Sz_curr  AS Sz_curr    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SELECT         SUM(after_stats.CURRENT_COUNT_USED) - SUM(before_stats.N_curr)   AS N_left,         SUM(after_stats.CURRENT_NUMBER_OF_BYTES_USED) - SUM(before_stats.Sz_curr)  AS Sz_left    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SET @diff = (SELECT COUNT_ALLOC - N_alloc                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_alloc;
  let $assert_text = '$operation' will allocate $object_alloc objects.;
  source include/assert.inc;
  let $object_alloc=;
  SET @diff = (SELECT COUNT_FREE - N_free                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_free;
  let $assert_text = '$operation' will free $object_free objects.;
  source include/assert.inc;
  let $object_free=;
  SET @diff = (SELECT CURRENT_COUNT_USED - N_curr                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_count;
  let $assert_text = '$operation' will leave $object_count objects.;
  source include/assert.inc;
  let $object_count=;
DROP TABLE dd_pfs.mem_events;
DROP SCHEMA dd_pfs;
create schema s;
create table s.t1(i int);
create table s.t2(i int) tablespace innodb_system;
drop schema s;
source include/dd_pfs_save_state.inc;
source include/dd_pfs_report_state.inc;
SET foreign_key_checks= 0;
CREATE TABLE test.tables (  `id` bigint unsigned NOT NULL AUTO_INCREMENT,  `schema_id` bigint unsigned NOT NULL,  `name` varchar(64) COLLATE utf8_bin NOT NULL,  `type` enum('BASE TABLE','VIEW','SYSTEM VIEW') COLLATE utf8_bin NOT NULL,  `engine` varchar(64) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,  `mysql_version_id` int unsigned NOT NULL,  `row_format` enum('Fixed','Dynamic','Compressed','Redundant','Compact','Paged') COLLATE utf8_bin DEFAULT NULL,  `collation_id` bigint unsigned DEFAULT NULL,  `comment` varchar(2048) COLLATE utf8_bin NOT NULL,  `hidden` enum('Visible','System','SE','DDL') COLLATE utf8_bin NOT NULL,  `options` mediumtext COLLATE utf8_bin,  `se_private_data` mediumtext COLLATE utf8_bin,  `se_private_id` bigint unsigned DEFAULT NULL,  `tablespace_id` bigint unsigned DEFAULT NULL,  `partition_type` enum('HASH','KEY_51','KEY_55','LINEAR_HASH','LINEAR_KEY_51','LINEAR_KEY_55','RANGE','LIST','RANGE_COLUMNS','LIST_COLUMNS','AUTO','AUTO_LINEAR') COLLATE utf8_bin DEFAULT NULL,  `partition_expression` varchar(2048) COLLATE utf8_bin DEFAULT NULL,  `partition_expression_utf8` varchar(2048) COLLATE utf8_bin DEFAULT NULL,  `default_partitioning` enum('NO','YES','NUMBER') COLLATE utf8_bin DEFAULT NULL,  `subpartition_type` enum('HASH','KEY_51','KEY_55','LINEAR_HASH','LINEAR_KEY_51','LINEAR_KEY_55') COLLATE utf8_bin DEFAULT NULL,  `subpartition_expression` varchar(2048) COLLATE utf8_bin DEFAULT NULL,  `subpartition_expression_utf8` varchar(2048) COLLATE utf8_bin DEFAULT NULL,  `default_subpartitioning` enum('NO','YES','NUMBER') COLLATE utf8_bin DEFAULT NULL,  `created` timestamp NOT NULL,  `last_altered` timestamp NOT NULL,  `view_definition` longblob,  `view_definition_utf8` longtext COLLATE utf8_bin,  `view_check_option` enum('NONE','LOCAL','CASCADED') COLLATE utf8_bin DEFAULT NULL,  `view_is_updatable` enum('NO','YES') COLLATE utf8_bin DEFAULT NULL,  `view_algorithm` enum('UNDEFINED','TEMPTABLE','MERGE') COLLATE utf8_bin DEFAULT NULL,  `view_security_type` enum('DEFAULT','INVOKER','DEFINER') COLLATE utf8_bin DEFAULT NULL,  `view_definer` varchar(192) COLLATE utf8_bin DEFAULT NULL,  `view_client_collation_id` bigint unsigned DEFAULT NULL,  `view_connection_collation_id` bigint unsigned DEFAULT NULL,  `view_column_names` longtext COLLATE utf8_bin,  `last_checked_for_upgrade_version_id` int unsigned NOT NULL,  `engine_attribute` json DEFAULT NULL,  `secondary_engine_attribute` json DEFAULT NULL,  PRIMARY KEY (`id`),  UNIQUE KEY `schema_id` (`schema_id`,`name`),  UNIQUE KEY `engine` (`engine`,`se_private_id`),  KEY `engine_2` (`engine`),  KEY `collation_id` (`collation_id`),  KEY `tablespace_id` (`tablespace_id`),  KEY `type` (`type`),  KEY `view_client_collation_id` (`view_client_collation_id`),  KEY `view_connection_collation_id` (`view_connection_collation_id`),  KEY `type_2` (`type`,`view_definer`),  CONSTRAINT `tables_ibfk_1` FOREIGN KEY (`schema_id`) REFERENCES test.dummy (`id`),  CONSTRAINT `tables_ibfk_2` FOREIGN KEY (`collation_id`) REFERENCES test.dummy (`id`),  CONSTRAINT `tables_ibfk_3` FOREIGN KEY (`tablespace_id`) REFERENCES test.dummy (`id`),  CONSTRAINT `tables_ibfk_4` FOREIGN KEY (`view_client_collation_id`) REFERENCES test.dummy (`id`),  CONSTRAINT `tables_ibfk_5` FOREIGN KEY (`view_connection_collation_id`) REFERENCES test.dummy (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin STATS_PERSISTENT=0 ROW_FORMAT=DYNAMIC;
SET foreign_key_checks= DEFAULT;
DROP TABLE test.tables;
while ($i > 0)  dec $i;
  eval CREATE TABLE test.t_$i (i int) TABLESPACE innodb_system;
  eval SELECT * FROM  test.t_$i;
  eval FLUSH TABLES test.t_$i;
while ($i > 0)  dec $i;
  eval SELECT * FROM  test.t_$i;
while ($i > 0)  dec $i;
  eval DROP TABLE  test.t_$i;
CREATE SCHEMA s;
while ($i > 0)  dec $i;
  eval CREATE TABLE s.t_$i (i int, j int, k int, l int);
  # Pull in DD objects for tables in cache.  eval SELECT * FROM s.t_$i;
CREATE SCHEMA s1;
CREATE TABLE s1.t_myisam(i INT) ENGINE=MYISAM;
CREATE VIEW s1.v1 AS SELECT * FROM s1.t_myisam;
SELECT * FROM s1.v1;
CREATE SCHEMA s2;
CREATE TABLE s2.t_innodb(i INT) TABLESPACE=innodb_system;
CREATE VIEW v2 AS SELECT * FROM s2.t_innodb;
SELECT * FROM v2;
DROP VIEW v2;
CREATE SCHEMA s3;
CREATE TABLE s3.t_innodb(i INT) TABLESPACE=innodb_system;
CREATE VIEW s3.v3 AS SELECT * FROM s3.t_innodb;
SELECT * FROM s3.v3;
CREATE SCHEMA s4;
CREATE VIEW s4.v4 AS SELECT 1 AS i;
CREATE VIEW s4.v5 AS SELECT * FROM s4.v4;
SELECT * FROM s4.v5;
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
TRUNCATE TABLE performance_schema.memory_summary_global_by_event_name;
CREATE SCHEMA dd_pfs;
CREATE TABLE dd_pfs.mem_events (Seq int auto_increment PRIMARY KEY, Query varchar(1000)) AS  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
echo ###############################################################################;
  eval $operation;
  SELECT         after_stats.EVENT_NAME                                           AS Name,         after_stats.COUNT_ALLOC                  - before_stats.N_alloc  AS N_alloc,         after_stats.COUNT_FREE                   - before_stats.N_free   AS N_free,         after_stats.CURRENT_COUNT_USED           - before_stats.N_curr   AS N_curr,         after_stats.SUM_NUMBER_OF_BYTES_ALLOC    - before_stats.Sz_alloc AS Sz_alloc,         after_STATS.SUM_NUMBER_OF_BYTES_FREE     - before_stats.Sz_free  AS Sz_free,         after_stats.CURRENT_NUMBER_OF_BYTES_USED - before_stats.Sz_curr  AS Sz_curr    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SELECT         SUM(after_stats.CURRENT_COUNT_USED) - SUM(before_stats.N_curr)   AS N_left,         SUM(after_stats.CURRENT_NUMBER_OF_BYTES_USED) - SUM(before_stats.Sz_curr)  AS Sz_left    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SET @diff = (SELECT COUNT_ALLOC - N_alloc                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_alloc;
  let $assert_text = '$operation' will allocate $object_alloc objects.;
  source include/assert.inc;
  let $object_alloc=;
  SET @diff = (SELECT COUNT_FREE - N_free                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_free;
  let $assert_text = '$operation' will free $object_free objects.;
  source include/assert.inc;
  let $object_free=;
  SET @diff = (SELECT CURRENT_COUNT_USED - N_curr                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_count;
  let $assert_text = '$operation' will leave $object_count objects.;
  source include/assert.inc;
  let $object_count=;
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
echo ###############################################################################;
  eval $operation;
  SELECT         after_stats.EVENT_NAME                                           AS Name,         after_stats.COUNT_ALLOC                  - before_stats.N_alloc  AS N_alloc,         after_stats.COUNT_FREE                   - before_stats.N_free   AS N_free,         after_stats.CURRENT_COUNT_USED           - before_stats.N_curr   AS N_curr,         after_stats.SUM_NUMBER_OF_BYTES_ALLOC    - before_stats.Sz_alloc AS Sz_alloc,         after_STATS.SUM_NUMBER_OF_BYTES_FREE     - before_stats.Sz_free  AS Sz_free,         after_stats.CURRENT_NUMBER_OF_BYTES_USED - before_stats.Sz_curr  AS Sz_curr    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SELECT         SUM(after_stats.CURRENT_COUNT_USED) - SUM(before_stats.N_curr)   AS N_left,         SUM(after_stats.CURRENT_NUMBER_OF_BYTES_USED) - SUM(before_stats.Sz_curr)  AS Sz_left    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SET @diff = (SELECT COUNT_ALLOC - N_alloc                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_alloc;
  let $assert_text = '$operation' will allocate $object_alloc objects.;
  source include/assert.inc;
  let $object_alloc=;
  SET @diff = (SELECT COUNT_FREE - N_free                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_free;
  let $assert_text = '$operation' will free $object_free objects.;
  source include/assert.inc;
  let $object_free=;
  SET @diff = (SELECT CURRENT_COUNT_USED - N_curr                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_count;
  let $assert_text = '$operation' will leave $object_count objects.;
  source include/assert.inc;
  let $object_count=;
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
echo ###############################################################################;
  eval $operation;
  SELECT         after_stats.EVENT_NAME                                           AS Name,         after_stats.COUNT_ALLOC                  - before_stats.N_alloc  AS N_alloc,         after_stats.COUNT_FREE                   - before_stats.N_free   AS N_free,         after_stats.CURRENT_COUNT_USED           - before_stats.N_curr   AS N_curr,         after_stats.SUM_NUMBER_OF_BYTES_ALLOC    - before_stats.Sz_alloc AS Sz_alloc,         after_STATS.SUM_NUMBER_OF_BYTES_FREE     - before_stats.Sz_free  AS Sz_free,         after_stats.CURRENT_NUMBER_OF_BYTES_USED - before_stats.Sz_curr  AS Sz_curr    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SELECT         SUM(after_stats.CURRENT_COUNT_USED) - SUM(before_stats.N_curr)   AS N_left,         SUM(after_stats.CURRENT_NUMBER_OF_BYTES_USED) - SUM(before_stats.Sz_curr)  AS Sz_left    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SET @diff = (SELECT COUNT_ALLOC - N_alloc                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_alloc;
  let $assert_text = '$operation' will allocate $object_alloc objects.;
  source include/assert.inc;
  let $object_alloc=;
  SET @diff = (SELECT COUNT_FREE - N_free                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_free;
  let $assert_text = '$operation' will free $object_free objects.;
  source include/assert.inc;
  let $object_free=;
  SET @diff = (SELECT CURRENT_COUNT_USED - N_curr                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_count;
  let $assert_text = '$operation' will leave $object_count objects.;
  source include/assert.inc;
  let $object_count=;
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
echo ###############################################################################;
  eval $operation;
  SELECT         after_stats.EVENT_NAME                                           AS Name,         after_stats.COUNT_ALLOC                  - before_stats.N_alloc  AS N_alloc,         after_stats.COUNT_FREE                   - before_stats.N_free   AS N_free,         after_stats.CURRENT_COUNT_USED           - before_stats.N_curr   AS N_curr,         after_stats.SUM_NUMBER_OF_BYTES_ALLOC    - before_stats.Sz_alloc AS Sz_alloc,         after_STATS.SUM_NUMBER_OF_BYTES_FREE     - before_stats.Sz_free  AS Sz_free,         after_stats.CURRENT_NUMBER_OF_BYTES_USED - before_stats.Sz_curr  AS Sz_curr    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SELECT         SUM(after_stats.CURRENT_COUNT_USED) - SUM(before_stats.N_curr)   AS N_left,         SUM(after_stats.CURRENT_NUMBER_OF_BYTES_USED) - SUM(before_stats.Sz_curr)  AS Sz_left    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SET @diff = (SELECT COUNT_ALLOC - N_alloc                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_alloc;
  let $assert_text = '$operation' will allocate $object_alloc objects.;
  source include/assert.inc;
  let $object_alloc=;
  SET @diff = (SELECT COUNT_FREE - N_free                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_free;
  let $assert_text = '$operation' will free $object_free objects.;
  source include/assert.inc;
  let $object_free=;
  SET @diff = (SELECT CURRENT_COUNT_USED - N_curr                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_count;
  let $assert_text = '$operation' will leave $object_count objects.;
  source include/assert.inc;
  let $object_count=;
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
echo ###############################################################################;
  eval $operation;
  SELECT         after_stats.EVENT_NAME                                           AS Name,         after_stats.COUNT_ALLOC                  - before_stats.N_alloc  AS N_alloc,         after_stats.COUNT_FREE                   - before_stats.N_free   AS N_free,         after_stats.CURRENT_COUNT_USED           - before_stats.N_curr   AS N_curr,         after_stats.SUM_NUMBER_OF_BYTES_ALLOC    - before_stats.Sz_alloc AS Sz_alloc,         after_STATS.SUM_NUMBER_OF_BYTES_FREE     - before_stats.Sz_free  AS Sz_free,         after_stats.CURRENT_NUMBER_OF_BYTES_USED - before_stats.Sz_curr  AS Sz_curr    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SELECT         SUM(after_stats.CURRENT_COUNT_USED) - SUM(before_stats.N_curr)   AS N_left,         SUM(after_stats.CURRENT_NUMBER_OF_BYTES_USED) - SUM(before_stats.Sz_curr)  AS Sz_left    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SET @diff = (SELECT COUNT_ALLOC - N_alloc                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_alloc;
  let $assert_text = '$operation' will allocate $object_alloc objects.;
  source include/assert.inc;
  let $object_alloc=;
  SET @diff = (SELECT COUNT_FREE - N_free                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_free;
  let $assert_text = '$operation' will free $object_free objects.;
  source include/assert.inc;
  let $object_free=;
  SET @diff = (SELECT CURRENT_COUNT_USED - N_curr                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_count;
  let $assert_text = '$operation' will leave $object_count objects.;
  source include/assert.inc;
  let $object_count=;
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
echo ###############################################################################;
  eval $operation;
  SELECT         after_stats.EVENT_NAME                                           AS Name,         after_stats.COUNT_ALLOC                  - before_stats.N_alloc  AS N_alloc,         after_stats.COUNT_FREE                   - before_stats.N_free   AS N_free,         after_stats.CURRENT_COUNT_USED           - before_stats.N_curr   AS N_curr,         after_stats.SUM_NUMBER_OF_BYTES_ALLOC    - before_stats.Sz_alloc AS Sz_alloc,         after_STATS.SUM_NUMBER_OF_BYTES_FREE     - before_stats.Sz_free  AS Sz_free,         after_stats.CURRENT_NUMBER_OF_BYTES_USED - before_stats.Sz_curr  AS Sz_curr    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SELECT         SUM(after_stats.CURRENT_COUNT_USED) - SUM(before_stats.N_curr)   AS N_left,         SUM(after_stats.CURRENT_NUMBER_OF_BYTES_USED) - SUM(before_stats.Sz_curr)  AS Sz_left    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SET @diff = (SELECT COUNT_ALLOC - N_alloc                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_alloc;
  let $assert_text = '$operation' will allocate $object_alloc objects.;
  source include/assert.inc;
  let $object_alloc=;
  SET @diff = (SELECT COUNT_FREE - N_free                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_free;
  let $assert_text = '$operation' will free $object_free objects.;
  source include/assert.inc;
  let $object_free=;
  SET @diff = (SELECT CURRENT_COUNT_USED - N_curr                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_count;
  let $assert_text = '$operation' will leave $object_count objects.;
  source include/assert.inc;
  let $object_count=;
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
echo ###############################################################################;
  eval $operation;
  SELECT         after_stats.EVENT_NAME                                           AS Name,         after_stats.COUNT_ALLOC                  - before_stats.N_alloc  AS N_alloc,         after_stats.COUNT_FREE                   - before_stats.N_free   AS N_free,         after_stats.CURRENT_COUNT_USED           - before_stats.N_curr   AS N_curr,         after_stats.SUM_NUMBER_OF_BYTES_ALLOC    - before_stats.Sz_alloc AS Sz_alloc,         after_STATS.SUM_NUMBER_OF_BYTES_FREE     - before_stats.Sz_free  AS Sz_free,         after_stats.CURRENT_NUMBER_OF_BYTES_USED - before_stats.Sz_curr  AS Sz_curr    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SELECT         SUM(after_stats.CURRENT_COUNT_USED) - SUM(before_stats.N_curr)   AS N_left,         SUM(after_stats.CURRENT_NUMBER_OF_BYTES_USED) - SUM(before_stats.Sz_curr)  AS Sz_left    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SET @diff = (SELECT COUNT_ALLOC - N_alloc                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_alloc;
  let $assert_text = '$operation' will allocate $object_alloc objects.;
  source include/assert.inc;
  let $object_alloc=;
  SET @diff = (SELECT COUNT_FREE - N_free                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_free;
  let $assert_text = '$operation' will free $object_free objects.;
  source include/assert.inc;
  let $object_free=;
  SET @diff = (SELECT CURRENT_COUNT_USED - N_curr                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_count;
  let $assert_text = '$operation' will leave $object_count objects.;
  source include/assert.inc;
  let $object_count=;
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
echo ###############################################################################;
  eval $operation;
  SELECT         after_stats.EVENT_NAME                                           AS Name,         after_stats.COUNT_ALLOC                  - before_stats.N_alloc  AS N_alloc,         after_stats.COUNT_FREE                   - before_stats.N_free   AS N_free,         after_stats.CURRENT_COUNT_USED           - before_stats.N_curr   AS N_curr,         after_stats.SUM_NUMBER_OF_BYTES_ALLOC    - before_stats.Sz_alloc AS Sz_alloc,         after_STATS.SUM_NUMBER_OF_BYTES_FREE     - before_stats.Sz_free  AS Sz_free,         after_stats.CURRENT_NUMBER_OF_BYTES_USED - before_stats.Sz_curr  AS Sz_curr    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SELECT         SUM(after_stats.CURRENT_COUNT_USED) - SUM(before_stats.N_curr)   AS N_left,         SUM(after_stats.CURRENT_NUMBER_OF_BYTES_USED) - SUM(before_stats.Sz_curr)  AS Sz_left    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SET @diff = (SELECT COUNT_ALLOC - N_alloc                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_alloc;
  let $assert_text = '$operation' will allocate $object_alloc objects.;
  source include/assert.inc;
  let $object_alloc=;
  SET @diff = (SELECT COUNT_FREE - N_free                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_free;
  let $assert_text = '$operation' will free $object_free objects.;
  source include/assert.inc;
  let $object_free=;
  SET @diff = (SELECT CURRENT_COUNT_USED - N_curr                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_count;
  let $assert_text = '$operation' will leave $object_count objects.;
  source include/assert.inc;
  let $object_count=;
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
echo ###############################################################################;
  eval $operation;
  SELECT         after_stats.EVENT_NAME                                           AS Name,         after_stats.COUNT_ALLOC                  - before_stats.N_alloc  AS N_alloc,         after_stats.COUNT_FREE                   - before_stats.N_free   AS N_free,         after_stats.CURRENT_COUNT_USED           - before_stats.N_curr   AS N_curr,         after_stats.SUM_NUMBER_OF_BYTES_ALLOC    - before_stats.Sz_alloc AS Sz_alloc,         after_STATS.SUM_NUMBER_OF_BYTES_FREE     - before_stats.Sz_free  AS Sz_free,         after_stats.CURRENT_NUMBER_OF_BYTES_USED - before_stats.Sz_curr  AS Sz_curr    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SELECT         SUM(after_stats.CURRENT_COUNT_USED) - SUM(before_stats.N_curr)   AS N_left,         SUM(after_stats.CURRENT_NUMBER_OF_BYTES_USED) - SUM(before_stats.Sz_curr)  AS Sz_left    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SET @diff = (SELECT COUNT_ALLOC - N_alloc                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_alloc;
  let $assert_text = '$operation' will allocate $object_alloc objects.;
  source include/assert.inc;
  let $object_alloc=;
  SET @diff = (SELECT COUNT_FREE - N_free                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_free;
  let $assert_text = '$operation' will free $object_free objects.;
  source include/assert.inc;
  let $object_free=;
  SET @diff = (SELECT CURRENT_COUNT_USED - N_curr                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_count;
  let $assert_text = '$operation' will leave $object_count objects.;
  source include/assert.inc;
  let $object_count=;
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
echo ###############################################################################;
  eval $operation;
  SELECT         after_stats.EVENT_NAME                                           AS Name,         after_stats.COUNT_ALLOC                  - before_stats.N_alloc  AS N_alloc,         after_stats.COUNT_FREE                   - before_stats.N_free   AS N_free,         after_stats.CURRENT_COUNT_USED           - before_stats.N_curr   AS N_curr,         after_stats.SUM_NUMBER_OF_BYTES_ALLOC    - before_stats.Sz_alloc AS Sz_alloc,         after_STATS.SUM_NUMBER_OF_BYTES_FREE     - before_stats.Sz_free  AS Sz_free,         after_stats.CURRENT_NUMBER_OF_BYTES_USED - before_stats.Sz_curr  AS Sz_curr    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SELECT         SUM(after_stats.CURRENT_COUNT_USED) - SUM(before_stats.N_curr)   AS N_left,         SUM(after_stats.CURRENT_NUMBER_OF_BYTES_USED) - SUM(before_stats.Sz_curr)  AS Sz_left    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SET @diff = (SELECT COUNT_ALLOC - N_alloc                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_alloc;
  let $assert_text = '$operation' will allocate $object_alloc objects.;
  source include/assert.inc;
  let $object_alloc=;
  SET @diff = (SELECT COUNT_FREE - N_free                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_free;
  let $assert_text = '$operation' will free $object_free objects.;
  source include/assert.inc;
  let $object_free=;
  SET @diff = (SELECT CURRENT_COUNT_USED - N_curr                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_count;
  let $assert_text = '$operation' will leave $object_count objects.;
  source include/assert.inc;
  let $object_count=;
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
echo ###############################################################################;
  eval $operation;
  SELECT         after_stats.EVENT_NAME                                           AS Name,         after_stats.COUNT_ALLOC                  - before_stats.N_alloc  AS N_alloc,         after_stats.COUNT_FREE                   - before_stats.N_free   AS N_free,         after_stats.CURRENT_COUNT_USED           - before_stats.N_curr   AS N_curr,         after_stats.SUM_NUMBER_OF_BYTES_ALLOC    - before_stats.Sz_alloc AS Sz_alloc,         after_STATS.SUM_NUMBER_OF_BYTES_FREE     - before_stats.Sz_free  AS Sz_free,         after_stats.CURRENT_NUMBER_OF_BYTES_USED - before_stats.Sz_curr  AS Sz_curr    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SELECT         SUM(after_stats.CURRENT_COUNT_USED) - SUM(before_stats.N_curr)   AS N_left,         SUM(after_stats.CURRENT_NUMBER_OF_BYTES_USED) - SUM(before_stats.Sz_curr)  AS Sz_left    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SET @diff = (SELECT COUNT_ALLOC - N_alloc                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_alloc;
  let $assert_text = '$operation' will allocate $object_alloc objects.;
  source include/assert.inc;
  let $object_alloc=;
  SET @diff = (SELECT COUNT_FREE - N_free                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_free;
  let $assert_text = '$operation' will free $object_free objects.;
  source include/assert.inc;
  let $object_free=;
  SET @diff = (SELECT CURRENT_COUNT_USED - N_curr                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_count;
  let $assert_text = '$operation' will leave $object_count objects.;
  source include/assert.inc;
  let $object_count=;
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
echo ###############################################################################;
  eval $operation;
  SELECT         after_stats.EVENT_NAME                                           AS Name,         after_stats.COUNT_ALLOC                  - before_stats.N_alloc  AS N_alloc,         after_stats.COUNT_FREE                   - before_stats.N_free   AS N_free,         after_stats.CURRENT_COUNT_USED           - before_stats.N_curr   AS N_curr,         after_stats.SUM_NUMBER_OF_BYTES_ALLOC    - before_stats.Sz_alloc AS Sz_alloc,         after_STATS.SUM_NUMBER_OF_BYTES_FREE     - before_stats.Sz_free  AS Sz_free,         after_stats.CURRENT_NUMBER_OF_BYTES_USED - before_stats.Sz_curr  AS Sz_curr    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SELECT         SUM(after_stats.CURRENT_COUNT_USED) - SUM(before_stats.N_curr)   AS N_left,         SUM(after_stats.CURRENT_NUMBER_OF_BYTES_USED) - SUM(before_stats.Sz_curr)  AS Sz_left    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SET @diff = (SELECT COUNT_ALLOC - N_alloc                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_alloc;
  let $assert_text = '$operation' will allocate $object_alloc objects.;
  source include/assert.inc;
  let $object_alloc=;
  SET @diff = (SELECT COUNT_FREE - N_free                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_free;
  let $assert_text = '$operation' will free $object_free objects.;
  source include/assert.inc;
  let $object_free=;
  SET @diff = (SELECT CURRENT_COUNT_USED - N_curr                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_count;
  let $assert_text = '$operation' will leave $object_count objects.;
  source include/assert.inc;
  let $object_count=;
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
echo ###############################################################################;
  eval $operation;
  SELECT         after_stats.EVENT_NAME                                           AS Name,         after_stats.COUNT_ALLOC                  - before_stats.N_alloc  AS N_alloc,         after_stats.COUNT_FREE                   - before_stats.N_free   AS N_free,         after_stats.CURRENT_COUNT_USED           - before_stats.N_curr   AS N_curr,         after_stats.SUM_NUMBER_OF_BYTES_ALLOC    - before_stats.Sz_alloc AS Sz_alloc,         after_STATS.SUM_NUMBER_OF_BYTES_FREE     - before_stats.Sz_free  AS Sz_free,         after_stats.CURRENT_NUMBER_OF_BYTES_USED - before_stats.Sz_curr  AS Sz_curr    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SELECT         SUM(after_stats.CURRENT_COUNT_USED) - SUM(before_stats.N_curr)   AS N_left,         SUM(after_stats.CURRENT_NUMBER_OF_BYTES_USED) - SUM(before_stats.Sz_curr)  AS Sz_left    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SET @diff = (SELECT COUNT_ALLOC - N_alloc                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_alloc;
  let $assert_text = '$operation' will allocate $object_alloc objects.;
  source include/assert.inc;
  let $object_alloc=;
  SET @diff = (SELECT COUNT_FREE - N_free                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_free;
  let $assert_text = '$operation' will free $object_free objects.;
  source include/assert.inc;
  let $object_free=;
  SET @diff = (SELECT CURRENT_COUNT_USED - N_curr                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_count;
  let $assert_text = '$operation' will leave $object_count objects.;
  source include/assert.inc;
  let $object_count=;
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
echo ###############################################################################;
  eval $operation;
  SELECT         after_stats.EVENT_NAME                                           AS Name,         after_stats.COUNT_ALLOC                  - before_stats.N_alloc  AS N_alloc,         after_stats.COUNT_FREE                   - before_stats.N_free   AS N_free,         after_stats.CURRENT_COUNT_USED           - before_stats.N_curr   AS N_curr,         after_stats.SUM_NUMBER_OF_BYTES_ALLOC    - before_stats.Sz_alloc AS Sz_alloc,         after_STATS.SUM_NUMBER_OF_BYTES_FREE     - before_stats.Sz_free  AS Sz_free,         after_stats.CURRENT_NUMBER_OF_BYTES_USED - before_stats.Sz_curr  AS Sz_curr    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SELECT         SUM(after_stats.CURRENT_COUNT_USED) - SUM(before_stats.N_curr)   AS N_left,         SUM(after_stats.CURRENT_NUMBER_OF_BYTES_USED) - SUM(before_stats.Sz_curr)  AS Sz_left    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SET @diff = (SELECT COUNT_ALLOC - N_alloc                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_alloc;
  let $assert_text = '$operation' will allocate $object_alloc objects.;
  source include/assert.inc;
  let $object_alloc=;
  SET @diff = (SELECT COUNT_FREE - N_free                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_free;
  let $assert_text = '$operation' will free $object_free objects.;
  source include/assert.inc;
  let $object_free=;
  SET @diff = (SELECT CURRENT_COUNT_USED - N_curr                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_count;
  let $assert_text = '$operation' will leave $object_count objects.;
  source include/assert.inc;
  let $object_count=;
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
echo ###############################################################################;
  eval $operation;
  SELECT         after_stats.EVENT_NAME                                           AS Name,         after_stats.COUNT_ALLOC                  - before_stats.N_alloc  AS N_alloc,         after_stats.COUNT_FREE                   - before_stats.N_free   AS N_free,         after_stats.CURRENT_COUNT_USED           - before_stats.N_curr   AS N_curr,         after_stats.SUM_NUMBER_OF_BYTES_ALLOC    - before_stats.Sz_alloc AS Sz_alloc,         after_STATS.SUM_NUMBER_OF_BYTES_FREE     - before_stats.Sz_free  AS Sz_free,         after_stats.CURRENT_NUMBER_OF_BYTES_USED - before_stats.Sz_curr  AS Sz_curr    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SELECT         SUM(after_stats.CURRENT_COUNT_USED) - SUM(before_stats.N_curr)   AS N_left,         SUM(after_stats.CURRENT_NUMBER_OF_BYTES_USED) - SUM(before_stats.Sz_curr)  AS Sz_left    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SET @diff = (SELECT COUNT_ALLOC - N_alloc                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_alloc;
  let $assert_text = '$operation' will allocate $object_alloc objects.;
  source include/assert.inc;
  let $object_alloc=;
  SET @diff = (SELECT COUNT_FREE - N_free                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_free;
  let $assert_text = '$operation' will free $object_free objects.;
  source include/assert.inc;
  let $object_free=;
  SET @diff = (SELECT CURRENT_COUNT_USED - N_curr                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_count;
  let $assert_text = '$operation' will leave $object_count objects.;
  source include/assert.inc;
  let $object_count=;
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
echo ###############################################################################;
  eval $operation;
  SELECT         after_stats.EVENT_NAME                                           AS Name,         after_stats.COUNT_ALLOC                  - before_stats.N_alloc  AS N_alloc,         after_stats.COUNT_FREE                   - before_stats.N_free   AS N_free,         after_stats.CURRENT_COUNT_USED           - before_stats.N_curr   AS N_curr,         after_stats.SUM_NUMBER_OF_BYTES_ALLOC    - before_stats.Sz_alloc AS Sz_alloc,         after_STATS.SUM_NUMBER_OF_BYTES_FREE     - before_stats.Sz_free  AS Sz_free,         after_stats.CURRENT_NUMBER_OF_BYTES_USED - before_stats.Sz_curr  AS Sz_curr    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SELECT         SUM(after_stats.CURRENT_COUNT_USED) - SUM(before_stats.N_curr)   AS N_left,         SUM(after_stats.CURRENT_NUMBER_OF_BYTES_USED) - SUM(before_stats.Sz_curr)  AS Sz_left    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SET @diff = (SELECT COUNT_ALLOC - N_alloc                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_alloc;
  let $assert_text = '$operation' will allocate $object_alloc objects.;
  source include/assert.inc;
  let $object_alloc=;
  SET @diff = (SELECT COUNT_FREE - N_free                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_free;
  let $assert_text = '$operation' will free $object_free objects.;
  source include/assert.inc;
  let $object_free=;
  SET @diff = (SELECT CURRENT_COUNT_USED - N_curr                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_count;
  let $assert_text = '$operation' will leave $object_count objects.;
  source include/assert.inc;
  let $object_count=;
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
DELETE FROM dd_pfs.mem_events WHERE Query = 'savepoint';
INSERT INTO dd_pfs.mem_events (Name, N_alloc, N_free, N_curr, Sz_alloc, Sz_free, Sz_curr, Query)  SELECT EVENT_NAME AS Name, COUNT_ALLOC AS N_alloc, COUNT_FREE AS N_free,         CURRENT_COUNT_USED AS N_curr, SUM_NUMBER_OF_BYTES_ALLOC AS Sz_alloc,         SUM_NUMBER_OF_BYTES_FREE AS Sz_free, CURRENT_NUMBER_OF_BYTES_USED AS Sz_curr,         'savepoint' AS Query  FROM performance_schema.memory_summary_global_by_event_name  WHERE EVENT_NAME = 'memory/sql/dd::infrastructure' OR        EVENT_NAME = 'memory/sql/dd::objects' OR        EVENT_NAME = 'memory/sql/dd::String_type';
echo ###############################################################################;
  eval $operation;
  SELECT         after_stats.EVENT_NAME                                           AS Name,         after_stats.COUNT_ALLOC                  - before_stats.N_alloc  AS N_alloc,         after_stats.COUNT_FREE                   - before_stats.N_free   AS N_free,         after_stats.CURRENT_COUNT_USED           - before_stats.N_curr   AS N_curr,         after_stats.SUM_NUMBER_OF_BYTES_ALLOC    - before_stats.Sz_alloc AS Sz_alloc,         after_STATS.SUM_NUMBER_OF_BYTES_FREE     - before_stats.Sz_free  AS Sz_free,         after_stats.CURRENT_NUMBER_OF_BYTES_USED - before_stats.Sz_curr  AS Sz_curr    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SELECT         SUM(after_stats.CURRENT_COUNT_USED) - SUM(before_stats.N_curr)   AS N_left,         SUM(after_stats.CURRENT_NUMBER_OF_BYTES_USED) - SUM(before_stats.Sz_curr)  AS Sz_left    FROM performance_schema.memory_summary_global_by_event_name AS after_stats,         dd_pfs.mem_events                                      AS before_stats    WHERE (after_stats.EVENT_NAME = 'memory/sql/dd::infrastructure' OR           after_stats.EVENT_NAME = 'memory/sql/dd::objects' OR           after_stats.EVENT_NAME = 'memory/sql/dd::String_type') AND          (after_stats.EVENT_NAME = before_stats.Name) AND          (before_stats.Query = 'savepoint')    ORDER BY Seq;
  SET @diff = (SELECT COUNT_ALLOC - N_alloc                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_alloc;
  let $assert_text = '$operation' will allocate $object_alloc objects.;
  source include/assert.inc;
  let $object_alloc=;
  SET @diff = (SELECT COUNT_FREE - N_free                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_free;
  let $assert_text = '$operation' will free $object_free objects.;
  source include/assert.inc;
  let $object_free=;
  SET @diff = (SELECT CURRENT_COUNT_USED - N_curr                 FROM performance_schema.memory_summary_global_by_event_name,                      dd_pfs.mem_events                 WHERE EVENT_NAME = 'memory/sql/dd::objects' AND                       EVENT_NAME = Name AND                       Query = 'savepoint');
  let $assert_cond= @diff = $object_count;
  let $assert_text = '$operation' will leave $object_count objects.;
  source include/assert.inc;
  let $object_count=;
DROP TABLE dd_pfs.mem_events;
DROP SCHEMA dd_pfs;
create schema s;
create table s.t1(i int);
create table s.t2(i int) tablespace innodb_system;
drop schema s;
source include/dd_pfs_save_state.inc;
source include/dd_pfs_report_state.inc;
SET foreign_key_checks= 0;
CREATE TABLE test.tables (  `id` bigint unsigned NOT NULL AUTO_INCREMENT,  `schema_id` bigint unsigned NOT NULL,  `name` varchar(64) COLLATE utf8_bin NOT NULL,  `type` enum('BASE TABLE','VIEW','SYSTEM VIEW') COLLATE utf8_bin NOT NULL,  `engine` varchar(64) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,  `mysql_version_id` int unsigned NOT NULL,  `row_format` enum('Fixed','Dynamic','Compressed','Redundant','Compact','Paged') COLLATE utf8_bin DEFAULT NULL,  `collation_id` bigint unsigned DEFAULT NULL,  `comment` varchar(2048) COLLATE utf8_bin NOT NULL,  `hidden` enum('Visible','System','SE','DDL') COLLATE utf8_bin NOT NULL,  `options` mediumtext COLLATE utf8_bin,  `se_private_data` mediumtext COLLATE utf8_bin,  `se_private_id` bigint unsigned DEFAULT NULL,  `tablespace_id` bigint unsigned DEFAULT NULL,  `partition_type` enum('HASH','KEY_51','KEY_55','LINEAR_HASH','LINEAR_KEY_51','LINEAR_KEY_55','RANGE','LIST','RANGE_COLUMNS','LIST_COLUMNS','AUTO','AUTO_LINEAR') COLLATE utf8_bin DEFAULT NULL,  `partition_expression` varchar(2048) COLLATE utf8_bin DEFAULT NULL,  `partition_expression_utf8` varchar(2048) COLLATE utf8_bin DEFAULT NULL,  `default_partitioning` enum('NO','YES','NUMBER') COLLATE utf8_bin DEFAULT NULL,  `subpartition_type` enum('HASH','KEY_51','KEY_55','LINEAR_HASH','LINEAR_KEY_51','LINEAR_KEY_55') COLLATE utf8_bin DEFAULT NULL,  `subpartition_expression` varchar(2048) COLLATE utf8_bin DEFAULT NULL,  `subpartition_expression_utf8` varchar(2048) COLLATE utf8_bin DEFAULT NULL,  `default_subpartitioning` enum('NO','YES','NUMBER') COLLATE utf8_bin DEFAULT NULL,  `created` timestamp NOT NULL,  `last_altered` timestamp NOT NULL,  `view_definition` longblob,  `view_definition_utf8` longtext COLLATE utf8_bin,  `view_check_option` enum('NONE','LOCAL','CASCADED') COLLATE utf8_bin DEFAULT NULL,  `view_is_updatable` enum('NO','YES') COLLATE utf8_bin DEFAULT NULL,  `view_algorithm` enum('UNDEFINED','TEMPTABLE','MERGE') COLLATE utf8_bin DEFAULT NULL,  `view_security_type` enum('DEFAULT','INVOKER','DEFINER') COLLATE utf8_bin DEFAULT NULL,  `view_definer` varchar(192) COLLATE utf8_bin DEFAULT NULL,  `view_client_collation_id` bigint unsigned DEFAULT NULL,  `view_connection_collation_id` bigint unsigned DEFAULT NULL,  `view_column_names` longtext COLLATE utf8_bin,  `last_checked_for_upgrade_version_id` int unsigned NOT NULL,  `engine_attribute` json DEFAULT NULL,  `secondary_engine_attribute` json DEFAULT NULL,  PRIMARY KEY (`id`),  UNIQUE KEY `schema_id` (`schema_id`,`name`),  UNIQUE KEY `engine` (`engine`,`se_private_id`),  KEY `engine_2` (`engine`),  KEY `collation_id` (`collation_id`),  KEY `tablespace_id` (`tablespace_id`),  KEY `type` (`type`),  KEY `view_client_collation_id` (`view_client_collation_id`),  KEY `view_connection_collation_id` (`view_connection_collation_id`),  KEY `type_2` (`type`,`view_definer`),  CONSTRAINT `tables_ibfk_1` FOREIGN KEY (`schema_id`) REFERENCES test.dummy (`id`),  CONSTRAINT `tables_ibfk_2` FOREIGN KEY (`collation_id`) REFERENCES test.dummy (`id`),  CONSTRAINT `tables_ibfk_3` FOREIGN KEY (`tablespace_id`) REFERENCES test.dummy (`id`),  CONSTRAINT `tables_ibfk_4` FOREIGN KEY (`view_client_collation_id`) REFERENCES test.dummy (`id`),  CONSTRAINT `tables_ibfk_5` FOREIGN KEY (`view_connection_collation_id`) REFERENCES test.dummy (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin STATS_PERSISTENT=0 ROW_FORMAT=DYNAMIC;
SET foreign_key_checks= DEFAULT;
DROP TABLE test.tables;
while ($i > 0)  dec $i;
  eval CREATE TABLE test.t_$i (i int) TABLESPACE innodb_system;
  eval SELECT * FROM  test.t_$i;
  eval FLUSH TABLES test.t_$i;
while ($i > 0)  dec $i;
  eval SELECT * FROM  test.t_$i;
while ($i > 0)  dec $i;
  eval DROP TABLE  test.t_$i;
CREATE SCHEMA s;
while ($i > 0)  dec $i;
  eval CREATE TABLE s.t_$i (i int, j int, k int, l int);
  # Pull in DD objects for tables in cache.  eval SELECT * FROM s.t_$i;
CREATE SCHEMA s1;
CREATE TABLE s1.t_myisam(i INT) ENGINE=MYISAM;
CREATE VIEW s1.v1 AS SELECT * FROM s1.t_myisam;
SELECT * FROM s1.v1;
CREATE SCHEMA s2;
CREATE TABLE s2.t_innodb(i INT) TABLESPACE=innodb_system;
CREATE VIEW v2 AS SELECT * FROM s2.t_innodb;
SELECT * FROM v2;
DROP VIEW v2;
CREATE SCHEMA s3;
CREATE TABLE s3.t_innodb(i INT) TABLESPACE=innodb_system;
CREATE VIEW s3.v3 AS SELECT * FROM s3.t_innodb;
SELECT * FROM s3.v3;
CREATE SCHEMA s4;
CREATE VIEW s4.v4 AS SELECT 1 AS i;
CREATE VIEW s4.v5 AS SELECT * FROM s4.v4;
SELECT * FROM s4.v5;
