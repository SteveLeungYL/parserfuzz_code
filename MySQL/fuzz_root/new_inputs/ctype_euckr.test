select @@collation_connection;
select hex(weight_string('a'));
select hex(weight_string('A'));
select hex(weight_string('abc'));
select hex(weight_string('abc' as char(2)));
select hex(weight_string('abc' as char(3)));
select hex(weight_string('abc' as char(5)));
select hex(weight_string('abc', 1, 2, 0xC0));
select hex(weight_string('abc', 2, 2, 0xC0));
select hex(weight_string('abc', 3, 2, 0xC0));
select hex(weight_string('abc', 4, 2, 0xC0));
select hex(weight_string('abc', 5, 2, 0xC0));
select hex(weight_string('abc',25, 2, 0xC0));
select hex(weight_string('abc', 1, 3, 0xC0));
select hex(weight_string('abc', 2, 3, 0xC0));
select hex(weight_string('abc', 3, 3, 0xC0));
select hex(weight_string('abc', 4, 3, 0xC0));
select hex(weight_string('abc', 5, 3, 0xC0));
select hex(weight_string('abc',25, 3, 0xC0));
select hex(weight_string('abc', 1, 4, 0xC0));
select hex(weight_string('abc', 2, 4, 0xC0));
select hex(weight_string('abc', 3, 4, 0xC0));
select hex(weight_string('abc', 4, 4, 0xC0));
select hex(weight_string('abc', 5, 4, 0xC0));
select hex(weight_string('abc',25, 4, 0xC0));
select collation(cast(0xA1A1 as char));
select hex(weight_string(cast(0x6141 as char)));
select hex(weight_string(cast(0xA1A1 as char)));
select hex(weight_string(cast(0xA1A1 as char) as char(1)));
select hex(weight_string(cast(0xA1A1A1A1 as char) as char(1)));
select hex(weight_string(cast(0xA1A1 as char) as char(3)));
select hex(weight_string(cast(0xA1A1A1A1 as char) as char(3)));
select hex(weight_string(cast(0x40A1A1 as char) as char(3)));
select hex(weight_string(cast(0x40A1A1A1A1 as char) as char(3)));
select hex(weight_string(cast(0x40A1A1A1A1A1A1 as char) as char(3)));
select hex(weight_string(cast(0x4040A1A1A1A1A1A1 as char) as char(3)));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 1, 2, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 2, 2, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 3, 2, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 4, 2, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 5, 2, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char),25, 2, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 1, 3, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 2, 3, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 3, 3, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 4, 3, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 5, 3, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char),25, 3, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 1, 4, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 2, 4, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 3, 4, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 4, 4, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 5, 4, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char),25, 4, 0xC0));
select @@collation_connection;
select hex(weight_string('a'));
select hex(weight_string('A'));
select hex(weight_string('abc'));
select hex(weight_string('abc' as char(2)));
select hex(weight_string('abc' as char(3)));
select hex(weight_string('abc' as char(5)));
select hex(weight_string('abc', 1, 2, 0xC0));
select hex(weight_string('abc', 2, 2, 0xC0));
select hex(weight_string('abc', 3, 2, 0xC0));
select hex(weight_string('abc', 4, 2, 0xC0));
select hex(weight_string('abc', 5, 2, 0xC0));
select hex(weight_string('abc',25, 2, 0xC0));
select hex(weight_string('abc', 1, 3, 0xC0));
select hex(weight_string('abc', 2, 3, 0xC0));
select hex(weight_string('abc', 3, 3, 0xC0));
select hex(weight_string('abc', 4, 3, 0xC0));
select hex(weight_string('abc', 5, 3, 0xC0));
select hex(weight_string('abc',25, 3, 0xC0));
select hex(weight_string('abc', 1, 4, 0xC0));
select hex(weight_string('abc', 2, 4, 0xC0));
select hex(weight_string('abc', 3, 4, 0xC0));
select hex(weight_string('abc', 4, 4, 0xC0));
select hex(weight_string('abc', 5, 4, 0xC0));
select hex(weight_string('abc',25, 4, 0xC0));
select collation(cast(0xA1A1 as char));
select hex(weight_string(cast(0x6141 as char)));
select hex(weight_string(cast(0xA1A1 as char)));
select hex(weight_string(cast(0xA1A1 as char) as char(1)));
select hex(weight_string(cast(0xA1A1A1A1 as char) as char(1)));
select hex(weight_string(cast(0xA1A1 as char) as char(3)));
select hex(weight_string(cast(0xA1A1A1A1 as char) as char(3)));
select hex(weight_string(cast(0x40A1A1 as char) as char(3)));
select hex(weight_string(cast(0x40A1A1A1A1 as char) as char(3)));
select hex(weight_string(cast(0x40A1A1A1A1A1A1 as char) as char(3)));
select hex(weight_string(cast(0x4040A1A1A1A1A1A1 as char) as char(3)));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 1, 2, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 2, 2, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 3, 2, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 4, 2, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 5, 2, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char),25, 2, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 1, 3, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 2, 3, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 3, 3, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 4, 3, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 5, 3, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char),25, 3, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 1, 4, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 2, 4, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 3, 4, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 4, 4, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 5, 4, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char),25, 4, 0xC0));
SELECT is_ipv4(inet_ntoa('1'));
SELECT is_ipv6(inet_ntoa('1'));
SELECT inet6_aton(inet_ntoa('1'));
SELECT inet6_ntoa(inet_ntoa('1'));
SELECT inet6_aton(soundex('a'));
eval do is_ipv4_mapped(inet6_aton(convert(_ascii "a:" using $charset)));
drop table if exists t1;
SET @test_character_set= 'euckr';
SET @test_collation= 'euckr_korean_ci';
SET NAMES euckr;
SET collation_connection='euckr_korean_ci';
SET collation_connection='euckr_bin';
SET NAMES euckr;
CREATE TABLE t1 (a text) character set euckr;
INSERT INTO t1 VALUES (0xA2E6),(0xFEF7);
SELECT hex(a) FROM t1 ORDER BY a;
DROP TABLE t1;
SET sql_mode = 'NO_ENGINE_SUBSTITUTION';
create table t1 (s1 varchar(5) character set euckr);
insert into t1 values (0xA141);
insert into t1 values (0xA15A);
insert into t1 values (0xA161);
insert into t1 values (0xA17A);
insert into t1 values (0xA181);
insert into t1 values (0xA1FE);
insert into t1 values (0xA140);
insert into t1 values (0xA15B);
insert into t1 values (0xA160);
insert into t1 values (0xA17B);
insert into t1 values (0xA180);
insert into t1 values (0xA1FF);
select hex(s1), hex(convert(s1 using utf8)) from t1 order by binary s1;
drop table t1;
SET sql_mode = default;
SET NAMES utf8;
CREATE TABLE t1 (a varchar(10) character set euckr);
INSERT INTO t1 VALUES (0xA2E6), (0xA2E7);
SELECT hex(a), hex(@utf8:=convert(a using utf8)), hex(convert(@utf8 using euckr)) FROM t1;
DROP TABLE t1;
SET sql_mode = 'NO_ENGINE_SUBSTITUTION';
CREATE TABLE t1 (a binary(1), key(a));
while($1)  eval INSERT INTO t1 VALUES (unhex(hex($1)));
  dec $1;
CREATE TABLE t2 (s VARCHAR(4), a VARCHAR(1) CHARACTER SET euckr);
INSERT INTO t2SELECT hex(concat(t11.a, t12.a)), concat(t11.a, t12.a)FROM t1 t11, t1 t12WHERE t11.a >= 0x81 AND t11.a <= 0xFEAND   t12.a >= 0x41 AND t12.a <= 0xFEORDER BY t11.a, t12.a;
SELECT s as bad_code FROM t2 WHERE a='' ORDER BY s;
DELETE FROM t2 WHERE a='';
ALTER TABLE t2 ADD u VARCHAR(1) CHARACTER SET utf8, ADD a2 VARCHAR(1) CHARACTER SET euckr;
UPDATE t2 SET u=a, a2=u;
SELECT s as unassigned_code FROM t2 WHERE u='?';
DELETE FROM t2 WHERE u='?';
SELECT count(*) as roundtrip_problem_chars FROM t2 WHERE hex(a) <> hex(a2);
SELECT s, hex(a), hex(u), hex(a2) FROM t2 ORDER BY s;
DROP TABLE t1, t2;
SET sql_mode = default;
SET sql_mode = 'NO_ENGINE_SUBSTITUTION';
SET NAMES utf8;
SET collation_connection=euckr_korean_ci;
CREATE TABLE t1 (b VARCHAR(2));
INSERT INTO t1 VALUES ('0'),('1'),('2'),('3'),('4'),('5'),('6'),('7');
INSERT INTO t1 VALUES ('8'),('9'),('A'),('B'),('C'),('D'),('E'),('F');
CREATE TEMPORARY TABLE head AS SELECT concat(b1.b, b2.b) AS head FROM t1 b1, t1 b2;
CREATE TEMPORARY TABLE tail AS SELECT concat(b1.b, b2.b) AS tail FROM t1 b1, t1 b2;
DROP TABLE t1;
CREATE TABLE t1 ASSELECT concat(head, tail) AS code, ' ' AS aFROM head, tailWHERE (head BETWEEN '80' AND 'FF') AND (tail BETWEEN '20' AND 'FF')ORDER BY head, tail;
DROP TEMPORARY TABLE head, tail;
SHOW CREATE TABLE t1;
SET @@session.max_error_count = 64;
UPDATE t1 SET a=unhex(code) ORDER BY code;
SET @@session.max_error_count = default;
SELECT COUNT(*) FROM t1 WHERE a<>'';
SELECT code, hex(upper(a)), hex(lower(a)),a, upper(a), lower(a) FROM t1 WHERE hex(a)<>hex(upper(a)) OR hex(a)<>hex(lower(a));
SELECT * FROM t1WHERE HEX(CAST(LOWER(a) AS CHAR CHARACTER SET utf8)) <>      HEX(LOWER(CAST(a AS CHAR CHARACTER SET utf8))) ORDER BY code;
SELECT * FROM t1WHERE HEX(CAST(UPPER(a) AS CHAR CHARACTER SET utf8)) <>      HEX(UPPER(CAST(a AS CHAR CHARACTER SET utf8))) ORDER BY code;
DROP TABLE t1;
SET sql_mode = default;
set names euckr;
set collation_connection=euckr_bin;
SET NAMES euckr;
select @@collation_connection;
select hex(weight_string('a'));
select hex(weight_string('A'));
select hex(weight_string('abc'));
select hex(weight_string('abc' as char(2)));
select hex(weight_string('abc' as char(3)));
select hex(weight_string('abc' as char(5)));
select hex(weight_string('abc', 1, 2, 0xC0));
select hex(weight_string('abc', 2, 2, 0xC0));
select hex(weight_string('abc', 3, 2, 0xC0));
select hex(weight_string('abc', 4, 2, 0xC0));
select hex(weight_string('abc', 5, 2, 0xC0));
select hex(weight_string('abc',25, 2, 0xC0));
select hex(weight_string('abc', 1, 3, 0xC0));
select hex(weight_string('abc', 2, 3, 0xC0));
select hex(weight_string('abc', 3, 3, 0xC0));
select hex(weight_string('abc', 4, 3, 0xC0));
select hex(weight_string('abc', 5, 3, 0xC0));
select hex(weight_string('abc',25, 3, 0xC0));
select hex(weight_string('abc', 1, 4, 0xC0));
select hex(weight_string('abc', 2, 4, 0xC0));
select hex(weight_string('abc', 3, 4, 0xC0));
select hex(weight_string('abc', 4, 4, 0xC0));
select hex(weight_string('abc', 5, 4, 0xC0));
select hex(weight_string('abc',25, 4, 0xC0));
select collation(cast(0xA1A1 as char));
select hex(weight_string(cast(0x6141 as char)));
select hex(weight_string(cast(0xA1A1 as char)));
select hex(weight_string(cast(0xA1A1 as char) as char(1)));
select hex(weight_string(cast(0xA1A1A1A1 as char) as char(1)));
select hex(weight_string(cast(0xA1A1 as char) as char(3)));
select hex(weight_string(cast(0xA1A1A1A1 as char) as char(3)));
select hex(weight_string(cast(0x40A1A1 as char) as char(3)));
select hex(weight_string(cast(0x40A1A1A1A1 as char) as char(3)));
select hex(weight_string(cast(0x40A1A1A1A1A1A1 as char) as char(3)));
select hex(weight_string(cast(0x4040A1A1A1A1A1A1 as char) as char(3)));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 1, 2, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 2, 2, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 3, 2, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 4, 2, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 5, 2, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char),25, 2, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 1, 3, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 2, 3, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 3, 3, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 4, 3, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 5, 3, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char),25, 3, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 1, 4, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 2, 4, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 3, 4, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 4, 4, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 5, 4, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char),25, 4, 0xC0));
select @@collation_connection;
select hex(weight_string('a'));
select hex(weight_string('A'));
select hex(weight_string('abc'));
select hex(weight_string('abc' as char(2)));
select hex(weight_string('abc' as char(3)));
select hex(weight_string('abc' as char(5)));
select hex(weight_string('abc', 1, 2, 0xC0));
select hex(weight_string('abc', 2, 2, 0xC0));
select hex(weight_string('abc', 3, 2, 0xC0));
select hex(weight_string('abc', 4, 2, 0xC0));
select hex(weight_string('abc', 5, 2, 0xC0));
select hex(weight_string('abc',25, 2, 0xC0));
select hex(weight_string('abc', 1, 3, 0xC0));
select hex(weight_string('abc', 2, 3, 0xC0));
select hex(weight_string('abc', 3, 3, 0xC0));
select hex(weight_string('abc', 4, 3, 0xC0));
select hex(weight_string('abc', 5, 3, 0xC0));
select hex(weight_string('abc',25, 3, 0xC0));
select hex(weight_string('abc', 1, 4, 0xC0));
select hex(weight_string('abc', 2, 4, 0xC0));
select hex(weight_string('abc', 3, 4, 0xC0));
select hex(weight_string('abc', 4, 4, 0xC0));
select hex(weight_string('abc', 5, 4, 0xC0));
select hex(weight_string('abc',25, 4, 0xC0));
select collation(cast(0xA1A1 as char));
select hex(weight_string(cast(0x6141 as char)));
select hex(weight_string(cast(0xA1A1 as char)));
select hex(weight_string(cast(0xA1A1 as char) as char(1)));
select hex(weight_string(cast(0xA1A1A1A1 as char) as char(1)));
select hex(weight_string(cast(0xA1A1 as char) as char(3)));
select hex(weight_string(cast(0xA1A1A1A1 as char) as char(3)));
select hex(weight_string(cast(0x40A1A1 as char) as char(3)));
select hex(weight_string(cast(0x40A1A1A1A1 as char) as char(3)));
select hex(weight_string(cast(0x40A1A1A1A1A1A1 as char) as char(3)));
select hex(weight_string(cast(0x4040A1A1A1A1A1A1 as char) as char(3)));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 1, 2, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 2, 2, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 3, 2, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 4, 2, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 5, 2, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char),25, 2, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 1, 3, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 2, 3, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 3, 3, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 4, 3, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 5, 3, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char),25, 3, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 1, 4, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 2, 4, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 3, 4, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 4, 4, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 5, 4, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char),25, 4, 0xC0));
SELECT is_ipv4(inet_ntoa('1'));
SELECT is_ipv6(inet_ntoa('1'));
SELECT inet6_aton(inet_ntoa('1'));
SELECT inet6_ntoa(inet_ntoa('1'));
SELECT inet6_aton(soundex('a'));
eval do is_ipv4_mapped(inet6_aton(convert(_ascii "a:" using $charset)));
drop table if exists t1;
SET @test_character_set= 'euckr';
SET @test_collation= 'euckr_korean_ci';
SET NAMES euckr;
SET collation_connection='euckr_korean_ci';
SET collation_connection='euckr_bin';
SET NAMES euckr;
CREATE TABLE t1 (a text) character set euckr;
INSERT INTO t1 VALUES (0xA2E6),(0xFEF7);
SELECT hex(a) FROM t1 ORDER BY a;
DROP TABLE t1;
SET sql_mode = 'NO_ENGINE_SUBSTITUTION';
create table t1 (s1 varchar(5) character set euckr);
insert into t1 values (0xA141);
insert into t1 values (0xA15A);
insert into t1 values (0xA161);
insert into t1 values (0xA17A);
insert into t1 values (0xA181);
insert into t1 values (0xA1FE);
insert into t1 values (0xA140);
insert into t1 values (0xA15B);
insert into t1 values (0xA160);
insert into t1 values (0xA17B);
insert into t1 values (0xA180);
insert into t1 values (0xA1FF);
select hex(s1), hex(convert(s1 using utf8)) from t1 order by binary s1;
drop table t1;
SET sql_mode = default;
SET NAMES utf8;
CREATE TABLE t1 (a varchar(10) character set euckr);
INSERT INTO t1 VALUES (0xA2E6), (0xA2E7);
SELECT hex(a), hex(@utf8:=convert(a using utf8)), hex(convert(@utf8 using euckr)) FROM t1;
DROP TABLE t1;
SET sql_mode = 'NO_ENGINE_SUBSTITUTION';
CREATE TABLE t1 (a binary(1), key(a));
while($1)  eval INSERT INTO t1 VALUES (unhex(hex($1)));
  dec $1;
CREATE TABLE t2 (s VARCHAR(4), a VARCHAR(1) CHARACTER SET euckr);
INSERT INTO t2SELECT hex(concat(t11.a, t12.a)), concat(t11.a, t12.a)FROM t1 t11, t1 t12WHERE t11.a >= 0x81 AND t11.a <= 0xFEAND   t12.a >= 0x41 AND t12.a <= 0xFEORDER BY t11.a, t12.a;
SELECT s as bad_code FROM t2 WHERE a='' ORDER BY s;
DELETE FROM t2 WHERE a='';
ALTER TABLE t2 ADD u VARCHAR(1) CHARACTER SET utf8, ADD a2 VARCHAR(1) CHARACTER SET euckr;
UPDATE t2 SET u=a, a2=u;
SELECT s as unassigned_code FROM t2 WHERE u='?';
DELETE FROM t2 WHERE u='?';
SELECT count(*) as roundtrip_problem_chars FROM t2 WHERE hex(a) <> hex(a2);
SELECT s, hex(a), hex(u), hex(a2) FROM t2 ORDER BY s;
DROP TABLE t1, t2;
SET sql_mode = default;
SET sql_mode = 'NO_ENGINE_SUBSTITUTION';
SET NAMES utf8;
SET collation_connection=euckr_korean_ci;
CREATE TABLE t1 (b VARCHAR(2));
INSERT INTO t1 VALUES ('0'),('1'),('2'),('3'),('4'),('5'),('6'),('7');
INSERT INTO t1 VALUES ('8'),('9'),('A'),('B'),('C'),('D'),('E'),('F');
CREATE TEMPORARY TABLE head AS SELECT concat(b1.b, b2.b) AS head FROM t1 b1, t1 b2;
CREATE TEMPORARY TABLE tail AS SELECT concat(b1.b, b2.b) AS tail FROM t1 b1, t1 b2;
DROP TABLE t1;
CREATE TABLE t1 ASSELECT concat(head, tail) AS code, ' ' AS aFROM head, tailWHERE (head BETWEEN '80' AND 'FF') AND (tail BETWEEN '20' AND 'FF')ORDER BY head, tail;
DROP TEMPORARY TABLE head, tail;
SHOW CREATE TABLE t1;
SET @@session.max_error_count = 64;
UPDATE t1 SET a=unhex(code) ORDER BY code;
SET @@session.max_error_count = default;
SELECT COUNT(*) FROM t1 WHERE a<>'';
SELECT code, hex(upper(a)), hex(lower(a)),a, upper(a), lower(a) FROM t1 WHERE hex(a)<>hex(upper(a)) OR hex(a)<>hex(lower(a));
SELECT * FROM t1WHERE HEX(CAST(LOWER(a) AS CHAR CHARACTER SET utf8)) <>      HEX(LOWER(CAST(a AS CHAR CHARACTER SET utf8))) ORDER BY code;
SELECT * FROM t1WHERE HEX(CAST(UPPER(a) AS CHAR CHARACTER SET utf8)) <>      HEX(UPPER(CAST(a AS CHAR CHARACTER SET utf8))) ORDER BY code;
DROP TABLE t1;
SET sql_mode = default;
set names euckr;
set collation_connection=euckr_bin;
SET NAMES euckr;
select @@collation_connection;
select hex(weight_string('a'));
select hex(weight_string('A'));
select hex(weight_string('abc'));
select hex(weight_string('abc' as char(2)));
select hex(weight_string('abc' as char(3)));
select hex(weight_string('abc' as char(5)));
select hex(weight_string('abc', 1, 2, 0xC0));
select hex(weight_string('abc', 2, 2, 0xC0));
select hex(weight_string('abc', 3, 2, 0xC0));
select hex(weight_string('abc', 4, 2, 0xC0));
select hex(weight_string('abc', 5, 2, 0xC0));
select hex(weight_string('abc',25, 2, 0xC0));
select hex(weight_string('abc', 1, 3, 0xC0));
select hex(weight_string('abc', 2, 3, 0xC0));
select hex(weight_string('abc', 3, 3, 0xC0));
select hex(weight_string('abc', 4, 3, 0xC0));
select hex(weight_string('abc', 5, 3, 0xC0));
select hex(weight_string('abc',25, 3, 0xC0));
select hex(weight_string('abc', 1, 4, 0xC0));
select hex(weight_string('abc', 2, 4, 0xC0));
select hex(weight_string('abc', 3, 4, 0xC0));
select hex(weight_string('abc', 4, 4, 0xC0));
select hex(weight_string('abc', 5, 4, 0xC0));
select hex(weight_string('abc',25, 4, 0xC0));
select collation(cast(0xA1A1 as char));
select hex(weight_string(cast(0x6141 as char)));
select hex(weight_string(cast(0xA1A1 as char)));
select hex(weight_string(cast(0xA1A1 as char) as char(1)));
select hex(weight_string(cast(0xA1A1A1A1 as char) as char(1)));
select hex(weight_string(cast(0xA1A1 as char) as char(3)));
select hex(weight_string(cast(0xA1A1A1A1 as char) as char(3)));
select hex(weight_string(cast(0x40A1A1 as char) as char(3)));
select hex(weight_string(cast(0x40A1A1A1A1 as char) as char(3)));
select hex(weight_string(cast(0x40A1A1A1A1A1A1 as char) as char(3)));
select hex(weight_string(cast(0x4040A1A1A1A1A1A1 as char) as char(3)));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 1, 2, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 2, 2, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 3, 2, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 4, 2, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 5, 2, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char),25, 2, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 1, 3, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 2, 3, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 3, 3, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 4, 3, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 5, 3, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char),25, 3, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 1, 4, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 2, 4, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 3, 4, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 4, 4, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 5, 4, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char),25, 4, 0xC0));
select @@collation_connection;
select hex(weight_string('a'));
select hex(weight_string('A'));
select hex(weight_string('abc'));
select hex(weight_string('abc' as char(2)));
select hex(weight_string('abc' as char(3)));
select hex(weight_string('abc' as char(5)));
select hex(weight_string('abc', 1, 2, 0xC0));
select hex(weight_string('abc', 2, 2, 0xC0));
select hex(weight_string('abc', 3, 2, 0xC0));
select hex(weight_string('abc', 4, 2, 0xC0));
select hex(weight_string('abc', 5, 2, 0xC0));
select hex(weight_string('abc',25, 2, 0xC0));
select hex(weight_string('abc', 1, 3, 0xC0));
select hex(weight_string('abc', 2, 3, 0xC0));
select hex(weight_string('abc', 3, 3, 0xC0));
select hex(weight_string('abc', 4, 3, 0xC0));
select hex(weight_string('abc', 5, 3, 0xC0));
select hex(weight_string('abc',25, 3, 0xC0));
select hex(weight_string('abc', 1, 4, 0xC0));
select hex(weight_string('abc', 2, 4, 0xC0));
select hex(weight_string('abc', 3, 4, 0xC0));
select hex(weight_string('abc', 4, 4, 0xC0));
select hex(weight_string('abc', 5, 4, 0xC0));
select hex(weight_string('abc',25, 4, 0xC0));
select collation(cast(0xA1A1 as char));
select hex(weight_string(cast(0x6141 as char)));
select hex(weight_string(cast(0xA1A1 as char)));
select hex(weight_string(cast(0xA1A1 as char) as char(1)));
select hex(weight_string(cast(0xA1A1A1A1 as char) as char(1)));
select hex(weight_string(cast(0xA1A1 as char) as char(3)));
select hex(weight_string(cast(0xA1A1A1A1 as char) as char(3)));
select hex(weight_string(cast(0x40A1A1 as char) as char(3)));
select hex(weight_string(cast(0x40A1A1A1A1 as char) as char(3)));
select hex(weight_string(cast(0x40A1A1A1A1A1A1 as char) as char(3)));
select hex(weight_string(cast(0x4040A1A1A1A1A1A1 as char) as char(3)));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 1, 2, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 2, 2, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 3, 2, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 4, 2, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 5, 2, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char),25, 2, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 1, 3, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 2, 3, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 3, 3, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 4, 3, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 5, 3, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char),25, 3, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 1, 4, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 2, 4, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 3, 4, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 4, 4, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 5, 4, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char),25, 4, 0xC0));
SELECT is_ipv4(inet_ntoa('1'));
SELECT is_ipv6(inet_ntoa('1'));
SELECT inet6_aton(inet_ntoa('1'));
SELECT inet6_ntoa(inet_ntoa('1'));
SELECT inet6_aton(soundex('a'));
eval do is_ipv4_mapped(inet6_aton(convert(_ascii "a:" using $charset)));
drop table if exists t1;
SET @test_character_set= 'euckr';
SET @test_collation= 'euckr_korean_ci';
SET NAMES euckr;
SET collation_connection='euckr_korean_ci';
SET collation_connection='euckr_bin';
SET NAMES euckr;
CREATE TABLE t1 (a text) character set euckr;
INSERT INTO t1 VALUES (0xA2E6),(0xFEF7);
SELECT hex(a) FROM t1 ORDER BY a;
DROP TABLE t1;
SET sql_mode = 'NO_ENGINE_SUBSTITUTION';
create table t1 (s1 varchar(5) character set euckr);
insert into t1 values (0xA141);
insert into t1 values (0xA15A);
insert into t1 values (0xA161);
insert into t1 values (0xA17A);
insert into t1 values (0xA181);
insert into t1 values (0xA1FE);
insert into t1 values (0xA140);
insert into t1 values (0xA15B);
insert into t1 values (0xA160);
insert into t1 values (0xA17B);
insert into t1 values (0xA180);
insert into t1 values (0xA1FF);
select hex(s1), hex(convert(s1 using utf8)) from t1 order by binary s1;
drop table t1;
SET sql_mode = default;
SET NAMES utf8;
CREATE TABLE t1 (a varchar(10) character set euckr);
INSERT INTO t1 VALUES (0xA2E6), (0xA2E7);
SELECT hex(a), hex(@utf8:=convert(a using utf8)), hex(convert(@utf8 using euckr)) FROM t1;
DROP TABLE t1;
SET sql_mode = 'NO_ENGINE_SUBSTITUTION';
CREATE TABLE t1 (a binary(1), key(a));
while($1)  eval INSERT INTO t1 VALUES (unhex(hex($1)));
  dec $1;
CREATE TABLE t2 (s VARCHAR(4), a VARCHAR(1) CHARACTER SET euckr);
INSERT INTO t2SELECT hex(concat(t11.a, t12.a)), concat(t11.a, t12.a)FROM t1 t11, t1 t12WHERE t11.a >= 0x81 AND t11.a <= 0xFEAND   t12.a >= 0x41 AND t12.a <= 0xFEORDER BY t11.a, t12.a;
SELECT s as bad_code FROM t2 WHERE a='' ORDER BY s;
DELETE FROM t2 WHERE a='';
ALTER TABLE t2 ADD u VARCHAR(1) CHARACTER SET utf8, ADD a2 VARCHAR(1) CHARACTER SET euckr;
UPDATE t2 SET u=a, a2=u;
SELECT s as unassigned_code FROM t2 WHERE u='?';
DELETE FROM t2 WHERE u='?';
SELECT count(*) as roundtrip_problem_chars FROM t2 WHERE hex(a) <> hex(a2);
SELECT s, hex(a), hex(u), hex(a2) FROM t2 ORDER BY s;
DROP TABLE t1, t2;
SET sql_mode = default;
SET sql_mode = 'NO_ENGINE_SUBSTITUTION';
SET NAMES utf8;
SET collation_connection=euckr_korean_ci;
CREATE TABLE t1 (b VARCHAR(2));
INSERT INTO t1 VALUES ('0'),('1'),('2'),('3'),('4'),('5'),('6'),('7');
INSERT INTO t1 VALUES ('8'),('9'),('A'),('B'),('C'),('D'),('E'),('F');
CREATE TEMPORARY TABLE head AS SELECT concat(b1.b, b2.b) AS head FROM t1 b1, t1 b2;
CREATE TEMPORARY TABLE tail AS SELECT concat(b1.b, b2.b) AS tail FROM t1 b1, t1 b2;
DROP TABLE t1;
CREATE TABLE t1 ASSELECT concat(head, tail) AS code, ' ' AS aFROM head, tailWHERE (head BETWEEN '80' AND 'FF') AND (tail BETWEEN '20' AND 'FF')ORDER BY head, tail;
DROP TEMPORARY TABLE head, tail;
SHOW CREATE TABLE t1;
SET @@session.max_error_count = 64;
UPDATE t1 SET a=unhex(code) ORDER BY code;
SET @@session.max_error_count = default;
SELECT COUNT(*) FROM t1 WHERE a<>'';
SELECT code, hex(upper(a)), hex(lower(a)),a, upper(a), lower(a) FROM t1 WHERE hex(a)<>hex(upper(a)) OR hex(a)<>hex(lower(a));
SELECT * FROM t1WHERE HEX(CAST(LOWER(a) AS CHAR CHARACTER SET utf8)) <>      HEX(LOWER(CAST(a AS CHAR CHARACTER SET utf8))) ORDER BY code;
SELECT * FROM t1WHERE HEX(CAST(UPPER(a) AS CHAR CHARACTER SET utf8)) <>      HEX(UPPER(CAST(a AS CHAR CHARACTER SET utf8))) ORDER BY code;
DROP TABLE t1;
SET sql_mode = default;
set names euckr;
set collation_connection=euckr_bin;
SET NAMES euckr;
select @@collation_connection;
select hex(weight_string('a'));
select hex(weight_string('A'));
select hex(weight_string('abc'));
select hex(weight_string('abc' as char(2)));
select hex(weight_string('abc' as char(3)));
select hex(weight_string('abc' as char(5)));
select hex(weight_string('abc', 1, 2, 0xC0));
select hex(weight_string('abc', 2, 2, 0xC0));
select hex(weight_string('abc', 3, 2, 0xC0));
select hex(weight_string('abc', 4, 2, 0xC0));
select hex(weight_string('abc', 5, 2, 0xC0));
select hex(weight_string('abc',25, 2, 0xC0));
select hex(weight_string('abc', 1, 3, 0xC0));
select hex(weight_string('abc', 2, 3, 0xC0));
select hex(weight_string('abc', 3, 3, 0xC0));
select hex(weight_string('abc', 4, 3, 0xC0));
select hex(weight_string('abc', 5, 3, 0xC0));
select hex(weight_string('abc',25, 3, 0xC0));
select hex(weight_string('abc', 1, 4, 0xC0));
select hex(weight_string('abc', 2, 4, 0xC0));
select hex(weight_string('abc', 3, 4, 0xC0));
select hex(weight_string('abc', 4, 4, 0xC0));
select hex(weight_string('abc', 5, 4, 0xC0));
select hex(weight_string('abc',25, 4, 0xC0));
select collation(cast(0xA1A1 as char));
select hex(weight_string(cast(0x6141 as char)));
select hex(weight_string(cast(0xA1A1 as char)));
select hex(weight_string(cast(0xA1A1 as char) as char(1)));
select hex(weight_string(cast(0xA1A1A1A1 as char) as char(1)));
select hex(weight_string(cast(0xA1A1 as char) as char(3)));
select hex(weight_string(cast(0xA1A1A1A1 as char) as char(3)));
select hex(weight_string(cast(0x40A1A1 as char) as char(3)));
select hex(weight_string(cast(0x40A1A1A1A1 as char) as char(3)));
select hex(weight_string(cast(0x40A1A1A1A1A1A1 as char) as char(3)));
select hex(weight_string(cast(0x4040A1A1A1A1A1A1 as char) as char(3)));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 1, 2, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 2, 2, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 3, 2, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 4, 2, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 5, 2, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char),25, 2, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 1, 3, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 2, 3, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 3, 3, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 4, 3, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 5, 3, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char),25, 3, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 1, 4, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 2, 4, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 3, 4, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 4, 4, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 5, 4, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char),25, 4, 0xC0));
select @@collation_connection;
select hex(weight_string('a'));
select hex(weight_string('A'));
select hex(weight_string('abc'));
select hex(weight_string('abc' as char(2)));
select hex(weight_string('abc' as char(3)));
select hex(weight_string('abc' as char(5)));
select hex(weight_string('abc', 1, 2, 0xC0));
select hex(weight_string('abc', 2, 2, 0xC0));
select hex(weight_string('abc', 3, 2, 0xC0));
select hex(weight_string('abc', 4, 2, 0xC0));
select hex(weight_string('abc', 5, 2, 0xC0));
select hex(weight_string('abc',25, 2, 0xC0));
select hex(weight_string('abc', 1, 3, 0xC0));
select hex(weight_string('abc', 2, 3, 0xC0));
select hex(weight_string('abc', 3, 3, 0xC0));
select hex(weight_string('abc', 4, 3, 0xC0));
select hex(weight_string('abc', 5, 3, 0xC0));
select hex(weight_string('abc',25, 3, 0xC0));
select hex(weight_string('abc', 1, 4, 0xC0));
select hex(weight_string('abc', 2, 4, 0xC0));
select hex(weight_string('abc', 3, 4, 0xC0));
select hex(weight_string('abc', 4, 4, 0xC0));
select hex(weight_string('abc', 5, 4, 0xC0));
select hex(weight_string('abc',25, 4, 0xC0));
select collation(cast(0xA1A1 as char));
select hex(weight_string(cast(0x6141 as char)));
select hex(weight_string(cast(0xA1A1 as char)));
select hex(weight_string(cast(0xA1A1 as char) as char(1)));
select hex(weight_string(cast(0xA1A1A1A1 as char) as char(1)));
select hex(weight_string(cast(0xA1A1 as char) as char(3)));
select hex(weight_string(cast(0xA1A1A1A1 as char) as char(3)));
select hex(weight_string(cast(0x40A1A1 as char) as char(3)));
select hex(weight_string(cast(0x40A1A1A1A1 as char) as char(3)));
select hex(weight_string(cast(0x40A1A1A1A1A1A1 as char) as char(3)));
select hex(weight_string(cast(0x4040A1A1A1A1A1A1 as char) as char(3)));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 1, 2, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 2, 2, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 3, 2, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 4, 2, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 5, 2, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char),25, 2, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 1, 3, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 2, 3, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 3, 3, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 4, 3, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 5, 3, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char),25, 3, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 1, 4, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 2, 4, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 3, 4, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 4, 4, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 5, 4, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char),25, 4, 0xC0));
SELECT is_ipv4(inet_ntoa('1'));
SELECT is_ipv6(inet_ntoa('1'));
SELECT inet6_aton(inet_ntoa('1'));
SELECT inet6_ntoa(inet_ntoa('1'));
SELECT inet6_aton(soundex('a'));
eval do is_ipv4_mapped(inet6_aton(convert(_ascii "a:" using $charset)));
drop table if exists t1;
SET @test_character_set= 'euckr';
SET @test_collation= 'euckr_korean_ci';
SET NAMES euckr;
SET collation_connection='euckr_korean_ci';
SET collation_connection='euckr_bin';
SET NAMES euckr;
CREATE TABLE t1 (a text) character set euckr;
INSERT INTO t1 VALUES (0xA2E6),(0xFEF7);
SELECT hex(a) FROM t1 ORDER BY a;
DROP TABLE t1;
SET sql_mode = 'NO_ENGINE_SUBSTITUTION';
create table t1 (s1 varchar(5) character set euckr);
insert into t1 values (0xA141);
insert into t1 values (0xA15A);
insert into t1 values (0xA161);
insert into t1 values (0xA17A);
insert into t1 values (0xA181);
insert into t1 values (0xA1FE);
insert into t1 values (0xA140);
insert into t1 values (0xA15B);
insert into t1 values (0xA160);
insert into t1 values (0xA17B);
insert into t1 values (0xA180);
insert into t1 values (0xA1FF);
select hex(s1), hex(convert(s1 using utf8)) from t1 order by binary s1;
drop table t1;
SET sql_mode = default;
SET NAMES utf8;
CREATE TABLE t1 (a varchar(10) character set euckr);
INSERT INTO t1 VALUES (0xA2E6), (0xA2E7);
SELECT hex(a), hex(@utf8:=convert(a using utf8)), hex(convert(@utf8 using euckr)) FROM t1;
DROP TABLE t1;
SET sql_mode = 'NO_ENGINE_SUBSTITUTION';
CREATE TABLE t1 (a binary(1), key(a));
while($1)  eval INSERT INTO t1 VALUES (unhex(hex($1)));
  dec $1;
CREATE TABLE t2 (s VARCHAR(4), a VARCHAR(1) CHARACTER SET euckr);
INSERT INTO t2SELECT hex(concat(t11.a, t12.a)), concat(t11.a, t12.a)FROM t1 t11, t1 t12WHERE t11.a >= 0x81 AND t11.a <= 0xFEAND   t12.a >= 0x41 AND t12.a <= 0xFEORDER BY t11.a, t12.a;
SELECT s as bad_code FROM t2 WHERE a='' ORDER BY s;
DELETE FROM t2 WHERE a='';
ALTER TABLE t2 ADD u VARCHAR(1) CHARACTER SET utf8, ADD a2 VARCHAR(1) CHARACTER SET euckr;
UPDATE t2 SET u=a, a2=u;
SELECT s as unassigned_code FROM t2 WHERE u='?';
DELETE FROM t2 WHERE u='?';
SELECT count(*) as roundtrip_problem_chars FROM t2 WHERE hex(a) <> hex(a2);
SELECT s, hex(a), hex(u), hex(a2) FROM t2 ORDER BY s;
DROP TABLE t1, t2;
SET sql_mode = default;
SET sql_mode = 'NO_ENGINE_SUBSTITUTION';
SET NAMES utf8;
SET collation_connection=euckr_korean_ci;
CREATE TABLE t1 (b VARCHAR(2));
INSERT INTO t1 VALUES ('0'),('1'),('2'),('3'),('4'),('5'),('6'),('7');
INSERT INTO t1 VALUES ('8'),('9'),('A'),('B'),('C'),('D'),('E'),('F');
CREATE TEMPORARY TABLE head AS SELECT concat(b1.b, b2.b) AS head FROM t1 b1, t1 b2;
CREATE TEMPORARY TABLE tail AS SELECT concat(b1.b, b2.b) AS tail FROM t1 b1, t1 b2;
DROP TABLE t1;
CREATE TABLE t1 ASSELECT concat(head, tail) AS code, ' ' AS aFROM head, tailWHERE (head BETWEEN '80' AND 'FF') AND (tail BETWEEN '20' AND 'FF')ORDER BY head, tail;
DROP TEMPORARY TABLE head, tail;
SHOW CREATE TABLE t1;
SET @@session.max_error_count = 64;
UPDATE t1 SET a=unhex(code) ORDER BY code;
SET @@session.max_error_count = default;
SELECT COUNT(*) FROM t1 WHERE a<>'';
SELECT code, hex(upper(a)), hex(lower(a)),a, upper(a), lower(a) FROM t1 WHERE hex(a)<>hex(upper(a)) OR hex(a)<>hex(lower(a));
SELECT * FROM t1WHERE HEX(CAST(LOWER(a) AS CHAR CHARACTER SET utf8)) <>      HEX(LOWER(CAST(a AS CHAR CHARACTER SET utf8))) ORDER BY code;
SELECT * FROM t1WHERE HEX(CAST(UPPER(a) AS CHAR CHARACTER SET utf8)) <>      HEX(UPPER(CAST(a AS CHAR CHARACTER SET utf8))) ORDER BY code;
DROP TABLE t1;
SET sql_mode = default;
set names euckr;
set collation_connection=euckr_bin;
SET NAMES euckr;
select @@collation_connection;
select hex(weight_string('a'));
select hex(weight_string('A'));
select hex(weight_string('abc'));
select hex(weight_string('abc' as char(2)));
select hex(weight_string('abc' as char(3)));
select hex(weight_string('abc' as char(5)));
select hex(weight_string('abc', 1, 2, 0xC0));
select hex(weight_string('abc', 2, 2, 0xC0));
select hex(weight_string('abc', 3, 2, 0xC0));
select hex(weight_string('abc', 4, 2, 0xC0));
select hex(weight_string('abc', 5, 2, 0xC0));
select hex(weight_string('abc',25, 2, 0xC0));
select hex(weight_string('abc', 1, 3, 0xC0));
select hex(weight_string('abc', 2, 3, 0xC0));
select hex(weight_string('abc', 3, 3, 0xC0));
select hex(weight_string('abc', 4, 3, 0xC0));
select hex(weight_string('abc', 5, 3, 0xC0));
select hex(weight_string('abc',25, 3, 0xC0));
select hex(weight_string('abc', 1, 4, 0xC0));
select hex(weight_string('abc', 2, 4, 0xC0));
select hex(weight_string('abc', 3, 4, 0xC0));
select hex(weight_string('abc', 4, 4, 0xC0));
select hex(weight_string('abc', 5, 4, 0xC0));
select hex(weight_string('abc',25, 4, 0xC0));
select collation(cast(0xA1A1 as char));
select hex(weight_string(cast(0x6141 as char)));
select hex(weight_string(cast(0xA1A1 as char)));
select hex(weight_string(cast(0xA1A1 as char) as char(1)));
select hex(weight_string(cast(0xA1A1A1A1 as char) as char(1)));
select hex(weight_string(cast(0xA1A1 as char) as char(3)));
select hex(weight_string(cast(0xA1A1A1A1 as char) as char(3)));
select hex(weight_string(cast(0x40A1A1 as char) as char(3)));
select hex(weight_string(cast(0x40A1A1A1A1 as char) as char(3)));
select hex(weight_string(cast(0x40A1A1A1A1A1A1 as char) as char(3)));
select hex(weight_string(cast(0x4040A1A1A1A1A1A1 as char) as char(3)));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 1, 2, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 2, 2, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 3, 2, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 4, 2, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 5, 2, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char),25, 2, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 1, 3, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 2, 3, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 3, 3, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 4, 3, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 5, 3, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char),25, 3, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 1, 4, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 2, 4, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 3, 4, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 4, 4, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 5, 4, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char),25, 4, 0xC0));
select @@collation_connection;
select hex(weight_string('a'));
select hex(weight_string('A'));
select hex(weight_string('abc'));
select hex(weight_string('abc' as char(2)));
select hex(weight_string('abc' as char(3)));
select hex(weight_string('abc' as char(5)));
select hex(weight_string('abc', 1, 2, 0xC0));
select hex(weight_string('abc', 2, 2, 0xC0));
select hex(weight_string('abc', 3, 2, 0xC0));
select hex(weight_string('abc', 4, 2, 0xC0));
select hex(weight_string('abc', 5, 2, 0xC0));
select hex(weight_string('abc',25, 2, 0xC0));
select hex(weight_string('abc', 1, 3, 0xC0));
select hex(weight_string('abc', 2, 3, 0xC0));
select hex(weight_string('abc', 3, 3, 0xC0));
select hex(weight_string('abc', 4, 3, 0xC0));
select hex(weight_string('abc', 5, 3, 0xC0));
select hex(weight_string('abc',25, 3, 0xC0));
select hex(weight_string('abc', 1, 4, 0xC0));
select hex(weight_string('abc', 2, 4, 0xC0));
select hex(weight_string('abc', 3, 4, 0xC0));
select hex(weight_string('abc', 4, 4, 0xC0));
select hex(weight_string('abc', 5, 4, 0xC0));
select hex(weight_string('abc',25, 4, 0xC0));
select collation(cast(0xA1A1 as char));
select hex(weight_string(cast(0x6141 as char)));
select hex(weight_string(cast(0xA1A1 as char)));
select hex(weight_string(cast(0xA1A1 as char) as char(1)));
select hex(weight_string(cast(0xA1A1A1A1 as char) as char(1)));
select hex(weight_string(cast(0xA1A1 as char) as char(3)));
select hex(weight_string(cast(0xA1A1A1A1 as char) as char(3)));
select hex(weight_string(cast(0x40A1A1 as char) as char(3)));
select hex(weight_string(cast(0x40A1A1A1A1 as char) as char(3)));
select hex(weight_string(cast(0x40A1A1A1A1A1A1 as char) as char(3)));
select hex(weight_string(cast(0x4040A1A1A1A1A1A1 as char) as char(3)));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 1, 2, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 2, 2, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 3, 2, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 4, 2, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 5, 2, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char),25, 2, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 1, 3, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 2, 3, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 3, 3, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 4, 3, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 5, 3, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char),25, 3, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 1, 4, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 2, 4, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 3, 4, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 4, 4, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char), 5, 4, 0xC0));
select hex(weight_string(cast(0xA1A1A1A1A1A1 as char),25, 4, 0xC0));
SELECT is_ipv4(inet_ntoa('1'));
SELECT is_ipv6(inet_ntoa('1'));
SELECT inet6_aton(inet_ntoa('1'));
SELECT inet6_ntoa(inet_ntoa('1'));
SELECT inet6_aton(soundex('a'));
eval do is_ipv4_mapped(inet6_aton(convert(_ascii "a:" using $charset)));
drop table if exists t1;
SET @test_character_set= 'euckr';
SET @test_collation= 'euckr_korean_ci';
SET NAMES euckr;
SET collation_connection='euckr_korean_ci';
SET collation_connection='euckr_bin';
SET NAMES euckr;
CREATE TABLE t1 (a text) character set euckr;
INSERT INTO t1 VALUES (0xA2E6),(0xFEF7);
SELECT hex(a) FROM t1 ORDER BY a;
DROP TABLE t1;
SET sql_mode = 'NO_ENGINE_SUBSTITUTION';
create table t1 (s1 varchar(5) character set euckr);
insert into t1 values (0xA141);
insert into t1 values (0xA15A);
insert into t1 values (0xA161);
insert into t1 values (0xA17A);
insert into t1 values (0xA181);
insert into t1 values (0xA1FE);
insert into t1 values (0xA140);
insert into t1 values (0xA15B);
insert into t1 values (0xA160);
insert into t1 values (0xA17B);
insert into t1 values (0xA180);
insert into t1 values (0xA1FF);
select hex(s1), hex(convert(s1 using utf8)) from t1 order by binary s1;
drop table t1;
SET sql_mode = default;
SET NAMES utf8;
CREATE TABLE t1 (a varchar(10) character set euckr);
INSERT INTO t1 VALUES (0xA2E6), (0xA2E7);
SELECT hex(a), hex(@utf8:=convert(a using utf8)), hex(convert(@utf8 using euckr)) FROM t1;
DROP TABLE t1;
SET sql_mode = 'NO_ENGINE_SUBSTITUTION';
CREATE TABLE t1 (a binary(1), key(a));
while($1)  eval INSERT INTO t1 VALUES (unhex(hex($1)));
  dec $1;
CREATE TABLE t2 (s VARCHAR(4), a VARCHAR(1) CHARACTER SET euckr);
INSERT INTO t2SELECT hex(concat(t11.a, t12.a)), concat(t11.a, t12.a)FROM t1 t11, t1 t12WHERE t11.a >= 0x81 AND t11.a <= 0xFEAND   t12.a >= 0x41 AND t12.a <= 0xFEORDER BY t11.a, t12.a;
SELECT s as bad_code FROM t2 WHERE a='' ORDER BY s;
DELETE FROM t2 WHERE a='';
ALTER TABLE t2 ADD u VARCHAR(1) CHARACTER SET utf8, ADD a2 VARCHAR(1) CHARACTER SET euckr;
UPDATE t2 SET u=a, a2=u;
SELECT s as unassigned_code FROM t2 WHERE u='?';
DELETE FROM t2 WHERE u='?';
SELECT count(*) as roundtrip_problem_chars FROM t2 WHERE hex(a) <> hex(a2);
SELECT s, hex(a), hex(u), hex(a2) FROM t2 ORDER BY s;
DROP TABLE t1, t2;
SET sql_mode = default;
SET sql_mode = 'NO_ENGINE_SUBSTITUTION';
SET NAMES utf8;
SET collation_connection=euckr_korean_ci;
CREATE TABLE t1 (b VARCHAR(2));
INSERT INTO t1 VALUES ('0'),('1'),('2'),('3'),('4'),('5'),('6'),('7');
INSERT INTO t1 VALUES ('8'),('9'),('A'),('B'),('C'),('D'),('E'),('F');
CREATE TEMPORARY TABLE head AS SELECT concat(b1.b, b2.b) AS head FROM t1 b1, t1 b2;
CREATE TEMPORARY TABLE tail AS SELECT concat(b1.b, b2.b) AS tail FROM t1 b1, t1 b2;
DROP TABLE t1;
CREATE TABLE t1 ASSELECT concat(head, tail) AS code, ' ' AS aFROM head, tailWHERE (head BETWEEN '80' AND 'FF') AND (tail BETWEEN '20' AND 'FF')ORDER BY head, tail;
DROP TEMPORARY TABLE head, tail;
SHOW CREATE TABLE t1;
SET @@session.max_error_count = 64;
UPDATE t1 SET a=unhex(code) ORDER BY code;
SET @@session.max_error_count = default;
SELECT COUNT(*) FROM t1 WHERE a<>'';
SELECT code, hex(upper(a)), hex(lower(a)),a, upper(a), lower(a) FROM t1 WHERE hex(a)<>hex(upper(a)) OR hex(a)<>hex(lower(a));
SELECT * FROM t1WHERE HEX(CAST(LOWER(a) AS CHAR CHARACTER SET utf8)) <>      HEX(LOWER(CAST(a AS CHAR CHARACTER SET utf8))) ORDER BY code;
SELECT * FROM t1WHERE HEX(CAST(UPPER(a) AS CHAR CHARACTER SET utf8)) <>      HEX(UPPER(CAST(a AS CHAR CHARACTER SET utf8))) ORDER BY code;
DROP TABLE t1;
SET sql_mode = default;
set names euckr;
set collation_connection=euckr_bin;
SET NAMES euckr;
