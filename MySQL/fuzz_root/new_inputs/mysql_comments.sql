drop table if exists t1;
create table t1 (  id   char(16) not null default '',  data int not null);
/*   Ignored 1c*/select 1;
select # comment 1a/*   comment 2c*/; # not strictly inside, but on same linedrop function if exists foofct ;
create function foofct (x char(20))returns char(20)/* not inside the body yet */return/* comment 1c */x; # after body, on same lineselect foofct("call 1");
show create function foofct;
drop function foofct;
delimiter |create function foofct(x char(20))returns char(20)begin    # comment 1b  /*     comment 1c  */      return x;
end|delimiter ;
select foofct("call 2");
show create function foofct;
drop function foofct;
drop procedure if exists `empty`;
create procedure `empty`()beginend;
call `empty`();
show create procedure `empty`;
drop procedure `empty`;
drop procedure if exists foosp;
/*   Comment 1c */create procedure foosp()/* Comment not quiet in the body yet */  insert into test.t1/* Comment 2c */      values ("foo", 42); # comment 3, still part of the body/*   Comment 4c */call foosp();
select * from t1;
delete from t1;
show create procedure foosp;
drop procedure foosp;
drop procedure if exists nicesp;
delimiter |create procedure nicesp(a int)begin    declare b int;
  declare c float;
      end|delimiter ;
show create procedure nicesp;
drop procedure nicesp;
drop trigger if exists t1_empty;
create trigger t1_empty after delete on t1for each rowbeginend;
show create trigger t1_empty;
drop trigger if exists t1_bi;
delimiter |create trigger t1_bi before insert on t1for each rowbegin/*   comment 1c*/    declare b int;
  declare c float;
        set NEW.data := 12;
end|delimiter ;
show create trigger t1_bi;
insert into t1(id) value ("trig");
select * from t1;
drop table t1;
