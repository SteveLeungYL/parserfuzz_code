    connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
set @previous_sql_mode_htnt542nh=@@sql_mode;
set sql_mode=(select replace(@@sql_mode,'ONLY_FULL_GROUP_BY',''));
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
set @@sql_mode=@previous_sql_mode_htnt542nh;
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
CREATE DATABASE mysqltest1;
USE mysqltest1;
CREATE TABLE t1 (f1 int);
INSERT INTO t1 VALUES (1),(2);
connect (ce, localhost, root,, mysqltest1);
connect (cq, localhost, root,, mysqltest1);
connection cq;
PREPARE stmt FROM 'EXPLAIN FOR CONNECTION 1';
connection cq;
PREPARE stmt FROM 'SELECT * FROM t1';
connection ce;
CREATE PROCEDURE proc6369()  EXPLAIN FOR CONNECTION 1;
CREATE PROCEDURE proc6369()  SELECT * FROM t1;
DROP PROCEDURE proc6369;
eval EXPLAIN FOR CONNECTION $qid;
EXPLAIN FOR CONNECTION 11111111;
GROUP BY f1 NOT IN (SELECT f1+10 AS f2 FROM t1 AS t2  GROUP BY f2 NOT IN  (SELECT f1+100 AS f3 FROM t1 AS t3));
CREATE TABLE t2 (f2 int);
ORDER BY f1 NOT IN (SELECT f1+10 AS f2 FROM t2  GROUP BY f2 NOT IN  (SELECT f1+100 AS f3 FROM t2 AS t3));
CREATE VIEW v1 AS SELECT t1.f1 FROM t1 JOIN t1 tt on t1.f1=tt.f1;
  (SELECT * FROM t1 LIMIT 1);
  (SELECT * FROM t1 LIMIT 1);
set @optimizer_switch_saved= @@optimizer_switch;
set optimizer_switch='derived_merge=off';
set optimizer_switch= @optimizer_switch_saved;
WHERE t1.f1>(SELECT t3.f1 FROM t1 AS t3 LIMIT 1);
WHERE t1.f1>(SELECT t3.f1 FROM t1 AS t3 LIMIT 1);
WHERE t1.f1>(SELECT t3.f1 FROM t1 AS t3 LIMIT 1);
eval EXPLAIN FORMAT=JSON $query;
ROW(f1,f1) >= ROW('1', (SELECT 1 FROM t1 WHERE f1 > 1234));
eval EXPLAIN FORMAT=JSON $query;
CREATE TABLE t3 (pk INT PRIMARY KEY);
INSERT INTO t3 SELECT DISTINCT * FROM t1;
connection default;
disconnect ce;
connection cq;
CREATE USER 'privtest'@'localhost';
GRANT SUPER ON *.* TO 'privtest'@'localhost';
GRANT SELECT ON mysqltest1.t2 TO 'privtest'@'localhost';
CREATE VIEW v2 AS SELECT * FROM t2;
GRANT SELECT,INSERT,UPDATE ON mysqltest1.v2 TO 'privtest'@'localhost';
connect (ce, localhost, privtest,, mysqltest1);
SELECT f2 FROM v2;
disconnect cq;
connect (cq, localhost, privtest,, mysqltest1);
UPDATE v2 SET f2=1;
INSERT INTO v2 VALUES(1);
INSERT INTO v2 SELECT 3 FROM t2;
SELECT f2 FROM v2;
EXPLAIN SELECT f2 FROM v2;
connection default;
DROP USER 'privtest'@localhost;
DROP VIEW v1, v2;
DROP TABLE t1, t2, t3;
disconnect ce;
disconnect cq;
connect (ce, localhost, root,, mysqltest1);
connect (cq, localhost, root,, mysqltest1);
connection ce;
CREATE TABLE h2 (pk int(11) NOT NULL AUTO_INCREMENT,PRIMARY KEY (pk)) ENGINE=InnoDB AUTO_INCREMENT=10 DEFAULT CHARSET=latin1;
insert into h2 values (1),(2),(3),(4),(5),(6),(7),(8),(9);
ANALYZE TABLE h2;
CREATE TABLE aa3 (  col_int_key int(11) DEFAULT NULL,  KEY col_int_key (col_int_key) ) ENGINE=InnoDB DEFAULT CHARSET=latin1;
DROP TABLE h2, aa3;
CREATE TABLE t1 (  pk int(11),  col_int_key int(11) DEFAULT NULL,  KEY col_int_key (col_int_key)) ENGINE=InnoDB DEFAULT CHARSET=latin1;
INSERT INTO t1 VALUES (NULL,NULL);
INSERT INTO t1 VALUES (6,NULL);
INSERT INTO t1 VALUES (8,-1131610112);
INSERT INTO t1 VALUES (2,-1009057792);
INSERT INTO t1 VALUES (-1220345856,1);
INSERT INTO t1 VALUES (NULL,-185204736);
DROP TABLE t1;
CREATE TABLE tbl1 (  login int(11) NOT NULL,  numb decimal(15,2) NOT NULL DEFAULT '0.00',  PRIMARY KEY (login),  KEY numb (numb))  ;
CREATE TABLE tbl2 (  login int(11) NOT NULL,  cmd tinyint(4) NOT NULL,  nump decimal(15,2) NOT NULL DEFAULT '0.00',  KEY cmd (cmd),  KEY login (login)) ;
insert into tbl1 (login) values(1),(2);
insert ignore into tbl2 (login) values(1),(2);
ANALYZE TABLE tbl1, tbl2;
SELECT   t1.login AS tlogin,   numb -   IFNULL((SELECT sum(nump) FROM tbl2 WHERE login=t1.login), 0) -  IFNULL((SELECT sum(nump) FROM tbl2 WHERE login=t1.login), 0) as spFROM tbl1 t1, tbl2 t2 WHERE t1.login=t2.login GROUP BY t1.login ORDER BY numb - IFNULL((SELECT sum(nump) FROM tbl2 WHERE login=t1.login), 0)              - IFNULL((SELECT sum(nump) FROM tbl2 WHERE login=t1.login), 0)DROP TABLE tbl1, tbl2;
connection default;
create table t1(a char(10) charset latin1, key(a)) engine=innodb;
create table t2(a binary(10), key(a)) engine=innodb;
insert into t1 values('1'),('2'),('3'),('4');
insert into t2 values('1'),('2'),('s');
analyze table t1,t2;
connection cq;
SET DEBUG_SYNC= 'quick_not_created SIGNAL ready_for_explain WAIT_FOR explained';
connection ce;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
eval EXPLAIN FOR CONNECTION $QID; connection cq;
connection default;
SET DEBUG_SYNC= 'RESET';
connection cq;
SET DEBUG_SYNC= 'quick_created_before_mutex SIGNAL ready_for_explain WAIT_FOR explained';
connection ce;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
eval EXPLAIN FOR CONNECTION $QID; connection cq;
connection default;
SET DEBUG_SYNC= 'RESET';
connection cq;
SET DEBUG_SYNC= 'quick_droped_after_mutex SIGNAL ready_for_explain WAIT_FOR explained';
connection ce;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
eval EXPLAIN FOR CONNECTION $QID; connection cq;
connection default;
DROP TABLE t1, t2;
connection default;
create table t1(a int);
insert into t1 values(1),(2);
DROP TABLE t1;
SET DEBUG_SYNC= 'RESET';
USE test;
DROP DATABASE mysqltest1;
disconnect cq;
disconnect ce;
    connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
set @previous_sql_mode_htnt542nh=@@sql_mode;
set sql_mode=(select replace(@@sql_mode,'ONLY_FULL_GROUP_BY',''));
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
set @@sql_mode=@previous_sql_mode_htnt542nh;
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
CREATE DATABASE mysqltest1;
USE mysqltest1;
CREATE TABLE t1 (f1 int);
INSERT INTO t1 VALUES (1),(2);
connect (ce, localhost, root,, mysqltest1);
connect (cq, localhost, root,, mysqltest1);
connection cq;
PREPARE stmt FROM 'EXPLAIN FOR CONNECTION 1';
connection cq;
PREPARE stmt FROM 'SELECT * FROM t1';
connection ce;
CREATE PROCEDURE proc6369()  EXPLAIN FOR CONNECTION 1;
CREATE PROCEDURE proc6369()  SELECT * FROM t1;
DROP PROCEDURE proc6369;
eval EXPLAIN FOR CONNECTION $qid;
EXPLAIN FOR CONNECTION 11111111;
GROUP BY f1 NOT IN (SELECT f1+10 AS f2 FROM t1 AS t2  GROUP BY f2 NOT IN  (SELECT f1+100 AS f3 FROM t1 AS t3));
CREATE TABLE t2 (f2 int);
ORDER BY f1 NOT IN (SELECT f1+10 AS f2 FROM t2  GROUP BY f2 NOT IN  (SELECT f1+100 AS f3 FROM t2 AS t3));
CREATE VIEW v1 AS SELECT t1.f1 FROM t1 JOIN t1 tt on t1.f1=tt.f1;
  (SELECT * FROM t1 LIMIT 1);
  (SELECT * FROM t1 LIMIT 1);
set @optimizer_switch_saved= @@optimizer_switch;
set optimizer_switch='derived_merge=off';
set optimizer_switch= @optimizer_switch_saved;
WHERE t1.f1>(SELECT t3.f1 FROM t1 AS t3 LIMIT 1);
WHERE t1.f1>(SELECT t3.f1 FROM t1 AS t3 LIMIT 1);
WHERE t1.f1>(SELECT t3.f1 FROM t1 AS t3 LIMIT 1);
eval EXPLAIN FORMAT=JSON $query;
ROW(f1,f1) >= ROW('1', (SELECT 1 FROM t1 WHERE f1 > 1234));
eval EXPLAIN FORMAT=JSON $query;
CREATE TABLE t3 (pk INT PRIMARY KEY);
INSERT INTO t3 SELECT DISTINCT * FROM t1;
connection default;
disconnect ce;
connection cq;
CREATE USER 'privtest'@'localhost';
GRANT SUPER ON *.* TO 'privtest'@'localhost';
GRANT SELECT ON mysqltest1.t2 TO 'privtest'@'localhost';
CREATE VIEW v2 AS SELECT * FROM t2;
GRANT SELECT,INSERT,UPDATE ON mysqltest1.v2 TO 'privtest'@'localhost';
connect (ce, localhost, privtest,, mysqltest1);
SELECT f2 FROM v2;
disconnect cq;
connect (cq, localhost, privtest,, mysqltest1);
UPDATE v2 SET f2=1;
INSERT INTO v2 VALUES(1);
INSERT INTO v2 SELECT 3 FROM t2;
SELECT f2 FROM v2;
EXPLAIN SELECT f2 FROM v2;
connection default;
DROP USER 'privtest'@localhost;
DROP VIEW v1, v2;
DROP TABLE t1, t2, t3;
disconnect ce;
disconnect cq;
connect (ce, localhost, root,, mysqltest1);
connect (cq, localhost, root,, mysqltest1);
connection ce;
CREATE TABLE h2 (pk int(11) NOT NULL AUTO_INCREMENT,PRIMARY KEY (pk)) ENGINE=InnoDB AUTO_INCREMENT=10 DEFAULT CHARSET=latin1;
insert into h2 values (1),(2),(3),(4),(5),(6),(7),(8),(9);
ANALYZE TABLE h2;
CREATE TABLE aa3 (  col_int_key int(11) DEFAULT NULL,  KEY col_int_key (col_int_key) ) ENGINE=InnoDB DEFAULT CHARSET=latin1;
DROP TABLE h2, aa3;
CREATE TABLE t1 (  pk int(11),  col_int_key int(11) DEFAULT NULL,  KEY col_int_key (col_int_key)) ENGINE=InnoDB DEFAULT CHARSET=latin1;
INSERT INTO t1 VALUES (NULL,NULL);
INSERT INTO t1 VALUES (6,NULL);
INSERT INTO t1 VALUES (8,-1131610112);
INSERT INTO t1 VALUES (2,-1009057792);
INSERT INTO t1 VALUES (-1220345856,1);
INSERT INTO t1 VALUES (NULL,-185204736);
DROP TABLE t1;
CREATE TABLE tbl1 (  login int(11) NOT NULL,  numb decimal(15,2) NOT NULL DEFAULT '0.00',  PRIMARY KEY (login),  KEY numb (numb))  ;
CREATE TABLE tbl2 (  login int(11) NOT NULL,  cmd tinyint(4) NOT NULL,  nump decimal(15,2) NOT NULL DEFAULT '0.00',  KEY cmd (cmd),  KEY login (login)) ;
insert into tbl1 (login) values(1),(2);
insert ignore into tbl2 (login) values(1),(2);
ANALYZE TABLE tbl1, tbl2;
SELECT   t1.login AS tlogin,   numb -   IFNULL((SELECT sum(nump) FROM tbl2 WHERE login=t1.login), 0) -  IFNULL((SELECT sum(nump) FROM tbl2 WHERE login=t1.login), 0) as spFROM tbl1 t1, tbl2 t2 WHERE t1.login=t2.login GROUP BY t1.login ORDER BY numb - IFNULL((SELECT sum(nump) FROM tbl2 WHERE login=t1.login), 0)              - IFNULL((SELECT sum(nump) FROM tbl2 WHERE login=t1.login), 0)DROP TABLE tbl1, tbl2;
connection default;
create table t1(a char(10) charset latin1, key(a)) engine=innodb;
create table t2(a binary(10), key(a)) engine=innodb;
insert into t1 values('1'),('2'),('3'),('4');
insert into t2 values('1'),('2'),('s');
analyze table t1,t2;
connection cq;
SET DEBUG_SYNC= 'quick_not_created SIGNAL ready_for_explain WAIT_FOR explained';
connection ce;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
eval EXPLAIN FOR CONNECTION $QID; connection cq;
connection default;
SET DEBUG_SYNC= 'RESET';
connection cq;
SET DEBUG_SYNC= 'quick_created_before_mutex SIGNAL ready_for_explain WAIT_FOR explained';
connection ce;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
eval EXPLAIN FOR CONNECTION $QID; connection cq;
connection default;
SET DEBUG_SYNC= 'RESET';
connection cq;
SET DEBUG_SYNC= 'quick_droped_after_mutex SIGNAL ready_for_explain WAIT_FOR explained';
connection ce;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
eval EXPLAIN FOR CONNECTION $QID; connection cq;
connection default;
DROP TABLE t1, t2;
connection default;
create table t1(a int);
insert into t1 values(1),(2);
DROP TABLE t1;
SET DEBUG_SYNC= 'RESET';
USE test;
DROP DATABASE mysqltest1;
disconnect cq;
disconnect ce;
    connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
set @previous_sql_mode_htnt542nh=@@sql_mode;
set sql_mode=(select replace(@@sql_mode,'ONLY_FULL_GROUP_BY',''));
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
set @@sql_mode=@previous_sql_mode_htnt542nh;
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
CREATE DATABASE mysqltest1;
USE mysqltest1;
CREATE TABLE t1 (f1 int);
INSERT INTO t1 VALUES (1),(2);
connect (ce, localhost, root,, mysqltest1);
connect (cq, localhost, root,, mysqltest1);
connection cq;
PREPARE stmt FROM 'EXPLAIN FOR CONNECTION 1';
connection cq;
PREPARE stmt FROM 'SELECT * FROM t1';
connection ce;
CREATE PROCEDURE proc6369()  EXPLAIN FOR CONNECTION 1;
CREATE PROCEDURE proc6369()  SELECT * FROM t1;
DROP PROCEDURE proc6369;
eval EXPLAIN FOR CONNECTION $qid;
EXPLAIN FOR CONNECTION 11111111;
GROUP BY f1 NOT IN (SELECT f1+10 AS f2 FROM t1 AS t2  GROUP BY f2 NOT IN  (SELECT f1+100 AS f3 FROM t1 AS t3));
CREATE TABLE t2 (f2 int);
ORDER BY f1 NOT IN (SELECT f1+10 AS f2 FROM t2  GROUP BY f2 NOT IN  (SELECT f1+100 AS f3 FROM t2 AS t3));
CREATE VIEW v1 AS SELECT t1.f1 FROM t1 JOIN t1 tt on t1.f1=tt.f1;
  (SELECT * FROM t1 LIMIT 1);
  (SELECT * FROM t1 LIMIT 1);
set @optimizer_switch_saved= @@optimizer_switch;
set optimizer_switch='derived_merge=off';
set optimizer_switch= @optimizer_switch_saved;
WHERE t1.f1>(SELECT t3.f1 FROM t1 AS t3 LIMIT 1);
WHERE t1.f1>(SELECT t3.f1 FROM t1 AS t3 LIMIT 1);
WHERE t1.f1>(SELECT t3.f1 FROM t1 AS t3 LIMIT 1);
eval EXPLAIN FORMAT=JSON $query;
ROW(f1,f1) >= ROW('1', (SELECT 1 FROM t1 WHERE f1 > 1234));
eval EXPLAIN FORMAT=JSON $query;
CREATE TABLE t3 (pk INT PRIMARY KEY);
INSERT INTO t3 SELECT DISTINCT * FROM t1;
connection default;
disconnect ce;
connection cq;
CREATE USER 'privtest'@'localhost';
GRANT SUPER ON *.* TO 'privtest'@'localhost';
GRANT SELECT ON mysqltest1.t2 TO 'privtest'@'localhost';
CREATE VIEW v2 AS SELECT * FROM t2;
GRANT SELECT,INSERT,UPDATE ON mysqltest1.v2 TO 'privtest'@'localhost';
connect (ce, localhost, privtest,, mysqltest1);
SELECT f2 FROM v2;
disconnect cq;
connect (cq, localhost, privtest,, mysqltest1);
UPDATE v2 SET f2=1;
INSERT INTO v2 VALUES(1);
INSERT INTO v2 SELECT 3 FROM t2;
SELECT f2 FROM v2;
EXPLAIN SELECT f2 FROM v2;
connection default;
DROP USER 'privtest'@localhost;
DROP VIEW v1, v2;
DROP TABLE t1, t2, t3;
disconnect ce;
disconnect cq;
connect (ce, localhost, root,, mysqltest1);
connect (cq, localhost, root,, mysqltest1);
connection ce;
CREATE TABLE h2 (pk int(11) NOT NULL AUTO_INCREMENT,PRIMARY KEY (pk)) ENGINE=InnoDB AUTO_INCREMENT=10 DEFAULT CHARSET=latin1;
insert into h2 values (1),(2),(3),(4),(5),(6),(7),(8),(9);
ANALYZE TABLE h2;
CREATE TABLE aa3 (  col_int_key int(11) DEFAULT NULL,  KEY col_int_key (col_int_key) ) ENGINE=InnoDB DEFAULT CHARSET=latin1;
DROP TABLE h2, aa3;
CREATE TABLE t1 (  pk int(11),  col_int_key int(11) DEFAULT NULL,  KEY col_int_key (col_int_key)) ENGINE=InnoDB DEFAULT CHARSET=latin1;
INSERT INTO t1 VALUES (NULL,NULL);
INSERT INTO t1 VALUES (6,NULL);
INSERT INTO t1 VALUES (8,-1131610112);
INSERT INTO t1 VALUES (2,-1009057792);
INSERT INTO t1 VALUES (-1220345856,1);
INSERT INTO t1 VALUES (NULL,-185204736);
DROP TABLE t1;
CREATE TABLE tbl1 (  login int(11) NOT NULL,  numb decimal(15,2) NOT NULL DEFAULT '0.00',  PRIMARY KEY (login),  KEY numb (numb))  ;
CREATE TABLE tbl2 (  login int(11) NOT NULL,  cmd tinyint(4) NOT NULL,  nump decimal(15,2) NOT NULL DEFAULT '0.00',  KEY cmd (cmd),  KEY login (login)) ;
insert into tbl1 (login) values(1),(2);
insert ignore into tbl2 (login) values(1),(2);
ANALYZE TABLE tbl1, tbl2;
SELECT   t1.login AS tlogin,   numb -   IFNULL((SELECT sum(nump) FROM tbl2 WHERE login=t1.login), 0) -  IFNULL((SELECT sum(nump) FROM tbl2 WHERE login=t1.login), 0) as spFROM tbl1 t1, tbl2 t2 WHERE t1.login=t2.login GROUP BY t1.login ORDER BY numb - IFNULL((SELECT sum(nump) FROM tbl2 WHERE login=t1.login), 0)              - IFNULL((SELECT sum(nump) FROM tbl2 WHERE login=t1.login), 0)DROP TABLE tbl1, tbl2;
connection default;
create table t1(a char(10) charset latin1, key(a)) engine=innodb;
create table t2(a binary(10), key(a)) engine=innodb;
insert into t1 values('1'),('2'),('3'),('4');
insert into t2 values('1'),('2'),('s');
analyze table t1,t2;
connection cq;
SET DEBUG_SYNC= 'quick_not_created SIGNAL ready_for_explain WAIT_FOR explained';
connection ce;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
eval EXPLAIN FOR CONNECTION $QID; connection cq;
connection default;
SET DEBUG_SYNC= 'RESET';
connection cq;
SET DEBUG_SYNC= 'quick_created_before_mutex SIGNAL ready_for_explain WAIT_FOR explained';
connection ce;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
eval EXPLAIN FOR CONNECTION $QID; connection cq;
connection default;
SET DEBUG_SYNC= 'RESET';
connection cq;
SET DEBUG_SYNC= 'quick_droped_after_mutex SIGNAL ready_for_explain WAIT_FOR explained';
connection ce;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
eval EXPLAIN FOR CONNECTION $QID; connection cq;
connection default;
DROP TABLE t1, t2;
connection default;
create table t1(a int);
insert into t1 values(1),(2);
DROP TABLE t1;
SET DEBUG_SYNC= 'RESET';
USE test;
DROP DATABASE mysqltest1;
disconnect cq;
disconnect ce;
    connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
set @previous_sql_mode_htnt542nh=@@sql_mode;
set sql_mode=(select replace(@@sql_mode,'ONLY_FULL_GROUP_BY',''));
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
set @@sql_mode=@previous_sql_mode_htnt542nh;
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
CREATE DATABASE mysqltest1;
USE mysqltest1;
CREATE TABLE t1 (f1 int);
INSERT INTO t1 VALUES (1),(2);
connect (ce, localhost, root,, mysqltest1);
connect (cq, localhost, root,, mysqltest1);
connection cq;
PREPARE stmt FROM 'EXPLAIN FOR CONNECTION 1';
connection cq;
PREPARE stmt FROM 'SELECT * FROM t1';
connection ce;
CREATE PROCEDURE proc6369()  EXPLAIN FOR CONNECTION 1;
CREATE PROCEDURE proc6369()  SELECT * FROM t1;
DROP PROCEDURE proc6369;
eval EXPLAIN FOR CONNECTION $qid;
EXPLAIN FOR CONNECTION 11111111;
GROUP BY f1 NOT IN (SELECT f1+10 AS f2 FROM t1 AS t2  GROUP BY f2 NOT IN  (SELECT f1+100 AS f3 FROM t1 AS t3));
CREATE TABLE t2 (f2 int);
ORDER BY f1 NOT IN (SELECT f1+10 AS f2 FROM t2  GROUP BY f2 NOT IN  (SELECT f1+100 AS f3 FROM t2 AS t3));
CREATE VIEW v1 AS SELECT t1.f1 FROM t1 JOIN t1 tt on t1.f1=tt.f1;
  (SELECT * FROM t1 LIMIT 1);
  (SELECT * FROM t1 LIMIT 1);
set @optimizer_switch_saved= @@optimizer_switch;
set optimizer_switch='derived_merge=off';
set optimizer_switch= @optimizer_switch_saved;
WHERE t1.f1>(SELECT t3.f1 FROM t1 AS t3 LIMIT 1);
WHERE t1.f1>(SELECT t3.f1 FROM t1 AS t3 LIMIT 1);
WHERE t1.f1>(SELECT t3.f1 FROM t1 AS t3 LIMIT 1);
eval EXPLAIN FORMAT=JSON $query;
ROW(f1,f1) >= ROW('1', (SELECT 1 FROM t1 WHERE f1 > 1234));
eval EXPLAIN FORMAT=JSON $query;
CREATE TABLE t3 (pk INT PRIMARY KEY);
INSERT INTO t3 SELECT DISTINCT * FROM t1;
connection default;
disconnect ce;
connection cq;
CREATE USER 'privtest'@'localhost';
GRANT SUPER ON *.* TO 'privtest'@'localhost';
GRANT SELECT ON mysqltest1.t2 TO 'privtest'@'localhost';
CREATE VIEW v2 AS SELECT * FROM t2;
GRANT SELECT,INSERT,UPDATE ON mysqltest1.v2 TO 'privtest'@'localhost';
connect (ce, localhost, privtest,, mysqltest1);
SELECT f2 FROM v2;
disconnect cq;
connect (cq, localhost, privtest,, mysqltest1);
UPDATE v2 SET f2=1;
INSERT INTO v2 VALUES(1);
INSERT INTO v2 SELECT 3 FROM t2;
SELECT f2 FROM v2;
EXPLAIN SELECT f2 FROM v2;
connection default;
DROP USER 'privtest'@localhost;
DROP VIEW v1, v2;
DROP TABLE t1, t2, t3;
disconnect ce;
disconnect cq;
connect (ce, localhost, root,, mysqltest1);
connect (cq, localhost, root,, mysqltest1);
connection ce;
CREATE TABLE h2 (pk int(11) NOT NULL AUTO_INCREMENT,PRIMARY KEY (pk)) ENGINE=InnoDB AUTO_INCREMENT=10 DEFAULT CHARSET=latin1;
insert into h2 values (1),(2),(3),(4),(5),(6),(7),(8),(9);
ANALYZE TABLE h2;
CREATE TABLE aa3 (  col_int_key int(11) DEFAULT NULL,  KEY col_int_key (col_int_key) ) ENGINE=InnoDB DEFAULT CHARSET=latin1;
DROP TABLE h2, aa3;
CREATE TABLE t1 (  pk int(11),  col_int_key int(11) DEFAULT NULL,  KEY col_int_key (col_int_key)) ENGINE=InnoDB DEFAULT CHARSET=latin1;
INSERT INTO t1 VALUES (NULL,NULL);
INSERT INTO t1 VALUES (6,NULL);
INSERT INTO t1 VALUES (8,-1131610112);
INSERT INTO t1 VALUES (2,-1009057792);
INSERT INTO t1 VALUES (-1220345856,1);
INSERT INTO t1 VALUES (NULL,-185204736);
DROP TABLE t1;
CREATE TABLE tbl1 (  login int(11) NOT NULL,  numb decimal(15,2) NOT NULL DEFAULT '0.00',  PRIMARY KEY (login),  KEY numb (numb))  ;
CREATE TABLE tbl2 (  login int(11) NOT NULL,  cmd tinyint(4) NOT NULL,  nump decimal(15,2) NOT NULL DEFAULT '0.00',  KEY cmd (cmd),  KEY login (login)) ;
insert into tbl1 (login) values(1),(2);
insert ignore into tbl2 (login) values(1),(2);
ANALYZE TABLE tbl1, tbl2;
SELECT   t1.login AS tlogin,   numb -   IFNULL((SELECT sum(nump) FROM tbl2 WHERE login=t1.login), 0) -  IFNULL((SELECT sum(nump) FROM tbl2 WHERE login=t1.login), 0) as spFROM tbl1 t1, tbl2 t2 WHERE t1.login=t2.login GROUP BY t1.login ORDER BY numb - IFNULL((SELECT sum(nump) FROM tbl2 WHERE login=t1.login), 0)              - IFNULL((SELECT sum(nump) FROM tbl2 WHERE login=t1.login), 0)DROP TABLE tbl1, tbl2;
connection default;
create table t1(a char(10) charset latin1, key(a)) engine=innodb;
create table t2(a binary(10), key(a)) engine=innodb;
insert into t1 values('1'),('2'),('3'),('4');
insert into t2 values('1'),('2'),('s');
analyze table t1,t2;
connection cq;
SET DEBUG_SYNC= 'quick_not_created SIGNAL ready_for_explain WAIT_FOR explained';
connection ce;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
eval EXPLAIN FOR CONNECTION $QID; connection cq;
connection default;
SET DEBUG_SYNC= 'RESET';
connection cq;
SET DEBUG_SYNC= 'quick_created_before_mutex SIGNAL ready_for_explain WAIT_FOR explained';
connection ce;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
eval EXPLAIN FOR CONNECTION $QID; connection cq;
connection default;
SET DEBUG_SYNC= 'RESET';
connection cq;
SET DEBUG_SYNC= 'quick_droped_after_mutex SIGNAL ready_for_explain WAIT_FOR explained';
connection ce;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
eval EXPLAIN FOR CONNECTION $QID; connection cq;
connection default;
DROP TABLE t1, t2;
connection default;
create table t1(a int);
insert into t1 values(1),(2);
DROP TABLE t1;
SET DEBUG_SYNC= 'RESET';
USE test;
DROP DATABASE mysqltest1;
disconnect cq;
disconnect ce;
    connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
set @previous_sql_mode_htnt542nh=@@sql_mode;
set sql_mode=(select replace(@@sql_mode,'ONLY_FULL_GROUP_BY',''));
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
set @@sql_mode=@previous_sql_mode_htnt542nh;
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
CREATE DATABASE mysqltest1;
USE mysqltest1;
CREATE TABLE t1 (f1 int);
INSERT INTO t1 VALUES (1),(2);
connect (ce, localhost, root,, mysqltest1);
connect (cq, localhost, root,, mysqltest1);
connection cq;
PREPARE stmt FROM 'EXPLAIN FOR CONNECTION 1';
connection cq;
PREPARE stmt FROM 'SELECT * FROM t1';
connection ce;
CREATE PROCEDURE proc6369()  EXPLAIN FOR CONNECTION 1;
CREATE PROCEDURE proc6369()  SELECT * FROM t1;
DROP PROCEDURE proc6369;
eval EXPLAIN FOR CONNECTION $qid;
EXPLAIN FOR CONNECTION 11111111;
GROUP BY f1 NOT IN (SELECT f1+10 AS f2 FROM t1 AS t2  GROUP BY f2 NOT IN  (SELECT f1+100 AS f3 FROM t1 AS t3));
CREATE TABLE t2 (f2 int);
ORDER BY f1 NOT IN (SELECT f1+10 AS f2 FROM t2  GROUP BY f2 NOT IN  (SELECT f1+100 AS f3 FROM t2 AS t3));
CREATE VIEW v1 AS SELECT t1.f1 FROM t1 JOIN t1 tt on t1.f1=tt.f1;
  (SELECT * FROM t1 LIMIT 1);
  (SELECT * FROM t1 LIMIT 1);
set @optimizer_switch_saved= @@optimizer_switch;
set optimizer_switch='derived_merge=off';
set optimizer_switch= @optimizer_switch_saved;
WHERE t1.f1>(SELECT t3.f1 FROM t1 AS t3 LIMIT 1);
WHERE t1.f1>(SELECT t3.f1 FROM t1 AS t3 LIMIT 1);
WHERE t1.f1>(SELECT t3.f1 FROM t1 AS t3 LIMIT 1);
eval EXPLAIN FORMAT=JSON $query;
ROW(f1,f1) >= ROW('1', (SELECT 1 FROM t1 WHERE f1 > 1234));
eval EXPLAIN FORMAT=JSON $query;
CREATE TABLE t3 (pk INT PRIMARY KEY);
INSERT INTO t3 SELECT DISTINCT * FROM t1;
connection default;
disconnect ce;
connection cq;
CREATE USER 'privtest'@'localhost';
GRANT SUPER ON *.* TO 'privtest'@'localhost';
GRANT SELECT ON mysqltest1.t2 TO 'privtest'@'localhost';
CREATE VIEW v2 AS SELECT * FROM t2;
GRANT SELECT,INSERT,UPDATE ON mysqltest1.v2 TO 'privtest'@'localhost';
connect (ce, localhost, privtest,, mysqltest1);
SELECT f2 FROM v2;
disconnect cq;
connect (cq, localhost, privtest,, mysqltest1);
UPDATE v2 SET f2=1;
INSERT INTO v2 VALUES(1);
INSERT INTO v2 SELECT 3 FROM t2;
SELECT f2 FROM v2;
EXPLAIN SELECT f2 FROM v2;
connection default;
DROP USER 'privtest'@localhost;
DROP VIEW v1, v2;
DROP TABLE t1, t2, t3;
disconnect ce;
disconnect cq;
connect (ce, localhost, root,, mysqltest1);
connect (cq, localhost, root,, mysqltest1);
connection ce;
CREATE TABLE h2 (pk int(11) NOT NULL AUTO_INCREMENT,PRIMARY KEY (pk)) ENGINE=InnoDB AUTO_INCREMENT=10 DEFAULT CHARSET=latin1;
insert into h2 values (1),(2),(3),(4),(5),(6),(7),(8),(9);
ANALYZE TABLE h2;
CREATE TABLE aa3 (  col_int_key int(11) DEFAULT NULL,  KEY col_int_key (col_int_key) ) ENGINE=InnoDB DEFAULT CHARSET=latin1;
DROP TABLE h2, aa3;
CREATE TABLE t1 (  pk int(11),  col_int_key int(11) DEFAULT NULL,  KEY col_int_key (col_int_key)) ENGINE=InnoDB DEFAULT CHARSET=latin1;
INSERT INTO t1 VALUES (NULL,NULL);
INSERT INTO t1 VALUES (6,NULL);
INSERT INTO t1 VALUES (8,-1131610112);
INSERT INTO t1 VALUES (2,-1009057792);
INSERT INTO t1 VALUES (-1220345856,1);
INSERT INTO t1 VALUES (NULL,-185204736);
DROP TABLE t1;
CREATE TABLE tbl1 (  login int(11) NOT NULL,  numb decimal(15,2) NOT NULL DEFAULT '0.00',  PRIMARY KEY (login),  KEY numb (numb))  ;
CREATE TABLE tbl2 (  login int(11) NOT NULL,  cmd tinyint(4) NOT NULL,  nump decimal(15,2) NOT NULL DEFAULT '0.00',  KEY cmd (cmd),  KEY login (login)) ;
insert into tbl1 (login) values(1),(2);
insert ignore into tbl2 (login) values(1),(2);
ANALYZE TABLE tbl1, tbl2;
SELECT   t1.login AS tlogin,   numb -   IFNULL((SELECT sum(nump) FROM tbl2 WHERE login=t1.login), 0) -  IFNULL((SELECT sum(nump) FROM tbl2 WHERE login=t1.login), 0) as spFROM tbl1 t1, tbl2 t2 WHERE t1.login=t2.login GROUP BY t1.login ORDER BY numb - IFNULL((SELECT sum(nump) FROM tbl2 WHERE login=t1.login), 0)              - IFNULL((SELECT sum(nump) FROM tbl2 WHERE login=t1.login), 0)DROP TABLE tbl1, tbl2;
connection default;
create table t1(a char(10) charset latin1, key(a)) engine=innodb;
create table t2(a binary(10), key(a)) engine=innodb;
insert into t1 values('1'),('2'),('3'),('4');
insert into t2 values('1'),('2'),('s');
analyze table t1,t2;
connection cq;
SET DEBUG_SYNC= 'quick_not_created SIGNAL ready_for_explain WAIT_FOR explained';
connection ce;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
eval EXPLAIN FOR CONNECTION $QID; connection cq;
connection default;
SET DEBUG_SYNC= 'RESET';
connection cq;
SET DEBUG_SYNC= 'quick_created_before_mutex SIGNAL ready_for_explain WAIT_FOR explained';
connection ce;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
eval EXPLAIN FOR CONNECTION $QID; connection cq;
connection default;
SET DEBUG_SYNC= 'RESET';
connection cq;
SET DEBUG_SYNC= 'quick_droped_after_mutex SIGNAL ready_for_explain WAIT_FOR explained';
connection ce;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
eval EXPLAIN FOR CONNECTION $QID; connection cq;
connection default;
DROP TABLE t1, t2;
connection default;
create table t1(a int);
insert into t1 values(1),(2);
DROP TABLE t1;
SET DEBUG_SYNC= 'RESET';
USE test;
DROP DATABASE mysqltest1;
disconnect cq;
disconnect ce;
