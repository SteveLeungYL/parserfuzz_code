delimiter $;
SET @save_sql_mode=@@sql_mode$set sql_mode = pipes_as_concat$create procedure solver(initial_leftm varchar(200), initial_rightm varchar(200))begindeclare initial_leftm_j  json;
declare initial_rightm_j json;
set initial_leftm_j  = cast(initial_leftm as json),    initial_rightm_j = cast(initial_rightm as json);
with recursivenumber_of_lines (value) as(select json_length(initial_rightm_j)),number_of_columns (value) as(select json_length(json_extract(initial_leftm_j,"$[0]"))),line_numbers (n) asselect 0union allselect n+1 from line_numbers, number_of_lines where n<(value-1)),column_numbers (n) asselect 0union allselect n+1 from line_numbers, number_of_columns where n<(value-1)),equations (null_if_done, leftm, rightm, pivot_lines, pivot_columns) asselect 0, initial_leftm_j, initial_rightm_j,       cast("" as char(200)), cast("" as char(200))union allselectcur_pivot.cur_pivot_lineselect"[" ||group_concat(select"[" ||group_concat(json_extract(json_extract(eq.leftm, "$[" || ln.n || "]"),             "$[" || cn.n || "]")(case when find_in_set(ln.n,eq.pivot_lines)=0 and ln.n<>cur_pivot.cur_pivot_linethen json_extract(json_extract(eq.leftm, "$[" || ln.n || "]"),                  "$[" || cur_pivot.cur_pivot_column || "]") *     json_extract(json_extract(eq.leftm, "$[" || cur_pivot.cur_pivot_line || "]"),                  "$[" || cn.n || "]") /     cur_pivot.cur_pivot_valueelse 0 end)order by cn.n separator ',')|| "]"from column_numbers cnorder by ln.n separator ',')|| "]"from line_numbers ln),select"[" ||group_concat(json_extract(eq.rightm, "$[" || ln.n || "]")(case when find_in_set(ln.n,eq.pivot_lines)=0 and ln.n<>cur_pivot.cur_pivot_linethen json_extract(json_extract(eq.leftm, "$[" || ln.n || "]"),                  "$[" || cur_pivot.cur_pivot_column || "]") *     json_extract(eq.rightm, "$[" || cur_pivot.cur_pivot_line || "]") /     cur_pivot.cur_pivot_valueelse 0 end)order by ln.n separator ',')|| "]"from line_numbersln),coalesce(cur_pivot.cur_pivot_line, "") || "," || eq.pivot_lines,coalesce(cur_pivot.cur_pivot_column, "") || "," || eq.pivot_columnsfrom equations eqleft joinlateralselectln.n as cur_pivot_line,cn.n as cur_pivot_column, # Extract the ln.n-th line of the left member, and from it, extract the # cn.n-th column, getting a number json_extract(json_extract(eq.leftm, "$[" || ln.n || "]"),              "$[" || cn.n || "]")) as cur_pivot_valuefrom line_numbers ln join column_numbers cnwherefind_in_set(ln.n,eq.pivot_lines)=0 andjson_extract(json_extract(eq.leftm, "$[" || ln.n || "]"),             "$[" || cn.n || "]") <> 0order by cur_pivot_line,cur_pivot_columnlimit 1) as cur_pivoton 1where eq.null_if_done is not null),final_equations asselect * from equations where null_if_done is nullselectjson_extract(eq.leftm, "$[" || ln.n || "]")  as left_member,json_extract(eq.rightm, "$[" || ln.n || "]") as right_member,free.value as list_of_free_unknownsfrom final_equations eq, line_numbers ln,select group_concat(cn.n+1) as valuefrom final_equations eq, column_numbers cnwhere find_in_set(cn.n,eq.pivot_columns)=0) as freeorder by find_in_set(ln.n,eq.pivot_lines), ln.n;
endSET @@sql_mode=@save_sql_mode$delimiter ;$call solver("[[2,3,1],  [5,-3,10],  [6,0,12]]", "[7,21,28]");
call solver("[[1,2,1,3],  [1,0,1,1],  [0,1,0,1],  [1,3,1,4]]", "[1,3,-1,4]");
call solver("[[1,2,1,3],  [1,0,1,1],  [0,1,0,1],  [1,3,1,3]]", "[1,3,-1,4]");
drop procedure solver;
