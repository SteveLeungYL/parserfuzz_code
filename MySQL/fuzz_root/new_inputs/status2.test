FLUSH STATUS;
DELIMITER $$;
CREATE FUNCTION testQuestion() RETURNS INTEGERBEGIN  DECLARE foo INTEGER;
  DECLARE bar INTEGER;
  SET foo=1;
  SET bar=2;
  RETURN foo;
END $$CREATE PROCEDURE testQuestion2()BEGIN  SELECT 1;
END $$DELIMITER ;$$DROP TABLE IF EXISTS t1,t2;
CREATE TABLE t1 (c1 INT);
CREATE TABLE t2 (c1 INT);
CREATE EVENT ev1 ON SCHEDULE EVERY 1 SECOND  DO INSERT INTO t1 VALUES(1);
SHOW STATUS LIKE 'Questions';
SELECT testQuestion();
SHOW STATUS LIKE 'Questions';
CALL testQuestion2();
SHOW STATUS LIKE 'Questions';
SELECT 1;
SHOW STATUS LIKE 'Questions';
connect (con1,localhost,root,,);
connection con1;
SELECT 1;
connection default;
disconnect con1;
SHOW STATUS LIKE 'Questions';
DELIMITER $$;
CREATE TRIGGER trigg1 AFTER INSERT ON t1  FOR EACH ROW BEGIN   INSERT INTO t2 VALUES (1);
  END;
$$DELIMITER ;$$SHOW STATUS LIKE 'Questions';
INSERT INTO t1 VALUES (1);
SHOW STATUS LIKE 'Questions';
DROP PROCEDURE testQuestion2;
DROP TRIGGER trigg1;
DROP FUNCTION testQuestion;
DROP EVENT ev1;
DROP TABLE t1,t2;
FLUSH STATUS;
DELIMITER $$;
CREATE FUNCTION testQuestion() RETURNS INTEGERBEGIN  DECLARE foo INTEGER;
  DECLARE bar INTEGER;
  SET foo=1;
  SET bar=2;
  RETURN foo;
END $$CREATE PROCEDURE testQuestion2()BEGIN  SELECT 1;
END $$DELIMITER ;$$DROP TABLE IF EXISTS t1,t2;
CREATE TABLE t1 (c1 INT);
CREATE TABLE t2 (c1 INT);
CREATE EVENT ev1 ON SCHEDULE EVERY 1 SECOND  DO INSERT INTO t1 VALUES(1);
SHOW STATUS LIKE 'Questions';
SELECT testQuestion();
SHOW STATUS LIKE 'Questions';
CALL testQuestion2();
SHOW STATUS LIKE 'Questions';
SELECT 1;
SHOW STATUS LIKE 'Questions';
connect (con1,localhost,root,,);
connection con1;
SELECT 1;
connection default;
disconnect con1;
SHOW STATUS LIKE 'Questions';
DELIMITER $$;
CREATE TRIGGER trigg1 AFTER INSERT ON t1  FOR EACH ROW BEGIN   INSERT INTO t2 VALUES (1);
  END;
$$DELIMITER ;$$SHOW STATUS LIKE 'Questions';
INSERT INTO t1 VALUES (1);
SHOW STATUS LIKE 'Questions';
DROP PROCEDURE testQuestion2;
DROP TRIGGER trigg1;
DROP FUNCTION testQuestion;
DROP EVENT ev1;
DROP TABLE t1,t2;
FLUSH STATUS;
DELIMITER $$;
CREATE FUNCTION testQuestion() RETURNS INTEGERBEGIN  DECLARE foo INTEGER;
  DECLARE bar INTEGER;
  SET foo=1;
  SET bar=2;
  RETURN foo;
END $$CREATE PROCEDURE testQuestion2()BEGIN  SELECT 1;
END $$DELIMITER ;$$DROP TABLE IF EXISTS t1,t2;
CREATE TABLE t1 (c1 INT);
CREATE TABLE t2 (c1 INT);
CREATE EVENT ev1 ON SCHEDULE EVERY 1 SECOND  DO INSERT INTO t1 VALUES(1);
SHOW STATUS LIKE 'Questions';
SELECT testQuestion();
SHOW STATUS LIKE 'Questions';
CALL testQuestion2();
SHOW STATUS LIKE 'Questions';
SELECT 1;
SHOW STATUS LIKE 'Questions';
connect (con1,localhost,root,,);
connection con1;
SELECT 1;
connection default;
disconnect con1;
SHOW STATUS LIKE 'Questions';
DELIMITER $$;
CREATE TRIGGER trigg1 AFTER INSERT ON t1  FOR EACH ROW BEGIN   INSERT INTO t2 VALUES (1);
  END;
$$DELIMITER ;$$SHOW STATUS LIKE 'Questions';
INSERT INTO t1 VALUES (1);
SHOW STATUS LIKE 'Questions';
DROP PROCEDURE testQuestion2;
DROP TRIGGER trigg1;
DROP FUNCTION testQuestion;
DROP EVENT ev1;
DROP TABLE t1,t2;
FLUSH STATUS;
DELIMITER $$;
CREATE FUNCTION testQuestion() RETURNS INTEGERBEGIN  DECLARE foo INTEGER;
  DECLARE bar INTEGER;
  SET foo=1;
  SET bar=2;
  RETURN foo;
END $$CREATE PROCEDURE testQuestion2()BEGIN  SELECT 1;
END $$DELIMITER ;$$DROP TABLE IF EXISTS t1,t2;
CREATE TABLE t1 (c1 INT);
CREATE TABLE t2 (c1 INT);
CREATE EVENT ev1 ON SCHEDULE EVERY 1 SECOND  DO INSERT INTO t1 VALUES(1);
SHOW STATUS LIKE 'Questions';
SELECT testQuestion();
SHOW STATUS LIKE 'Questions';
CALL testQuestion2();
SHOW STATUS LIKE 'Questions';
SELECT 1;
SHOW STATUS LIKE 'Questions';
connect (con1,localhost,root,,);
connection con1;
SELECT 1;
connection default;
disconnect con1;
SHOW STATUS LIKE 'Questions';
DELIMITER $$;
CREATE TRIGGER trigg1 AFTER INSERT ON t1  FOR EACH ROW BEGIN   INSERT INTO t2 VALUES (1);
  END;
$$DELIMITER ;$$SHOW STATUS LIKE 'Questions';
INSERT INTO t1 VALUES (1);
SHOW STATUS LIKE 'Questions';
DROP PROCEDURE testQuestion2;
DROP TRIGGER trigg1;
DROP FUNCTION testQuestion;
DROP EVENT ev1;
DROP TABLE t1,t2;
FLUSH STATUS;
DELIMITER $$;
CREATE FUNCTION testQuestion() RETURNS INTEGERBEGIN  DECLARE foo INTEGER;
  DECLARE bar INTEGER;
  SET foo=1;
  SET bar=2;
  RETURN foo;
END $$CREATE PROCEDURE testQuestion2()BEGIN  SELECT 1;
END $$DELIMITER ;$$DROP TABLE IF EXISTS t1,t2;
CREATE TABLE t1 (c1 INT);
CREATE TABLE t2 (c1 INT);
CREATE EVENT ev1 ON SCHEDULE EVERY 1 SECOND  DO INSERT INTO t1 VALUES(1);
SHOW STATUS LIKE 'Questions';
SELECT testQuestion();
SHOW STATUS LIKE 'Questions';
CALL testQuestion2();
SHOW STATUS LIKE 'Questions';
SELECT 1;
SHOW STATUS LIKE 'Questions';
connect (con1,localhost,root,,);
connection con1;
SELECT 1;
connection default;
disconnect con1;
SHOW STATUS LIKE 'Questions';
DELIMITER $$;
CREATE TRIGGER trigg1 AFTER INSERT ON t1  FOR EACH ROW BEGIN   INSERT INTO t2 VALUES (1);
  END;
$$DELIMITER ;$$SHOW STATUS LIKE 'Questions';
INSERT INTO t1 VALUES (1);
SHOW STATUS LIKE 'Questions';
DROP PROCEDURE testQuestion2;
DROP TRIGGER trigg1;
DROP FUNCTION testQuestion;
DROP EVENT ev1;
DROP TABLE t1,t2;
