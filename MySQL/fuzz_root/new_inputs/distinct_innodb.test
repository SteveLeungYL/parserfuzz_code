set @previous_sql_mode_htnt542nh=@@sql_mode;
set sql_mode=(select replace(@@sql_mode,'ONLY_FULL_GROUP_BY',''));
set @@sql_mode=@previous_sql_mode_htnt542nh;
set @previous_sql_mode_htnt542nh=@@sql_mode;
set sql_mode=(select replace(@@sql_mode,'ONLY_FULL_GROUP_BY',''));
set @@sql_mode=@previous_sql_mode_htnt542nh;
insert into t1 values(100,1,2),(200,1,1),(300,2,1),(400,2,2);
analyze table t1;
eval select distinct b from $source order by c;
eval select distinct min(b) from $source group by a order by min(c);
eval explain select distinct min(b) from $source group by a order by min(c);
delete from t1;
insert into t1 values(200,1,1),(100,1,2),(400,2,2),(300,2,1);
analyze table t1;
eval select distinct b from $source order by c;
eval select distinct min(b) from $source group by a order by min(c);
eval select distinct b from $source order by c;
eval select distinct b from $source order by b-1,b+1,c;
eval select distinct min(b) from $source group by a order by min(c);
eval select distinct min(b) from $source group by a order by min(b);
eval select distinct min(b) from $source group by a order by -min(b);
eval select distinct a, min(b) from $source group by a order by max(b-2)-min(c*5);
eval select distinct min(b) as z from $source group by a order by z;
eval select distinct b from $source where b<0 order by rand();
eval select distinct b from $source order by 45.0+3;
eval select (select distinct b from $source_no_alias as S2 where b=7 order by S3.a) from $source_no_alias as S3;
eval select distinct b from $source order by abs(b);
eval select distinct b as z from $source order by abs(z);
eval select distinct b from $source order by abs(b+a);
eval select distinct abs(b) as z from $source order by z;
eval select distinct abs(b) as z from $source order by abs(b);
eval select distinct abs(b) from $source order by abs(b);
eval select distinct abs(b) as z from $source order by abs(b)+1;
eval select distinct abs(b) as z from $source order by z+1;
eval select distinct abs(b) from $source order by abs(b)+1;
eval select distinct abs(b) as z from $source order by floor(10*b);
eval select distinct abs(b) from $source order by floor(10*b);
eval select distinct abs(b) from $source order by floor(10*b),floor(10*a);
eval select distinct abs(b) from $source_no_alias as S2 order by (select floor(10*S2.b) from $source_no_alias as S3 limit 1);
eval select distinct abs(b),b from $source_no_alias as S2 order by (select floor(10*S2.b) from $source_no_alias as S3 limit 1);
eval select distinct abs(b) from $source_no_alias as S2 order by (select floor(10*S3.b) from $source_no_alias as S3 limit 1);
eval select distinct abs(b), (select floor(10*S3.b) from $source_no_alias as S3 limit 1) as subq from $source_no_alias as S2 order by subq;
eval select distinct abs(b) from $source_no_alias as S2 order by floor(10*S2.b) IN (select floor(10*S3.b) from $source_no_alias as S3);
eval select distinct abs(b) from $source_no_alias as S2 order by floor(10*S2.b) > ALL(select floor(10*S3.b) from $source_no_alias as S3);
eval select distinct abs(b) from $source_no_alias as S2 order by floor(10*10) IN (select floor(10*S2.b) from $source_no_alias as S3);
eval select distinct abs(b) from $source_no_alias as S2 order by floor(10*10) > ALL(select floor(10*S2.b) from $source_no_alias as S3);
SELECT distinct 1 FROM t1 group by a order by count(*);
SELECT distinct 1 FROM t1 group by a order by count(*)-count(*);
SELECT distinct 1 FROM t1 group by a order by any_value(count(*)-count(b));
SELECT distinct 1 FROM t1 group by a order by any_value(count(*))-any_value(count(b));
SELECT distinct a, min(b) FROM t1 group by a order by count(*)-count(*);
SELECT distinct 1 FROM t1 group by a order by count(*)-count(b);
select * from t1 as t2 where t2.a in  (SELECT distinct 1 FROM t1 group by a order by count(t2.a)-max(t2.a));
SELECT distinct 1, count(*)-count(b) FROM t1 group by a order by count(*)-count(b);
SELECT distinct sum(a) FROM t1 order by count(*)-count(*);
SELECT distinct sum(a) FROM t1 order by count(*)-count(b);
EXPLAIN SELECT DISTINCT MAX(b) FROM t1;
EXPLAIN SELECT DISTINCT (SELECT MAX(t1.b) FROM t1 AS t2 LIMIT 1) FROM t1;
EXPLAIN SELECT DISTINCT (SELECT MAX(t1.b+0*t2.a) FROM t1 AS t2 LIMIT 1) FROM t1;
eval SELECT DISTINCT GP1.a AS g1 FROM $source_no_alias AS GP1WHERE GP1.a >= 0ORDER BY GP1.b LIMIT 8;
eval SELECT DISTINCT GP1.a AS g1 FROM $source_no_alias AS GP1WHERE GP1.a >= 0ORDER BY 2+ANY_VALUE(GP1.b) LIMIT 8;
DELETE FROM t1;
set @previous_sql_mode_htnt542nh=@@sql_mode;
set sql_mode=(select replace(@@sql_mode,'ONLY_FULL_GROUP_BY',''));
set @@sql_mode=@previous_sql_mode_htnt542nh;
insert into t1 values(100,1,2),(200,1,1),(300,2,1),(400,2,2);
analyze table t1;
eval select distinct b from $source order by c;
eval select distinct min(b) from $source group by a order by min(c);
eval explain select distinct min(b) from $source group by a order by min(c);
delete from t1;
insert into t1 values(200,1,1),(100,1,2),(400,2,2),(300,2,1);
analyze table t1;
eval select distinct b from $source order by c;
eval select distinct min(b) from $source group by a order by min(c);
eval select distinct b from $source order by c;
eval select distinct b from $source order by b-1,b+1,c;
eval select distinct min(b) from $source group by a order by min(c);
eval select distinct min(b) from $source group by a order by min(b);
eval select distinct min(b) from $source group by a order by -min(b);
eval select distinct a, min(b) from $source group by a order by max(b-2)-min(c*5);
eval select distinct min(b) as z from $source group by a order by z;
eval select distinct b from $source where b<0 order by rand();
eval select distinct b from $source order by 45.0+3;
eval select (select distinct b from $source_no_alias as S2 where b=7 order by S3.a) from $source_no_alias as S3;
eval select distinct b from $source order by abs(b);
eval select distinct b as z from $source order by abs(z);
eval select distinct b from $source order by abs(b+a);
eval select distinct abs(b) as z from $source order by z;
eval select distinct abs(b) as z from $source order by abs(b);
eval select distinct abs(b) from $source order by abs(b);
eval select distinct abs(b) as z from $source order by abs(b)+1;
eval select distinct abs(b) as z from $source order by z+1;
eval select distinct abs(b) from $source order by abs(b)+1;
eval select distinct abs(b) as z from $source order by floor(10*b);
eval select distinct abs(b) from $source order by floor(10*b);
eval select distinct abs(b) from $source order by floor(10*b),floor(10*a);
eval select distinct abs(b) from $source_no_alias as S2 order by (select floor(10*S2.b) from $source_no_alias as S3 limit 1);
eval select distinct abs(b),b from $source_no_alias as S2 order by (select floor(10*S2.b) from $source_no_alias as S3 limit 1);
eval select distinct abs(b) from $source_no_alias as S2 order by (select floor(10*S3.b) from $source_no_alias as S3 limit 1);
eval select distinct abs(b), (select floor(10*S3.b) from $source_no_alias as S3 limit 1) as subq from $source_no_alias as S2 order by subq;
eval select distinct abs(b) from $source_no_alias as S2 order by floor(10*S2.b) IN (select floor(10*S3.b) from $source_no_alias as S3);
eval select distinct abs(b) from $source_no_alias as S2 order by floor(10*S2.b) > ALL(select floor(10*S3.b) from $source_no_alias as S3);
eval select distinct abs(b) from $source_no_alias as S2 order by floor(10*10) IN (select floor(10*S2.b) from $source_no_alias as S3);
eval select distinct abs(b) from $source_no_alias as S2 order by floor(10*10) > ALL(select floor(10*S2.b) from $source_no_alias as S3);
SELECT distinct 1 FROM t1 group by a order by count(*);
SELECT distinct 1 FROM t1 group by a order by count(*)-count(*);
SELECT distinct 1 FROM t1 group by a order by any_value(count(*)-count(b));
SELECT distinct 1 FROM t1 group by a order by any_value(count(*))-any_value(count(b));
SELECT distinct a, min(b) FROM t1 group by a order by count(*)-count(*);
SELECT distinct 1 FROM t1 group by a order by count(*)-count(b);
select * from t1 as t2 where t2.a in  (SELECT distinct 1 FROM t1 group by a order by count(t2.a)-max(t2.a));
SELECT distinct 1, count(*)-count(b) FROM t1 group by a order by count(*)-count(b);
SELECT distinct sum(a) FROM t1 order by count(*)-count(*);
SELECT distinct sum(a) FROM t1 order by count(*)-count(b);
EXPLAIN SELECT DISTINCT MAX(b) FROM t1;
EXPLAIN SELECT DISTINCT (SELECT MAX(t1.b) FROM t1 AS t2 LIMIT 1) FROM t1;
EXPLAIN SELECT DISTINCT (SELECT MAX(t1.b+0*t2.a) FROM t1 AS t2 LIMIT 1) FROM t1;
eval SELECT DISTINCT GP1.a AS g1 FROM $source_no_alias AS GP1WHERE GP1.a >= 0ORDER BY GP1.b LIMIT 8;
eval SELECT DISTINCT GP1.a AS g1 FROM $source_no_alias AS GP1WHERE GP1.a >= 0ORDER BY 2+ANY_VALUE(GP1.b) LIMIT 8;
DELETE FROM t1;
set @previous_sql_mode_htnt542nh=@@sql_mode;
set sql_mode=(select replace(@@sql_mode,'ONLY_FULL_GROUP_BY',''));
set @@sql_mode=@previous_sql_mode_htnt542nh;
insert into t1 values(100,1,2),(200,1,1),(300,2,1),(400,2,2);
analyze table t1;
eval select distinct b from $source order by c;
eval select distinct min(b) from $source group by a order by min(c);
eval explain select distinct min(b) from $source group by a order by min(c);
delete from t1;
insert into t1 values(200,1,1),(100,1,2),(400,2,2),(300,2,1);
analyze table t1;
eval select distinct b from $source order by c;
eval select distinct min(b) from $source group by a order by min(c);
eval select distinct b from $source order by c;
eval select distinct b from $source order by b-1,b+1,c;
eval select distinct min(b) from $source group by a order by min(c);
eval select distinct min(b) from $source group by a order by min(b);
eval select distinct min(b) from $source group by a order by -min(b);
eval select distinct a, min(b) from $source group by a order by max(b-2)-min(c*5);
eval select distinct min(b) as z from $source group by a order by z;
eval select distinct b from $source where b<0 order by rand();
eval select distinct b from $source order by 45.0+3;
eval select (select distinct b from $source_no_alias as S2 where b=7 order by S3.a) from $source_no_alias as S3;
eval select distinct b from $source order by abs(b);
eval select distinct b as z from $source order by abs(z);
eval select distinct b from $source order by abs(b+a);
eval select distinct abs(b) as z from $source order by z;
eval select distinct abs(b) as z from $source order by abs(b);
eval select distinct abs(b) from $source order by abs(b);
eval select distinct abs(b) as z from $source order by abs(b)+1;
eval select distinct abs(b) as z from $source order by z+1;
eval select distinct abs(b) from $source order by abs(b)+1;
eval select distinct abs(b) as z from $source order by floor(10*b);
eval select distinct abs(b) from $source order by floor(10*b);
eval select distinct abs(b) from $source order by floor(10*b),floor(10*a);
eval select distinct abs(b) from $source_no_alias as S2 order by (select floor(10*S2.b) from $source_no_alias as S3 limit 1);
eval select distinct abs(b),b from $source_no_alias as S2 order by (select floor(10*S2.b) from $source_no_alias as S3 limit 1);
eval select distinct abs(b) from $source_no_alias as S2 order by (select floor(10*S3.b) from $source_no_alias as S3 limit 1);
eval select distinct abs(b), (select floor(10*S3.b) from $source_no_alias as S3 limit 1) as subq from $source_no_alias as S2 order by subq;
eval select distinct abs(b) from $source_no_alias as S2 order by floor(10*S2.b) IN (select floor(10*S3.b) from $source_no_alias as S3);
eval select distinct abs(b) from $source_no_alias as S2 order by floor(10*S2.b) > ALL(select floor(10*S3.b) from $source_no_alias as S3);
eval select distinct abs(b) from $source_no_alias as S2 order by floor(10*10) IN (select floor(10*S2.b) from $source_no_alias as S3);
eval select distinct abs(b) from $source_no_alias as S2 order by floor(10*10) > ALL(select floor(10*S2.b) from $source_no_alias as S3);
SELECT distinct 1 FROM t1 group by a order by count(*);
SELECT distinct 1 FROM t1 group by a order by count(*)-count(*);
SELECT distinct 1 FROM t1 group by a order by any_value(count(*)-count(b));
SELECT distinct 1 FROM t1 group by a order by any_value(count(*))-any_value(count(b));
SELECT distinct a, min(b) FROM t1 group by a order by count(*)-count(*);
SELECT distinct 1 FROM t1 group by a order by count(*)-count(b);
select * from t1 as t2 where t2.a in  (SELECT distinct 1 FROM t1 group by a order by count(t2.a)-max(t2.a));
SELECT distinct 1, count(*)-count(b) FROM t1 group by a order by count(*)-count(b);
SELECT distinct sum(a) FROM t1 order by count(*)-count(*);
SELECT distinct sum(a) FROM t1 order by count(*)-count(b);
EXPLAIN SELECT DISTINCT MAX(b) FROM t1;
EXPLAIN SELECT DISTINCT (SELECT MAX(t1.b) FROM t1 AS t2 LIMIT 1) FROM t1;
EXPLAIN SELECT DISTINCT (SELECT MAX(t1.b+0*t2.a) FROM t1 AS t2 LIMIT 1) FROM t1;
eval SELECT DISTINCT GP1.a AS g1 FROM $source_no_alias AS GP1WHERE GP1.a >= 0ORDER BY GP1.b LIMIT 8;
eval SELECT DISTINCT GP1.a AS g1 FROM $source_no_alias AS GP1WHERE GP1.a >= 0ORDER BY 2+ANY_VALUE(GP1.b) LIMIT 8;
DELETE FROM t1;
set @previous_sql_mode_htnt542nh=@@sql_mode;
set sql_mode=(select replace(@@sql_mode,'ONLY_FULL_GROUP_BY',''));
set @@sql_mode=@previous_sql_mode_htnt542nh;
insert into t1 values(100,1,2),(200,1,1),(300,2,1),(400,2,2);
analyze table t1;
eval select distinct b from $source order by c;
eval select distinct min(b) from $source group by a order by min(c);
eval explain select distinct min(b) from $source group by a order by min(c);
delete from t1;
insert into t1 values(200,1,1),(100,1,2),(400,2,2),(300,2,1);
analyze table t1;
eval select distinct b from $source order by c;
eval select distinct min(b) from $source group by a order by min(c);
eval select distinct b from $source order by c;
eval select distinct b from $source order by b-1,b+1,c;
eval select distinct min(b) from $source group by a order by min(c);
eval select distinct min(b) from $source group by a order by min(b);
eval select distinct min(b) from $source group by a order by -min(b);
eval select distinct a, min(b) from $source group by a order by max(b-2)-min(c*5);
eval select distinct min(b) as z from $source group by a order by z;
eval select distinct b from $source where b<0 order by rand();
eval select distinct b from $source order by 45.0+3;
eval select (select distinct b from $source_no_alias as S2 where b=7 order by S3.a) from $source_no_alias as S3;
eval select distinct b from $source order by abs(b);
eval select distinct b as z from $source order by abs(z);
eval select distinct b from $source order by abs(b+a);
eval select distinct abs(b) as z from $source order by z;
eval select distinct abs(b) as z from $source order by abs(b);
eval select distinct abs(b) from $source order by abs(b);
eval select distinct abs(b) as z from $source order by abs(b)+1;
eval select distinct abs(b) as z from $source order by z+1;
eval select distinct abs(b) from $source order by abs(b)+1;
eval select distinct abs(b) as z from $source order by floor(10*b);
eval select distinct abs(b) from $source order by floor(10*b);
eval select distinct abs(b) from $source order by floor(10*b),floor(10*a);
eval select distinct abs(b) from $source_no_alias as S2 order by (select floor(10*S2.b) from $source_no_alias as S3 limit 1);
eval select distinct abs(b),b from $source_no_alias as S2 order by (select floor(10*S2.b) from $source_no_alias as S3 limit 1);
eval select distinct abs(b) from $source_no_alias as S2 order by (select floor(10*S3.b) from $source_no_alias as S3 limit 1);
eval select distinct abs(b), (select floor(10*S3.b) from $source_no_alias as S3 limit 1) as subq from $source_no_alias as S2 order by subq;
eval select distinct abs(b) from $source_no_alias as S2 order by floor(10*S2.b) IN (select floor(10*S3.b) from $source_no_alias as S3);
eval select distinct abs(b) from $source_no_alias as S2 order by floor(10*S2.b) > ALL(select floor(10*S3.b) from $source_no_alias as S3);
eval select distinct abs(b) from $source_no_alias as S2 order by floor(10*10) IN (select floor(10*S2.b) from $source_no_alias as S3);
eval select distinct abs(b) from $source_no_alias as S2 order by floor(10*10) > ALL(select floor(10*S2.b) from $source_no_alias as S3);
SELECT distinct 1 FROM t1 group by a order by count(*);
SELECT distinct 1 FROM t1 group by a order by count(*)-count(*);
SELECT distinct 1 FROM t1 group by a order by any_value(count(*)-count(b));
SELECT distinct 1 FROM t1 group by a order by any_value(count(*))-any_value(count(b));
SELECT distinct a, min(b) FROM t1 group by a order by count(*)-count(*);
SELECT distinct 1 FROM t1 group by a order by count(*)-count(b);
select * from t1 as t2 where t2.a in  (SELECT distinct 1 FROM t1 group by a order by count(t2.a)-max(t2.a));
SELECT distinct 1, count(*)-count(b) FROM t1 group by a order by count(*)-count(b);
SELECT distinct sum(a) FROM t1 order by count(*)-count(*);
SELECT distinct sum(a) FROM t1 order by count(*)-count(b);
EXPLAIN SELECT DISTINCT MAX(b) FROM t1;
EXPLAIN SELECT DISTINCT (SELECT MAX(t1.b) FROM t1 AS t2 LIMIT 1) FROM t1;
EXPLAIN SELECT DISTINCT (SELECT MAX(t1.b+0*t2.a) FROM t1 AS t2 LIMIT 1) FROM t1;
eval SELECT DISTINCT GP1.a AS g1 FROM $source_no_alias AS GP1WHERE GP1.a >= 0ORDER BY GP1.b LIMIT 8;
eval SELECT DISTINCT GP1.a AS g1 FROM $source_no_alias AS GP1WHERE GP1.a >= 0ORDER BY 2+ANY_VALUE(GP1.b) LIMIT 8;
DELETE FROM t1;
CREATE TABLE t1 (  col_int_key int(11) NOT NULL,  col_time_key time NOT NULL,  col_datetime_key datetime NOT NULL,  KEY col_int_key (col_int_key),  KEY col_time_key (col_time_key),  KEY col_datetime_key (col_datetime_key)) ENGINE=InnoDB;
INSERT INTO t1 VALUES (7,'06:17:39','2003-08-21 00:00:00');
SELECT DISTINCT col_int_keyFROM t1WHERE col_int_key IN  ( 18, 6, 84, 4, 0, 2, 8, 3, 7, 9, 1 )  AND col_datetime_key BETWEEN '2001-08-04' AND '2003-06-13'ORDER BY col_time_keyLIMIT 3;
DROP TABLE t1;
create table t1(a int, b int, c int) engine=InnoDB;
create table t2(a int, b int, c int) engine=InnoDB;
insert into t2 values();
analyze table t2;
create view v1 as select t1.* from t1 left join t2 on 1;
drop view v1;
create view v1 as select t1.a*2 as a, t1.b*2 as b, t1.c*2 as c from t1;
drop view v1;
select distinct t1_outer.a from t1 t1_outerorder by t1_outer.b;
select distinct t1_outer.a from t1 t1_outerorder by (select max(t1_outer.b+t1_inner.b) from t1 t1_inner);
select (select distinct 1 from t1 t1_inner  group by t1_inner.a order by max(t1_outer.b)) from t1 t1_outer;
drop table t1, t2;
