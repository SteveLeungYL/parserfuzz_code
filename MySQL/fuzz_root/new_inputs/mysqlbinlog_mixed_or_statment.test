    SET @previous_binlog_format__htnt542nh=@@GLOBAL.binlog_format;
SET @@GLOBAL.binlog_format=STATEMENT;
SET binlog_format=STATEMENT;
   let $wait_counter= `SELECT $wait_timeout * 10`;
while ($wait_counter)   let $current_sessions= query_get_value(SHOW GLOBAL STATUS LIKE 'Threads_connected', Value, 1);
   let $success= `SELECT $current_sessions <= $count_sessions`;
   if ($success)   {      let $wait_counter= 0;
   }   if (!$success)   {      sleep 0.1;
      dec $wait_counter;
   }         SHOW PROCESSLIST;
   SET @@GLOBAL.binlog_format=@previous_binlog_format__htnt542nh;
SET @org_concurrent_insert= @@global.concurrent_insert;
SET @@global.concurrent_insert=1;
CREATE TABLE t1(a INT) ENGINE=MyISAM;
CREATE FUNCTION f1() RETURNS INT RETURN (SELECT MIN(a) FROM t1);
CREATE VIEW v1 AS (SELECT 1 FROM dual WHERE f1() = 1);
LOCK TABLE v1 READ;
connect (con1, localhost, root);
SET lock_wait_timeout=1;
INSERT INTO t1 VALUES (1);
connection default;
UNLOCK TABLES;
SELECT * FROM v1;
disconnect con1;
SET @@global.concurrent_insert= @org_concurrent_insert;
DROP TABLE t1;
DROP VIEW v1;
DROP FUNCTION f1;
    SET @previous_binlog_format__htnt542nh=@@GLOBAL.binlog_format;
SET @@GLOBAL.binlog_format=STATEMENT;
SET binlog_format=STATEMENT;
   let $wait_counter= `SELECT $wait_timeout * 10`;
while ($wait_counter)   let $current_sessions= query_get_value(SHOW GLOBAL STATUS LIKE 'Threads_connected', Value, 1);
   let $success= `SELECT $current_sessions <= $count_sessions`;
   if ($success)   {      let $wait_counter= 0;
   }   if (!$success)   {      sleep 0.1;
      dec $wait_counter;
   }         SHOW PROCESSLIST;
   SET @@GLOBAL.binlog_format=@previous_binlog_format__htnt542nh;
SET @org_concurrent_insert= @@global.concurrent_insert;
SET @@global.concurrent_insert=1;
CREATE TABLE t1(a INT) ENGINE=MyISAM;
CREATE FUNCTION f1() RETURNS INT RETURN (SELECT MIN(a) FROM t1);
CREATE VIEW v1 AS (SELECT 1 FROM dual WHERE f1() = 1);
LOCK TABLE v1 READ;
connect (con1, localhost, root);
SET lock_wait_timeout=1;
INSERT INTO t1 VALUES (1);
connection default;
UNLOCK TABLES;
SELECT * FROM v1;
disconnect con1;
SET @@global.concurrent_insert= @org_concurrent_insert;
DROP TABLE t1;
DROP VIEW v1;
DROP FUNCTION f1;
    SET @previous_binlog_format__htnt542nh=@@GLOBAL.binlog_format;
SET @@GLOBAL.binlog_format=STATEMENT;
SET binlog_format=STATEMENT;
   let $wait_counter= `SELECT $wait_timeout * 10`;
while ($wait_counter)   let $current_sessions= query_get_value(SHOW GLOBAL STATUS LIKE 'Threads_connected', Value, 1);
   let $success= `SELECT $current_sessions <= $count_sessions`;
   if ($success)   {      let $wait_counter= 0;
   }   if (!$success)   {      sleep 0.1;
      dec $wait_counter;
   }         SHOW PROCESSLIST;
   SET @@GLOBAL.binlog_format=@previous_binlog_format__htnt542nh;
SET @org_concurrent_insert= @@global.concurrent_insert;
SET @@global.concurrent_insert=1;
CREATE TABLE t1(a INT) ENGINE=MyISAM;
CREATE FUNCTION f1() RETURNS INT RETURN (SELECT MIN(a) FROM t1);
CREATE VIEW v1 AS (SELECT 1 FROM dual WHERE f1() = 1);
LOCK TABLE v1 READ;
connect (con1, localhost, root);
SET lock_wait_timeout=1;
INSERT INTO t1 VALUES (1);
connection default;
UNLOCK TABLES;
SELECT * FROM v1;
disconnect con1;
SET @@global.concurrent_insert= @org_concurrent_insert;
DROP TABLE t1;
DROP VIEW v1;
DROP FUNCTION f1;
    SET @previous_binlog_format__htnt542nh=@@GLOBAL.binlog_format;
SET @@GLOBAL.binlog_format=STATEMENT;
SET binlog_format=STATEMENT;
   let $wait_counter= `SELECT $wait_timeout * 10`;
while ($wait_counter)   let $current_sessions= query_get_value(SHOW GLOBAL STATUS LIKE 'Threads_connected', Value, 1);
   let $success= `SELECT $current_sessions <= $count_sessions`;
   if ($success)   {      let $wait_counter= 0;
   }   if (!$success)   {      sleep 0.1;
      dec $wait_counter;
   }         SHOW PROCESSLIST;
   SET @@GLOBAL.binlog_format=@previous_binlog_format__htnt542nh;
SET @org_concurrent_insert= @@global.concurrent_insert;
SET @@global.concurrent_insert=1;
CREATE TABLE t1(a INT) ENGINE=MyISAM;
CREATE FUNCTION f1() RETURNS INT RETURN (SELECT MIN(a) FROM t1);
CREATE VIEW v1 AS (SELECT 1 FROM dual WHERE f1() = 1);
LOCK TABLE v1 READ;
connect (con1, localhost, root);
SET lock_wait_timeout=1;
INSERT INTO t1 VALUES (1);
connection default;
UNLOCK TABLES;
SELECT * FROM v1;
disconnect con1;
SET @@global.concurrent_insert= @org_concurrent_insert;
DROP TABLE t1;
DROP VIEW v1;
DROP FUNCTION f1;
    SET @previous_binlog_format__htnt542nh=@@GLOBAL.binlog_format;
SET @@GLOBAL.binlog_format=STATEMENT;
SET binlog_format=STATEMENT;
   let $wait_counter= `SELECT $wait_timeout * 10`;
while ($wait_counter)   let $current_sessions= query_get_value(SHOW GLOBAL STATUS LIKE 'Threads_connected', Value, 1);
   let $success= `SELECT $current_sessions <= $count_sessions`;
   if ($success)   {      let $wait_counter= 0;
   }   if (!$success)   {      sleep 0.1;
      dec $wait_counter;
   }         SHOW PROCESSLIST;
   SET @@GLOBAL.binlog_format=@previous_binlog_format__htnt542nh;
SET @org_concurrent_insert= @@global.concurrent_insert;
SET @@global.concurrent_insert=1;
CREATE TABLE t1(a INT) ENGINE=MyISAM;
CREATE FUNCTION f1() RETURNS INT RETURN (SELECT MIN(a) FROM t1);
CREATE VIEW v1 AS (SELECT 1 FROM dual WHERE f1() = 1);
LOCK TABLE v1 READ;
connect (con1, localhost, root);
SET lock_wait_timeout=1;
INSERT INTO t1 VALUES (1);
connection default;
UNLOCK TABLES;
SELECT * FROM v1;
disconnect con1;
SET @@global.concurrent_insert= @org_concurrent_insert;
DROP TABLE t1;
DROP VIEW v1;
DROP FUNCTION f1;
