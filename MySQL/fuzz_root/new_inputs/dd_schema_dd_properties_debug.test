      die;
set debug='+d,skip_dd_table_access_check';
eval SELECT * FROM mysql.dd_properties INTO OUTFILE '$file';
set debug='-d,skip_dd_table_access_check';
exec perl -p -i.bak -e   "s/;/\n/g; s/\\\\*//g;
    s/SYSTEM_TABLES\=/SYSTEM_TABLES\=\n/g;
    s/\=col0/\=\n  col0/g;
    s/\=fields/\=\n    fields/g;
    s/\=elem0/\=\n      elem0/g"  $file;
exec perl -p -i.bak -e   "s/^elem/      elem/g;
    s/^col/  col/g; s/^data/  data/g; s/^version/  version/g;
    s/^def/  def/g; s/^indexes/    indexes/g;
    s/^foreign_keys/    foreign_keys/g; s/^name/    name/g;
    s/^options/    options/g; s/^id/  id/g;
    s/^lbl/            lbl/g; s/^pos/            pos/g;
    s/^idx/  idx/g; s/^space_id/       space_id/g;
    s/^root/       root/g; s/^table_id/       table_id/g;
    s/^trx_id/       trx_id/g"  $file;
perl;
  use strict;
  use warnings;
  my $file = $ENV{'ENV_FILE'} or die;
  my $filter = $ENV{'ENV_FILTER'};
  open my $fh, '<', $file or die "unable to open file '$file' : $!";
  my @all_lines = grep(/./, <$fh>);
  close $fh;
  if (length $filter) {    @all_lines = grep(!/$filter/, @all_lines);
  }  open $fh, '>', $file or die "unable to open file '$file' : $!";
  print $fh @all_lines;
  close $fh;
EOF      die;
set debug='+d,skip_dd_table_access_check';
eval SELECT * FROM mysql.dd_properties INTO OUTFILE '$file';
set debug='-d,skip_dd_table_access_check';
exec perl -p -i.bak -e   "s/;/\n/g; s/\\\\*//g;
    s/SYSTEM_TABLES\=/SYSTEM_TABLES\=\n/g;
    s/\=col0/\=\n  col0/g;
    s/\=fields/\=\n    fields/g;
    s/\=elem0/\=\n      elem0/g"  $file;
exec perl -p -i.bak -e   "s/^elem/      elem/g;
    s/^col/  col/g; s/^data/  data/g; s/^version/  version/g;
    s/^def/  def/g; s/^indexes/    indexes/g;
    s/^foreign_keys/    foreign_keys/g; s/^name/    name/g;
    s/^options/    options/g; s/^id/  id/g;
    s/^lbl/            lbl/g; s/^pos/            pos/g;
    s/^idx/  idx/g; s/^space_id/       space_id/g;
    s/^root/       root/g; s/^table_id/       table_id/g;
    s/^trx_id/       trx_id/g"  $file;
perl;
  use strict;
  use warnings;
  my $file = $ENV{'ENV_FILE'} or die;
  my $filter = $ENV{'ENV_FILTER'};
  open my $fh, '<', $file or die "unable to open file '$file' : $!";
  my @all_lines = grep(/./, <$fh>);
  close $fh;
  if (length $filter) {    @all_lines = grep(!/$filter/, @all_lines);
  }  open $fh, '>', $file or die "unable to open file '$file' : $!";
  print $fh @all_lines;
  close $fh;
EOF      die;
set debug='+d,skip_dd_table_access_check';
eval SELECT * FROM mysql.dd_properties INTO OUTFILE '$file';
set debug='-d,skip_dd_table_access_check';
exec perl -p -i.bak -e   "s/;/\n/g; s/\\\\*//g;
    s/SYSTEM_TABLES\=/SYSTEM_TABLES\=\n/g;
    s/\=col0/\=\n  col0/g;
    s/\=fields/\=\n    fields/g;
    s/\=elem0/\=\n      elem0/g"  $file;
exec perl -p -i.bak -e   "s/^elem/      elem/g;
    s/^col/  col/g; s/^data/  data/g; s/^version/  version/g;
    s/^def/  def/g; s/^indexes/    indexes/g;
    s/^foreign_keys/    foreign_keys/g; s/^name/    name/g;
    s/^options/    options/g; s/^id/  id/g;
    s/^lbl/            lbl/g; s/^pos/            pos/g;
    s/^idx/  idx/g; s/^space_id/       space_id/g;
    s/^root/       root/g; s/^table_id/       table_id/g;
    s/^trx_id/       trx_id/g"  $file;
perl;
  use strict;
  use warnings;
  my $file = $ENV{'ENV_FILE'} or die;
  my $filter = $ENV{'ENV_FILTER'};
  open my $fh, '<', $file or die "unable to open file '$file' : $!";
  my @all_lines = grep(/./, <$fh>);
  close $fh;
  if (length $filter) {    @all_lines = grep(!/$filter/, @all_lines);
  }  open $fh, '>', $file or die "unable to open file '$file' : $!";
  print $fh @all_lines;
  close $fh;
EOF      die;
set debug='+d,skip_dd_table_access_check';
eval SELECT * FROM mysql.dd_properties INTO OUTFILE '$file';
set debug='-d,skip_dd_table_access_check';
exec perl -p -i.bak -e   "s/;/\n/g; s/\\\\*//g;
    s/SYSTEM_TABLES\=/SYSTEM_TABLES\=\n/g;
    s/\=col0/\=\n  col0/g;
    s/\=fields/\=\n    fields/g;
    s/\=elem0/\=\n      elem0/g"  $file;
exec perl -p -i.bak -e   "s/^elem/      elem/g;
    s/^col/  col/g; s/^data/  data/g; s/^version/  version/g;
    s/^def/  def/g; s/^indexes/    indexes/g;
    s/^foreign_keys/    foreign_keys/g; s/^name/    name/g;
    s/^options/    options/g; s/^id/  id/g;
    s/^lbl/            lbl/g; s/^pos/            pos/g;
    s/^idx/  idx/g; s/^space_id/       space_id/g;
    s/^root/       root/g; s/^table_id/       table_id/g;
    s/^trx_id/       trx_id/g"  $file;
perl;
  use strict;
  use warnings;
  my $file = $ENV{'ENV_FILE'} or die;
  my $filter = $ENV{'ENV_FILTER'};
  open my $fh, '<', $file or die "unable to open file '$file' : $!";
  my @all_lines = grep(/./, <$fh>);
  close $fh;
  if (length $filter) {    @all_lines = grep(!/$filter/, @all_lines);
  }  open $fh, '>', $file or die "unable to open file '$file' : $!";
  print $fh @all_lines;
  close $fh;
EOF      die;
set debug='+d,skip_dd_table_access_check';
eval SELECT * FROM mysql.dd_properties INTO OUTFILE '$file';
set debug='-d,skip_dd_table_access_check';
exec perl -p -i.bak -e   "s/;/\n/g; s/\\\\*//g;
    s/SYSTEM_TABLES\=/SYSTEM_TABLES\=\n/g;
    s/\=col0/\=\n  col0/g;
    s/\=fields/\=\n    fields/g;
    s/\=elem0/\=\n      elem0/g"  $file;
exec perl -p -i.bak -e   "s/^elem/      elem/g;
    s/^col/  col/g; s/^data/  data/g; s/^version/  version/g;
    s/^def/  def/g; s/^indexes/    indexes/g;
    s/^foreign_keys/    foreign_keys/g; s/^name/    name/g;
    s/^options/    options/g; s/^id/  id/g;
    s/^lbl/            lbl/g; s/^pos/            pos/g;
    s/^idx/  idx/g; s/^space_id/       space_id/g;
    s/^root/       root/g; s/^table_id/       table_id/g;
    s/^trx_id/       trx_id/g"  $file;
perl;
  use strict;
  use warnings;
  my $file = $ENV{'ENV_FILE'} or die;
  my $filter = $ENV{'ENV_FILTER'};
  open my $fh, '<', $file or die "unable to open file '$file' : $!";
  my @all_lines = grep(/./, <$fh>);
  close $fh;
  if (length $filter) {    @all_lines = grep(!/$filter/, @all_lines);
  }  open $fh, '>', $file or die "unable to open file '$file' : $!";
  print $fh @all_lines;
  close $fh;
EOF