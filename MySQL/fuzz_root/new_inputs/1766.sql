SET SESSION TRANSACTION ISOLATION LEVEL REPEATABLE READ;
CREATE TABLE t1 (s1 INT) ENGINE=InnoDB;
INSERT INTO t1 VALUES (1),(2);
COMMIT;
START TRANSACTION;
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;
COMMIT;
SET @@autocommit=0;
COMMIT;
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;
START TRANSACTION;
SELECT @@transaction_isolation;
SELECT * FROM t1;
SELECT @@transaction_isolation;
INSERT INTO t1 VALUES (-1);
SELECT @@transaction_isolation;
COMMIT;
START TRANSACTION;
SELECT * FROM t1;
SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED;
START TRANSACTION;
INSERT INTO t1 VALUES (1000);
COMMIT;
SELECT * FROM t1;
COMMIT;
START TRANSACTION;
SELECT * FROM t1;
COMMIT;
SET SESSION TRANSACTION ISOLATION LEVEL REPEATABLE READ;
SET TRANSACTION ISOLATION LEVEL READ COMMITTED;
START TRANSACTION;
START TRANSACTION;
INSERT INTO t1 VALUES (1001);
COMMIT;
SELECT COUNT(*) FROM t1 WHERE s1 = 1001;
COMMIT AND CHAIN;
INSERT INTO t1 VALUES (1002);
COMMIT;
SELECT COUNT(*) FROM t1 WHERE s1 = 1002;
COMMIT;
SELECT * FROM t1;
DELETE FROM t1 WHERE s1 >= 1000;
COMMIT;
SET TRANSACTION ISOLATION LEVEL READ COMMITTED;
START TRANSACTION;
START TRANSACTION;
INSERT INTO t1 VALUES (1001);
COMMIT;
SELECT COUNT(*) FROM t1 WHERE s1 = 1001;
ROLLBACK AND CHAIN;
INSERT INTO t1 VALUES (1002);
COMMIT;
SELECT COUNT(*) FROM t1 WHERE s1 = 1002;
COMMIT;
SELECT * FROM t1;
DELETE FROM t1 WHERE s1 >= 1000;
COMMIT;
SET @@completion_type=1;
SET TRANSACTION ISOLATION LEVEL READ COMMITTED;
START TRANSACTION;
START TRANSACTION;
INSERT INTO t1 VALUES (1001);
COMMIT;
SELECT * FROM t1 WHERE s1 >= 1000;
COMMIT AND NO CHAIN;
INSERT INTO t1 VALUES (1002);
COMMIT;
SELECT * FROM t1 WHERE s1 >= 1000;
INSERT INTO t1 VALUES (1003);
COMMIT;
SELECT * FROM t1 WHERE s1 >= 1000;
COMMIT;
SELECT * FROM t1;
DELETE FROM t1 WHERE s1 >= 1000;
COMMIT AND NO CHAIN;
SET @@completion_type=0;
COMMIT;
SET @@completion_type=1;
COMMIT AND NO CHAIN;
SET TRANSACTION ISOLATION LEVEL READ COMMITTED;
START TRANSACTION;
START TRANSACTION;
INSERT INTO t1 VALUES (1001);
COMMIT;
SELECT * FROM t1 WHERE s1 >= 1000;
ROLLBACK AND NO CHAIN;
INSERT INTO t1 VALUES (1002);
COMMIT;
SELECT * FROM t1 WHERE s1 >= 1000;
INSERT INTO t1 VALUES (1003);
COMMIT;
SELECT * FROM t1 WHERE s1 >= 1000;
COMMIT;
SELECT * FROM t1;
DELETE FROM t1 WHERE s1 >= 1000;
COMMIT AND NO CHAIN;
SET @@completion_type=0;
COMMIT;
SET TRANSACTION ISOLATION LEVEL	READ COMMITTED;
SET SESSION TRANSACTION ISOLATION LEVEL REPEATABLE READ;
START TRANSACTION;
SELECT * FROM t1;
INSERT INTO t1 VALUES (1000);
COMMIT;
SELECT * FROM t1;
COMMIT;
DELETE FROM t1 WHERE s1 >= 1000;
COMMIT;
SET @@completion_type=1;
COMMIT AND NO CHAIN;
SET TRANSACTION ISOLATION LEVEL READ COMMITTED;
START TRANSACTION;
TRUNCATE TABLE t1;
INSERT INTO t1 VALUES (1000);
SELECT * FROM t1;
INSERT INTO t1 VALUES (1001);
COMMIT;
SELECT * FROM t1;
COMMIT AND NO CHAIN;
SET @@completion_type=0;
COMMIT AND NO CHAIN;
SET @@autocommit=1;
COMMIT;
DROP TABLE t1;
START TRANSACTION;
COMMIT;
START TRANSACTION READ ONLY;
COMMIT;
START TRANSACTION READ WRITE;
COMMIT;
START TRANSACTION READ ONLY, READ WRITE;
START TRANSACTION READ ONLY, WITH CONSISTENT SNAPSHOT;
COMMIT;
START TRANSACTION READ WRITE, WITH CONSISTENT SNAPSHOT;
COMMIT;
START TRANSACTION WITH CONSISTENT SNAPSHOT, READ ONLY;
COMMIT;
START TRANSACTION WITH CONSISTENT SNAPSHOT, READ WRITE;
COMMIT;
START TRANSACTION READ ONLY, WITH CONSISTENT SNAPSHOT, READ WRITE;
SET TRANSACTION READ ONLY;
SET TRANSACTION READ WRITE;
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE, READ ONLY;
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE, READ WRITE;
SET TRANSACTION READ ONLY, ISOLATION LEVEL READ COMMITTED;
SET TRANSACTION READ WRITE, ISOLATION LEVEL READ COMMITTED;
SET TRANSACTION READ ONLY, READ WRITE;
COMMIT;
SET SESSION TRANSACTION READ WRITE;
SELECT @@transaction_read_only;
SET SESSION TRANSACTION READ ONLY;
SELECT @@transaction_read_only;
SET SESSION TRANSACTION ISOLATION LEVEL REPEATABLE READ, READ WRITE;
SELECT @@transaction_read_only;
SET SESSION TRANSACTION READ ONLY, ISOLATION LEVEL REPEATABLE READ;
SELECT @@transaction_read_only;
START TRANSACTION;
SET TRANSACTION READ ONLY;
SET SESSION TRANSACTION READ ONLY;
SET GLOBAL TRANSACTION READ ONLY;
COMMIT;
SET SESSION TRANSACTION READ WRITE;
SET GLOBAL TRANSACTION READ WRITE;
CREATE TABLE t1(a INT);
CREATE TEMPORARY TABLE temp_t2(a INT);
SET SESSION TRANSACTION READ ONLY;
CREATE TABLE t3(a INT);
ALTER TABLE t1 COMMENT "Test";
DROP TABLE t1;
CREATE TEMPORARY TABLE temp_t3(a INT);
ALTER TABLE temp_t2 COMMENT "Test";
DROP TEMPORARY TABLE temp_t2;
CREATE FUNCTION f1() RETURNS INT RETURN 1;
DROP FUNCTION f1;
CREATE PROCEDURE p1() BEGIN END;
DROP PROCEDURE p1;
CREATE VIEW v1 AS SELECT 1;
SET SESSION TRANSACTION READ WRITE;
CREATE VIEW v1 AS SELECT 1;
SET SESSION TRANSACTION READ ONLY;
DROP VIEW v1;
SET SESSION TRANSACTION READ WRITE;
DROP VIEW v1;
SET SESSION TRANSACTION READ ONLY;
RENAME TABLE t1 TO t2;
RENAME TABLE temp_t2 TO temp_t3;
TRUNCATE TABLE t1;
CREATE DATABASE db1;
DROP DATABASE db1;
SET SESSION TRANSACTION READ WRITE;
START TRANSACTION READ ONLY;
INSERT INTO t1 VALUES (1), (2);
UPDATE t1 SET a= 3;
DELETE FROM t1;
INSERT INTO temp_t2 VALUES (1), (2);
UPDATE temp_t2 SET a= 3;
DELETE FROM temp_t2;
SELECT * FROM t1;
SELECT * FROM temp_t2;
HANDLER t1 OPEN;
HANDLER t1 READ FIRST;
HANDLER t1 CLOSE;
HANDLER temp_t2 OPEN;
HANDLER temp_t2 READ FIRST;
HANDLER temp_t2 CLOSE;
PREPARE stmt FROM "DELETE FROM t1";
PREPARE stmt FROM "DELETE FROM temp_t2";
EXECUTE stmt;
DEALLOCATE PREPARE stmt;
COMMIT;
CREATE FUNCTION f1() RETURNS INT BEGIN DELETE FROM t1; RETURN 1; END;
CREATE FUNCTION f2() RETURNS INT BEGIN DELETE FROM temp_t2; RETURN 1; END;
CREATE PROCEDURE p1() DELETE FROM t1;
CREATE PROCEDURE p2() DELETE FROM temp_t2;
START TRANSACTION READ ONLY;
SELECT f1();
SELECT f2();
CALL p1();
CALL p2();
COMMIT;
DROP FUNCTION f1;
DROP FUNCTION f2;
DROP PROCEDURE p1;
DROP PROCEDURE p2;
CREATE VIEW v1 AS SELECT a FROM t1;
START TRANSACTION READ ONLY;
INSERT INTO v1 VALUES (1), (2);
SELECT * FROM v1;
COMMIT;
DROP VIEW v1;
SET SESSION TRANSACTION READ ONLY;
LOCK TABLE t1 WRITE;
LOCK TABLE t1 READ;
UNLOCK TABLES;
SET SESSION TRANSACTION READ WRITE;
DROP TABLE temp_t2, t1;
CREATE TABLE t1(a INT);
SET SESSION TRANSACTION READ ONLY;
START TRANSACTION;
DELETE FROM t1;
COMMIT;
START TRANSACTION READ WRITE;
DELETE FROM t1;
COMMIT;
SET SESSION TRANSACTION READ WRITE;
SET TRANSACTION READ ONLY;
START TRANSACTION;
DELETE FROM t1;
COMMIT;
START TRANSACTION READ WRITE;
DELETE FROM t1;
COMMIT;
START TRANSACTION READ ONLY;
SELECT * FROM t1;
COMMIT AND CHAIN;
DELETE FROM t1;
COMMIT;
START TRANSACTION READ ONLY;
SELECT * FROM t1;
ROLLBACK AND CHAIN;
DELETE FROM t1;
COMMIT;
DROP TABLE t1;
SET @only= 1;
CREATE TABLE t1 (only INT);
INSERT INTO t1 (only) values (1);
SELECT only FROM t1 WHERE only = 1;
DROP TABLE t1;
CREATE PROCEDURE p1() BEGIN DECLARE only INT DEFAULT 1; END;
CALL p1();
DROP PROCEDURE p1;
CREATE TABLE t1(a INT);
SET TRANSACTION READ ONLY;
XA START 'test1';
INSERT INTO t1 VALUES (1);
UPDATE t1 SET a=2;
DELETE FROM t1;
XA END 'test1';
XA PREPARE 'test1';
XA COMMIT 'test1';
DROP TABLE t1;
CREATE PROCEDURE p1() SET SESSION TRANSACTION READ ONLY;
CALL p1();
SELECT @@transaction_read_only;
SET SESSION TRANSACTION READ WRITE;
DROP PROCEDURE p1;
CREATE PROCEDURE p1() SET SESSION TRANSACTION READ ONLY, ISOLATION LEVEL SERIALIZABLE;
CALL p1();
SELECT @@transaction_read_only;
SET SESSION TRANSACTION READ WRITE, ISOLATION LEVEL REPEATABLE READ;
DROP PROCEDURE p1;
CREATE FUNCTION f1() RETURNS INT BEGIN SET SESSION TRANSACTION READ ONLY; RETURN 1; END;
SELECT f1();
SELECT @@transaction_read_only;
SET SESSION TRANSACTION READ WRITE;
DROP FUNCTION f1;
CREATE FUNCTION f1() RETURNS INT BEGIN SET SESSION TRANSACTION ISOLATION LEVEL SERIALIZABLE, READ ONLY; RETURN 1; END;
SELECT f1();
SELECT @@transaction_read_only;
SET SESSION TRANSACTION ISOLATION LEVEL REPEATABLE READ, READ WRITE;
DROP FUNCTION f1;
SELECT @@autocommit;
CREATE TABLE t1(a INT) engine=InnoDB;
SET TRANSACTION READ ONLY;
SELECT * FROM t1;
INSERT INTO t1 VALUES (1);
DROP TABLE t1;
