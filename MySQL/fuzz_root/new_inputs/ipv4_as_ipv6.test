CREATE USER IF NOT EXISTS 'root'@'127.0.0.1';
CREATE USER IF NOT EXISTS 'root'@'::1';
GRANT ALL ON *.* TO 'root'@'127.0.0.1', 'root'@'::1' WITH GRANT OPTION;
    let $os_version = `SELECT CONVERT(@@version_compile_os using latin1) NOT IN ("Win32","Win64","Windows")`;
  if ($os_version)  {    connect (slave_init_con,localhost,root,,test,$SLAVE_MYPORT,$SLAVE_MYSOCK);
  }  if (!$os_version)  {    connect (slave_init_con,localhost,root,,test,$SLAVE_MYPORT,$SLAVE_MYSOCK,PIPE);
  }  CREATE USER IF NOT EXISTS 'root'@'127.0.0.1';
  CREATE USER IF NOT EXISTS 'root'@'::1';
  GRANT ALL ON *.* TO 'root'@'127.0.0.1', 'root'@'::1';
  DROP USER 'root'@'::1';
DROP USER 'root'@'127.0.0.1';
    DROP USER 'root'@'127.0.0.1';
  DROP USER 'root'@'::1';
  RESET MASTER;
    DROP USER 'root'@'::1';
DROP USER 'root'@'127.0.0.1';
    DROP USER 'root'@'127.0.0.1';
  DROP USER 'root'@'::1';
  RESET MASTER;
    connect (checkcon123456789,::FFFF:127.0.0.1,root,,test);
skip wrong IP;
connection default;
disconnect checkcon123456789;
CREATE USER IF NOT EXISTS 'root'@'127.0.0.1';
CREATE USER IF NOT EXISTS 'root'@'::1';
GRANT ALL ON *.* TO 'root'@'127.0.0.1', 'root'@'::1' WITH GRANT OPTION;
    let $os_version = `SELECT CONVERT(@@version_compile_os using latin1) NOT IN ("Win32","Win64","Windows")`;
  if ($os_version)  {    connect (slave_init_con,localhost,root,,test,$SLAVE_MYPORT,$SLAVE_MYSOCK);
  }  if (!$os_version)  {    connect (slave_init_con,localhost,root,,test,$SLAVE_MYPORT,$SLAVE_MYSOCK,PIPE);
  }  CREATE USER IF NOT EXISTS 'root'@'127.0.0.1';
  CREATE USER IF NOT EXISTS 'root'@'::1';
  GRANT ALL ON *.* TO 'root'@'127.0.0.1', 'root'@'::1';
  eval CREATE USER testuser@'$IPv6' identified by '1234';
eval GRANT ALL ON test.* TO testuser@'$IPv6';
eval SHOW GRANTS FOR testuser@'$IPv6';
SELECT USER();
SELECT current_user();
SHOW PROCESSLIST;
connect (con1, $IPv6, root, , test, $MASTER_MYPORT);
connection default;
disconnect con1;
eval REVOKE ALL ON test.* FROM testuser@'$IPv6';
eval RENAME USER testuser@'$IPv6' to testuser1@'$IPv6';
eval SET PASSWORD FOR testuser1@'$IPv6' = '9876';
SELECT USER();
eval DROP USER testuser1@'$IPv6';
eval SET @nip= inet_aton('$IPv6');
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT INTO t1 VALUES (@nip,@nip,@nip,@nip,@nip,@nip);
SELECT inet_ntoa(c1) FROM t1;
SELECT inet_ntoa(CAST(c1 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c2) FROM t1;
SELECT inet_ntoa(CAST(c2 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c3) FROM t1;
SELECT inet_ntoa(CAST(c3 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c4) FROM t1;
SELECT inet_ntoa(CAST(c4 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c5) FROM t1;
SELECT inet_ntoa(CAST(c5 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c6) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT @nip;
SELECT inet_ntoa(@nip);
eval SET @nip6= inet6_aton('$IPv6');
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT IGNORE INTO t1 VALUES (@nip6,@nip6,@nip6,@nip6,@nip6,@nip6);
SELECT inet6_ntoa(c1) FROM t1;
SELECT inet6_ntoa(CAST(c1 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c2) FROM t1;
SELECT inet6_ntoa(CAST(c2 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c3) FROM t1;
SELECT inet6_ntoa(CAST(c3 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c4) FROM t1;
SELECT inet6_ntoa(CAST(c4 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c5) FROM t1;
SELECT inet6_ntoa(CAST(c5 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c6) FROM t1;
SELECT inet6_ntoa(CAST(c6 AS BINARY(16))) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT inet6_ntoa(@nip6);
eval CREATE USER testuser@'$IPv6' identified by '1234';
eval GRANT ALL ON test.* TO testuser@'$IPv6';
eval SHOW GRANTS FOR testuser@'$IPv6';
SELECT USER();
SELECT current_user();
SHOW PROCESSLIST;
connect (con1, $IPv6, root, , test, $MASTER_MYPORT);
connection default;
disconnect con1;
eval REVOKE ALL ON test.* FROM testuser@'$IPv6';
eval RENAME USER testuser@'$IPv6' to testuser1@'$IPv6';
eval SET PASSWORD FOR testuser1@'$IPv6' = '9876';
SELECT USER();
eval DROP USER testuser1@'$IPv6';
eval SET @nip= inet_aton('$IPv6');
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT INTO t1 VALUES (@nip,@nip,@nip,@nip,@nip,@nip);
SELECT inet_ntoa(c1) FROM t1;
SELECT inet_ntoa(CAST(c1 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c2) FROM t1;
SELECT inet_ntoa(CAST(c2 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c3) FROM t1;
SELECT inet_ntoa(CAST(c3 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c4) FROM t1;
SELECT inet_ntoa(CAST(c4 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c5) FROM t1;
SELECT inet_ntoa(CAST(c5 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c6) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT @nip;
SELECT inet_ntoa(@nip);
eval SET @nip6= inet6_aton('$IPv6');
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT IGNORE INTO t1 VALUES (@nip6,@nip6,@nip6,@nip6,@nip6,@nip6);
SELECT inet6_ntoa(c1) FROM t1;
SELECT inet6_ntoa(CAST(c1 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c2) FROM t1;
SELECT inet6_ntoa(CAST(c2 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c3) FROM t1;
SELECT inet6_ntoa(CAST(c3 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c4) FROM t1;
SELECT inet6_ntoa(CAST(c4 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c5) FROM t1;
SELECT inet6_ntoa(CAST(c5 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c6) FROM t1;
SELECT inet6_ntoa(CAST(c6 AS BINARY(16))) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT inet6_ntoa(@nip6);
eval CREATE USER testuser@'$IPv6' identified by '1234';
eval GRANT ALL ON test.* TO testuser@'$IPv6';
eval SHOW GRANTS FOR testuser@'$IPv6';
SELECT USER();
SELECT current_user();
SHOW PROCESSLIST;
connect (con1, $IPv6, root, , test, $MASTER_MYPORT);
connection default;
disconnect con1;
eval REVOKE ALL ON test.* FROM testuser@'$IPv6';
eval RENAME USER testuser@'$IPv6' to testuser1@'$IPv6';
eval SET PASSWORD FOR testuser1@'$IPv6' = '9876';
SELECT USER();
eval DROP USER testuser1@'$IPv6';
eval SET @nip= inet_aton('$IPv6');
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT INTO t1 VALUES (@nip,@nip,@nip,@nip,@nip,@nip);
SELECT inet_ntoa(c1) FROM t1;
SELECT inet_ntoa(CAST(c1 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c2) FROM t1;
SELECT inet_ntoa(CAST(c2 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c3) FROM t1;
SELECT inet_ntoa(CAST(c3 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c4) FROM t1;
SELECT inet_ntoa(CAST(c4 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c5) FROM t1;
SELECT inet_ntoa(CAST(c5 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c6) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT @nip;
SELECT inet_ntoa(@nip);
eval SET @nip6= inet6_aton('$IPv6');
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT IGNORE INTO t1 VALUES (@nip6,@nip6,@nip6,@nip6,@nip6,@nip6);
SELECT inet6_ntoa(c1) FROM t1;
SELECT inet6_ntoa(CAST(c1 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c2) FROM t1;
SELECT inet6_ntoa(CAST(c2 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c3) FROM t1;
SELECT inet6_ntoa(CAST(c3 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c4) FROM t1;
SELECT inet6_ntoa(CAST(c4 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c5) FROM t1;
SELECT inet6_ntoa(CAST(c5 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c6) FROM t1;
SELECT inet6_ntoa(CAST(c6 AS BINARY(16))) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT inet6_ntoa(@nip6);
eval CREATE USER testuser@'$IPv6' identified by '1234';
eval GRANT ALL ON test.* TO testuser@'$IPv6';
eval SHOW GRANTS FOR testuser@'$IPv6';
SELECT USER();
SELECT current_user();
SHOW PROCESSLIST;
connect (con1, $IPv6, root, , test, $MASTER_MYPORT);
connection default;
disconnect con1;
eval REVOKE ALL ON test.* FROM testuser@'$IPv6';
eval RENAME USER testuser@'$IPv6' to testuser1@'$IPv6';
eval SET PASSWORD FOR testuser1@'$IPv6' = '9876';
SELECT USER();
eval DROP USER testuser1@'$IPv6';
eval SET @nip= inet_aton('$IPv6');
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT INTO t1 VALUES (@nip,@nip,@nip,@nip,@nip,@nip);
SELECT inet_ntoa(c1) FROM t1;
SELECT inet_ntoa(CAST(c1 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c2) FROM t1;
SELECT inet_ntoa(CAST(c2 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c3) FROM t1;
SELECT inet_ntoa(CAST(c3 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c4) FROM t1;
SELECT inet_ntoa(CAST(c4 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c5) FROM t1;
SELECT inet_ntoa(CAST(c5 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c6) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT @nip;
SELECT inet_ntoa(@nip);
eval SET @nip6= inet6_aton('$IPv6');
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT IGNORE INTO t1 VALUES (@nip6,@nip6,@nip6,@nip6,@nip6,@nip6);
SELECT inet6_ntoa(c1) FROM t1;
SELECT inet6_ntoa(CAST(c1 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c2) FROM t1;
SELECT inet6_ntoa(CAST(c2 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c3) FROM t1;
SELECT inet6_ntoa(CAST(c3 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c4) FROM t1;
SELECT inet6_ntoa(CAST(c4 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c5) FROM t1;
SELECT inet6_ntoa(CAST(c5 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c6) FROM t1;
SELECT inet6_ntoa(CAST(c6 AS BINARY(16))) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT inet6_ntoa(@nip6);
eval CREATE USER testuser@'$IPv6' identified by '1234';
eval GRANT ALL ON test.* TO testuser@'$IPv6';
eval SHOW GRANTS FOR testuser@'$IPv6';
SELECT USER();
SELECT current_user();
SHOW PROCESSLIST;
connect (con1, $IPv6, root, , test, $MASTER_MYPORT);
connection default;
disconnect con1;
eval REVOKE ALL ON test.* FROM testuser@'$IPv6';
eval RENAME USER testuser@'$IPv6' to testuser1@'$IPv6';
eval SET PASSWORD FOR testuser1@'$IPv6' = '9876';
SELECT USER();
eval DROP USER testuser1@'$IPv6';
eval SET @nip= inet_aton('$IPv6');
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT INTO t1 VALUES (@nip,@nip,@nip,@nip,@nip,@nip);
SELECT inet_ntoa(c1) FROM t1;
SELECT inet_ntoa(CAST(c1 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c2) FROM t1;
SELECT inet_ntoa(CAST(c2 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c3) FROM t1;
SELECT inet_ntoa(CAST(c3 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c4) FROM t1;
SELECT inet_ntoa(CAST(c4 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c5) FROM t1;
SELECT inet_ntoa(CAST(c5 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c6) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT @nip;
SELECT inet_ntoa(@nip);
eval SET @nip6= inet6_aton('$IPv6');
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT IGNORE INTO t1 VALUES (@nip6,@nip6,@nip6,@nip6,@nip6,@nip6);
SELECT inet6_ntoa(c1) FROM t1;
SELECT inet6_ntoa(CAST(c1 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c2) FROM t1;
SELECT inet6_ntoa(CAST(c2 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c3) FROM t1;
SELECT inet6_ntoa(CAST(c3 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c4) FROM t1;
SELECT inet6_ntoa(CAST(c4 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c5) FROM t1;
SELECT inet6_ntoa(CAST(c5 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c6) FROM t1;
SELECT inet6_ntoa(CAST(c6 AS BINARY(16))) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT inet6_ntoa(@nip6);
eval SET @nip= inet_aton('$IPv6');
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT INTO t1 VALUES (@nip,@nip,@nip,@nip,@nip,@nip);
SELECT inet_ntoa(c1) FROM t1;
SELECT inet_ntoa(CAST(c1 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c2) FROM t1;
SELECT inet_ntoa(CAST(c2 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c3) FROM t1;
SELECT inet_ntoa(CAST(c3 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c4) FROM t1;
SELECT inet_ntoa(CAST(c4 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c5) FROM t1;
SELECT inet_ntoa(CAST(c5 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c6) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT @nip;
SELECT inet_ntoa(@nip);
eval SET @nip6= inet6_aton('$IPv6');
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT IGNORE INTO t1 VALUES (@nip6,@nip6,@nip6,@nip6,@nip6,@nip6);
SELECT inet6_ntoa(c1) FROM t1;
SELECT inet6_ntoa(CAST(c1 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c2) FROM t1;
SELECT inet6_ntoa(CAST(c2 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c3) FROM t1;
SELECT inet6_ntoa(CAST(c3 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c4) FROM t1;
SELECT inet6_ntoa(CAST(c4 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c5) FROM t1;
SELECT inet6_ntoa(CAST(c5 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c6) FROM t1;
SELECT inet6_ntoa(CAST(c6 AS BINARY(16))) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT inet6_ntoa(@nip6);
eval CREATE USER testuser@'$IPv6' identified by '1234';
eval GRANT ALL ON test.* TO testuser@'$IPv6';
eval SHOW GRANTS FOR testuser@'$IPv6';
SELECT USER();
SELECT current_user();
SHOW PROCESSLIST;
connect (con1, $IPv6, root, , test, $MASTER_MYPORT);
connection default;
disconnect con1;
eval REVOKE ALL ON test.* FROM testuser@'$IPv6';
eval RENAME USER testuser@'$IPv6' to testuser1@'$IPv6';
eval SET PASSWORD FOR testuser1@'$IPv6' = '9876';
SELECT USER();
eval DROP USER testuser1@'$IPv6';
eval SET @nip= inet_aton('$IPv6');
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT INTO t1 VALUES (@nip,@nip,@nip,@nip,@nip,@nip);
SELECT inet_ntoa(c1) FROM t1;
SELECT inet_ntoa(CAST(c1 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c2) FROM t1;
SELECT inet_ntoa(CAST(c2 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c3) FROM t1;
SELECT inet_ntoa(CAST(c3 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c4) FROM t1;
SELECT inet_ntoa(CAST(c4 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c5) FROM t1;
SELECT inet_ntoa(CAST(c5 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c6) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT @nip;
SELECT inet_ntoa(@nip);
eval SET @nip6= inet6_aton('$IPv6');
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT IGNORE INTO t1 VALUES (@nip6,@nip6,@nip6,@nip6,@nip6,@nip6);
SELECT inet6_ntoa(c1) FROM t1;
SELECT inet6_ntoa(CAST(c1 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c2) FROM t1;
SELECT inet6_ntoa(CAST(c2 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c3) FROM t1;
SELECT inet6_ntoa(CAST(c3 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c4) FROM t1;
SELECT inet6_ntoa(CAST(c4 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c5) FROM t1;
SELECT inet6_ntoa(CAST(c5 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c6) FROM t1;
SELECT inet6_ntoa(CAST(c6 AS BINARY(16))) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT inet6_ntoa(@nip6);
DROP USER 'root'@'::1';
DROP USER 'root'@'127.0.0.1';
    DROP USER 'root'@'127.0.0.1';
  DROP USER 'root'@'::1';
  RESET MASTER;
       let $wait_counter= `SELECT $wait_timeout * 10`;
while ($wait_counter)   let $current_sessions= query_get_value(SHOW GLOBAL STATUS LIKE 'Threads_connected', Value, 1);
   let $success= `SELECT $current_sessions <= $count_sessions`;
   if ($success)   {      let $wait_counter= 0;
   }   if (!$success)   {      sleep 0.1;
      dec $wait_counter;
   }         SHOW PROCESSLIST;
   echo =============Test of '127.0.0.1' (IPv4) ===========================;
echo =============Test of '0:0:0:0:0:FFFF:127.0.0.1' ===================;
echo =============Test of '0000:0000:0000:0000:0000:FFFF:127.0.0.1' ====;
echo =============Test of '0:0000:0000:0:0000:FFFF:127.0.0.1' ====;
echo =============Test of '0::0000:FFFF:127.0.0.1' ====;
echo =============Test of '0:0:0:0:0:FFFF:127.0.0.1/96' ================;
echo =============Test of '::FFFF:127.0.0.1' ===========================;
echo =============Test of '::FFFF:127.0.0.1/96' ========================;
echo =============Test of '::1' ========================;
connect (con1, $IPv6, root, , test, $MASTER_MYPORT,);
CREATE USER IF NOT EXISTS 'root'@'127.0.0.1';
CREATE USER IF NOT EXISTS 'root'@'::1';
GRANT ALL ON *.* TO 'root'@'127.0.0.1', 'root'@'::1' WITH GRANT OPTION;
    let $os_version = `SELECT CONVERT(@@version_compile_os using latin1) NOT IN ("Win32","Win64","Windows")`;
  if ($os_version)  {    connect (slave_init_con,localhost,root,,test,$SLAVE_MYPORT,$SLAVE_MYSOCK);
  }  if (!$os_version)  {    connect (slave_init_con,localhost,root,,test,$SLAVE_MYPORT,$SLAVE_MYSOCK,PIPE);
  }  CREATE USER IF NOT EXISTS 'root'@'127.0.0.1';
  CREATE USER IF NOT EXISTS 'root'@'::1';
  GRANT ALL ON *.* TO 'root'@'127.0.0.1', 'root'@'::1';
  DROP USER 'root'@'::1';
DROP USER 'root'@'127.0.0.1';
    DROP USER 'root'@'127.0.0.1';
  DROP USER 'root'@'::1';
  RESET MASTER;
    DROP USER 'root'@'::1';
DROP USER 'root'@'127.0.0.1';
    DROP USER 'root'@'127.0.0.1';
  DROP USER 'root'@'::1';
  RESET MASTER;
    connect (checkcon123456789,::FFFF:127.0.0.1,root,,test);
skip wrong IP;
connection default;
disconnect checkcon123456789;
CREATE USER IF NOT EXISTS 'root'@'127.0.0.1';
CREATE USER IF NOT EXISTS 'root'@'::1';
GRANT ALL ON *.* TO 'root'@'127.0.0.1', 'root'@'::1' WITH GRANT OPTION;
    let $os_version = `SELECT CONVERT(@@version_compile_os using latin1) NOT IN ("Win32","Win64","Windows")`;
  if ($os_version)  {    connect (slave_init_con,localhost,root,,test,$SLAVE_MYPORT,$SLAVE_MYSOCK);
  }  if (!$os_version)  {    connect (slave_init_con,localhost,root,,test,$SLAVE_MYPORT,$SLAVE_MYSOCK,PIPE);
  }  CREATE USER IF NOT EXISTS 'root'@'127.0.0.1';
  CREATE USER IF NOT EXISTS 'root'@'::1';
  GRANT ALL ON *.* TO 'root'@'127.0.0.1', 'root'@'::1';
  eval CREATE USER testuser@'$IPv6' identified by '1234';
eval GRANT ALL ON test.* TO testuser@'$IPv6';
eval SHOW GRANTS FOR testuser@'$IPv6';
SELECT USER();
SELECT current_user();
SHOW PROCESSLIST;
connect (con1, $IPv6, root, , test, $MASTER_MYPORT);
connection default;
disconnect con1;
eval REVOKE ALL ON test.* FROM testuser@'$IPv6';
eval RENAME USER testuser@'$IPv6' to testuser1@'$IPv6';
eval SET PASSWORD FOR testuser1@'$IPv6' = '9876';
SELECT USER();
eval DROP USER testuser1@'$IPv6';
eval SET @nip= inet_aton('$IPv6');
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT INTO t1 VALUES (@nip,@nip,@nip,@nip,@nip,@nip);
SELECT inet_ntoa(c1) FROM t1;
SELECT inet_ntoa(CAST(c1 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c2) FROM t1;
SELECT inet_ntoa(CAST(c2 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c3) FROM t1;
SELECT inet_ntoa(CAST(c3 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c4) FROM t1;
SELECT inet_ntoa(CAST(c4 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c5) FROM t1;
SELECT inet_ntoa(CAST(c5 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c6) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT @nip;
SELECT inet_ntoa(@nip);
eval SET @nip6= inet6_aton('$IPv6');
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT IGNORE INTO t1 VALUES (@nip6,@nip6,@nip6,@nip6,@nip6,@nip6);
SELECT inet6_ntoa(c1) FROM t1;
SELECT inet6_ntoa(CAST(c1 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c2) FROM t1;
SELECT inet6_ntoa(CAST(c2 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c3) FROM t1;
SELECT inet6_ntoa(CAST(c3 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c4) FROM t1;
SELECT inet6_ntoa(CAST(c4 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c5) FROM t1;
SELECT inet6_ntoa(CAST(c5 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c6) FROM t1;
SELECT inet6_ntoa(CAST(c6 AS BINARY(16))) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT inet6_ntoa(@nip6);
eval CREATE USER testuser@'$IPv6' identified by '1234';
eval GRANT ALL ON test.* TO testuser@'$IPv6';
eval SHOW GRANTS FOR testuser@'$IPv6';
SELECT USER();
SELECT current_user();
SHOW PROCESSLIST;
connect (con1, $IPv6, root, , test, $MASTER_MYPORT);
connection default;
disconnect con1;
eval REVOKE ALL ON test.* FROM testuser@'$IPv6';
eval RENAME USER testuser@'$IPv6' to testuser1@'$IPv6';
eval SET PASSWORD FOR testuser1@'$IPv6' = '9876';
SELECT USER();
eval DROP USER testuser1@'$IPv6';
eval SET @nip= inet_aton('$IPv6');
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT INTO t1 VALUES (@nip,@nip,@nip,@nip,@nip,@nip);
SELECT inet_ntoa(c1) FROM t1;
SELECT inet_ntoa(CAST(c1 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c2) FROM t1;
SELECT inet_ntoa(CAST(c2 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c3) FROM t1;
SELECT inet_ntoa(CAST(c3 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c4) FROM t1;
SELECT inet_ntoa(CAST(c4 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c5) FROM t1;
SELECT inet_ntoa(CAST(c5 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c6) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT @nip;
SELECT inet_ntoa(@nip);
eval SET @nip6= inet6_aton('$IPv6');
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT IGNORE INTO t1 VALUES (@nip6,@nip6,@nip6,@nip6,@nip6,@nip6);
SELECT inet6_ntoa(c1) FROM t1;
SELECT inet6_ntoa(CAST(c1 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c2) FROM t1;
SELECT inet6_ntoa(CAST(c2 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c3) FROM t1;
SELECT inet6_ntoa(CAST(c3 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c4) FROM t1;
SELECT inet6_ntoa(CAST(c4 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c5) FROM t1;
SELECT inet6_ntoa(CAST(c5 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c6) FROM t1;
SELECT inet6_ntoa(CAST(c6 AS BINARY(16))) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT inet6_ntoa(@nip6);
eval CREATE USER testuser@'$IPv6' identified by '1234';
eval GRANT ALL ON test.* TO testuser@'$IPv6';
eval SHOW GRANTS FOR testuser@'$IPv6';
SELECT USER();
SELECT current_user();
SHOW PROCESSLIST;
connect (con1, $IPv6, root, , test, $MASTER_MYPORT);
connection default;
disconnect con1;
eval REVOKE ALL ON test.* FROM testuser@'$IPv6';
eval RENAME USER testuser@'$IPv6' to testuser1@'$IPv6';
eval SET PASSWORD FOR testuser1@'$IPv6' = '9876';
SELECT USER();
eval DROP USER testuser1@'$IPv6';
eval SET @nip= inet_aton('$IPv6');
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT INTO t1 VALUES (@nip,@nip,@nip,@nip,@nip,@nip);
SELECT inet_ntoa(c1) FROM t1;
SELECT inet_ntoa(CAST(c1 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c2) FROM t1;
SELECT inet_ntoa(CAST(c2 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c3) FROM t1;
SELECT inet_ntoa(CAST(c3 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c4) FROM t1;
SELECT inet_ntoa(CAST(c4 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c5) FROM t1;
SELECT inet_ntoa(CAST(c5 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c6) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT @nip;
SELECT inet_ntoa(@nip);
eval SET @nip6= inet6_aton('$IPv6');
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT IGNORE INTO t1 VALUES (@nip6,@nip6,@nip6,@nip6,@nip6,@nip6);
SELECT inet6_ntoa(c1) FROM t1;
SELECT inet6_ntoa(CAST(c1 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c2) FROM t1;
SELECT inet6_ntoa(CAST(c2 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c3) FROM t1;
SELECT inet6_ntoa(CAST(c3 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c4) FROM t1;
SELECT inet6_ntoa(CAST(c4 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c5) FROM t1;
SELECT inet6_ntoa(CAST(c5 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c6) FROM t1;
SELECT inet6_ntoa(CAST(c6 AS BINARY(16))) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT inet6_ntoa(@nip6);
eval CREATE USER testuser@'$IPv6' identified by '1234';
eval GRANT ALL ON test.* TO testuser@'$IPv6';
eval SHOW GRANTS FOR testuser@'$IPv6';
SELECT USER();
SELECT current_user();
SHOW PROCESSLIST;
connect (con1, $IPv6, root, , test, $MASTER_MYPORT);
connection default;
disconnect con1;
eval REVOKE ALL ON test.* FROM testuser@'$IPv6';
eval RENAME USER testuser@'$IPv6' to testuser1@'$IPv6';
eval SET PASSWORD FOR testuser1@'$IPv6' = '9876';
SELECT USER();
eval DROP USER testuser1@'$IPv6';
eval SET @nip= inet_aton('$IPv6');
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT INTO t1 VALUES (@nip,@nip,@nip,@nip,@nip,@nip);
SELECT inet_ntoa(c1) FROM t1;
SELECT inet_ntoa(CAST(c1 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c2) FROM t1;
SELECT inet_ntoa(CAST(c2 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c3) FROM t1;
SELECT inet_ntoa(CAST(c3 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c4) FROM t1;
SELECT inet_ntoa(CAST(c4 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c5) FROM t1;
SELECT inet_ntoa(CAST(c5 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c6) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT @nip;
SELECT inet_ntoa(@nip);
eval SET @nip6= inet6_aton('$IPv6');
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT IGNORE INTO t1 VALUES (@nip6,@nip6,@nip6,@nip6,@nip6,@nip6);
SELECT inet6_ntoa(c1) FROM t1;
SELECT inet6_ntoa(CAST(c1 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c2) FROM t1;
SELECT inet6_ntoa(CAST(c2 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c3) FROM t1;
SELECT inet6_ntoa(CAST(c3 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c4) FROM t1;
SELECT inet6_ntoa(CAST(c4 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c5) FROM t1;
SELECT inet6_ntoa(CAST(c5 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c6) FROM t1;
SELECT inet6_ntoa(CAST(c6 AS BINARY(16))) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT inet6_ntoa(@nip6);
eval CREATE USER testuser@'$IPv6' identified by '1234';
eval GRANT ALL ON test.* TO testuser@'$IPv6';
eval SHOW GRANTS FOR testuser@'$IPv6';
SELECT USER();
SELECT current_user();
SHOW PROCESSLIST;
connect (con1, $IPv6, root, , test, $MASTER_MYPORT);
connection default;
disconnect con1;
eval REVOKE ALL ON test.* FROM testuser@'$IPv6';
eval RENAME USER testuser@'$IPv6' to testuser1@'$IPv6';
eval SET PASSWORD FOR testuser1@'$IPv6' = '9876';
SELECT USER();
eval DROP USER testuser1@'$IPv6';
eval SET @nip= inet_aton('$IPv6');
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT INTO t1 VALUES (@nip,@nip,@nip,@nip,@nip,@nip);
SELECT inet_ntoa(c1) FROM t1;
SELECT inet_ntoa(CAST(c1 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c2) FROM t1;
SELECT inet_ntoa(CAST(c2 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c3) FROM t1;
SELECT inet_ntoa(CAST(c3 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c4) FROM t1;
SELECT inet_ntoa(CAST(c4 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c5) FROM t1;
SELECT inet_ntoa(CAST(c5 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c6) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT @nip;
SELECT inet_ntoa(@nip);
eval SET @nip6= inet6_aton('$IPv6');
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT IGNORE INTO t1 VALUES (@nip6,@nip6,@nip6,@nip6,@nip6,@nip6);
SELECT inet6_ntoa(c1) FROM t1;
SELECT inet6_ntoa(CAST(c1 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c2) FROM t1;
SELECT inet6_ntoa(CAST(c2 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c3) FROM t1;
SELECT inet6_ntoa(CAST(c3 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c4) FROM t1;
SELECT inet6_ntoa(CAST(c4 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c5) FROM t1;
SELECT inet6_ntoa(CAST(c5 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c6) FROM t1;
SELECT inet6_ntoa(CAST(c6 AS BINARY(16))) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT inet6_ntoa(@nip6);
eval SET @nip= inet_aton('$IPv6');
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT INTO t1 VALUES (@nip,@nip,@nip,@nip,@nip,@nip);
SELECT inet_ntoa(c1) FROM t1;
SELECT inet_ntoa(CAST(c1 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c2) FROM t1;
SELECT inet_ntoa(CAST(c2 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c3) FROM t1;
SELECT inet_ntoa(CAST(c3 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c4) FROM t1;
SELECT inet_ntoa(CAST(c4 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c5) FROM t1;
SELECT inet_ntoa(CAST(c5 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c6) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT @nip;
SELECT inet_ntoa(@nip);
eval SET @nip6= inet6_aton('$IPv6');
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT IGNORE INTO t1 VALUES (@nip6,@nip6,@nip6,@nip6,@nip6,@nip6);
SELECT inet6_ntoa(c1) FROM t1;
SELECT inet6_ntoa(CAST(c1 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c2) FROM t1;
SELECT inet6_ntoa(CAST(c2 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c3) FROM t1;
SELECT inet6_ntoa(CAST(c3 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c4) FROM t1;
SELECT inet6_ntoa(CAST(c4 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c5) FROM t1;
SELECT inet6_ntoa(CAST(c5 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c6) FROM t1;
SELECT inet6_ntoa(CAST(c6 AS BINARY(16))) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT inet6_ntoa(@nip6);
eval CREATE USER testuser@'$IPv6' identified by '1234';
eval GRANT ALL ON test.* TO testuser@'$IPv6';
eval SHOW GRANTS FOR testuser@'$IPv6';
SELECT USER();
SELECT current_user();
SHOW PROCESSLIST;
connect (con1, $IPv6, root, , test, $MASTER_MYPORT);
connection default;
disconnect con1;
eval REVOKE ALL ON test.* FROM testuser@'$IPv6';
eval RENAME USER testuser@'$IPv6' to testuser1@'$IPv6';
eval SET PASSWORD FOR testuser1@'$IPv6' = '9876';
SELECT USER();
eval DROP USER testuser1@'$IPv6';
eval SET @nip= inet_aton('$IPv6');
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT INTO t1 VALUES (@nip,@nip,@nip,@nip,@nip,@nip);
SELECT inet_ntoa(c1) FROM t1;
SELECT inet_ntoa(CAST(c1 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c2) FROM t1;
SELECT inet_ntoa(CAST(c2 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c3) FROM t1;
SELECT inet_ntoa(CAST(c3 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c4) FROM t1;
SELECT inet_ntoa(CAST(c4 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c5) FROM t1;
SELECT inet_ntoa(CAST(c5 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c6) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT @nip;
SELECT inet_ntoa(@nip);
eval SET @nip6= inet6_aton('$IPv6');
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT IGNORE INTO t1 VALUES (@nip6,@nip6,@nip6,@nip6,@nip6,@nip6);
SELECT inet6_ntoa(c1) FROM t1;
SELECT inet6_ntoa(CAST(c1 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c2) FROM t1;
SELECT inet6_ntoa(CAST(c2 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c3) FROM t1;
SELECT inet6_ntoa(CAST(c3 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c4) FROM t1;
SELECT inet6_ntoa(CAST(c4 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c5) FROM t1;
SELECT inet6_ntoa(CAST(c5 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c6) FROM t1;
SELECT inet6_ntoa(CAST(c6 AS BINARY(16))) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT inet6_ntoa(@nip6);
DROP USER 'root'@'::1';
DROP USER 'root'@'127.0.0.1';
    DROP USER 'root'@'127.0.0.1';
  DROP USER 'root'@'::1';
  RESET MASTER;
       let $wait_counter= `SELECT $wait_timeout * 10`;
while ($wait_counter)   let $current_sessions= query_get_value(SHOW GLOBAL STATUS LIKE 'Threads_connected', Value, 1);
   let $success= `SELECT $current_sessions <= $count_sessions`;
   if ($success)   {      let $wait_counter= 0;
   }   if (!$success)   {      sleep 0.1;
      dec $wait_counter;
   }         SHOW PROCESSLIST;
   echo =============Test of '127.0.0.1' (IPv4) ===========================;
echo =============Test of '0:0:0:0:0:FFFF:127.0.0.1' ===================;
echo =============Test of '0000:0000:0000:0000:0000:FFFF:127.0.0.1' ====;
echo =============Test of '0:0000:0000:0:0000:FFFF:127.0.0.1' ====;
echo =============Test of '0::0000:FFFF:127.0.0.1' ====;
echo =============Test of '0:0:0:0:0:FFFF:127.0.0.1/96' ================;
echo =============Test of '::FFFF:127.0.0.1' ===========================;
echo =============Test of '::FFFF:127.0.0.1/96' ========================;
echo =============Test of '::1' ========================;
connect (con1, $IPv6, root, , test, $MASTER_MYPORT,);
CREATE USER IF NOT EXISTS 'root'@'127.0.0.1';
CREATE USER IF NOT EXISTS 'root'@'::1';
GRANT ALL ON *.* TO 'root'@'127.0.0.1', 'root'@'::1' WITH GRANT OPTION;
    let $os_version = `SELECT CONVERT(@@version_compile_os using latin1) NOT IN ("Win32","Win64","Windows")`;
  if ($os_version)  {    connect (slave_init_con,localhost,root,,test,$SLAVE_MYPORT,$SLAVE_MYSOCK);
  }  if (!$os_version)  {    connect (slave_init_con,localhost,root,,test,$SLAVE_MYPORT,$SLAVE_MYSOCK,PIPE);
  }  CREATE USER IF NOT EXISTS 'root'@'127.0.0.1';
  CREATE USER IF NOT EXISTS 'root'@'::1';
  GRANT ALL ON *.* TO 'root'@'127.0.0.1', 'root'@'::1';
  DROP USER 'root'@'::1';
DROP USER 'root'@'127.0.0.1';
    DROP USER 'root'@'127.0.0.1';
  DROP USER 'root'@'::1';
  RESET MASTER;
    DROP USER 'root'@'::1';
DROP USER 'root'@'127.0.0.1';
    DROP USER 'root'@'127.0.0.1';
  DROP USER 'root'@'::1';
  RESET MASTER;
    connect (checkcon123456789,::FFFF:127.0.0.1,root,,test);
skip wrong IP;
connection default;
disconnect checkcon123456789;
CREATE USER IF NOT EXISTS 'root'@'127.0.0.1';
CREATE USER IF NOT EXISTS 'root'@'::1';
GRANT ALL ON *.* TO 'root'@'127.0.0.1', 'root'@'::1' WITH GRANT OPTION;
    let $os_version = `SELECT CONVERT(@@version_compile_os using latin1) NOT IN ("Win32","Win64","Windows")`;
  if ($os_version)  {    connect (slave_init_con,localhost,root,,test,$SLAVE_MYPORT,$SLAVE_MYSOCK);
  }  if (!$os_version)  {    connect (slave_init_con,localhost,root,,test,$SLAVE_MYPORT,$SLAVE_MYSOCK,PIPE);
  }  CREATE USER IF NOT EXISTS 'root'@'127.0.0.1';
  CREATE USER IF NOT EXISTS 'root'@'::1';
  GRANT ALL ON *.* TO 'root'@'127.0.0.1', 'root'@'::1';
  eval CREATE USER testuser@'$IPv6' identified by '1234';
eval GRANT ALL ON test.* TO testuser@'$IPv6';
eval SHOW GRANTS FOR testuser@'$IPv6';
SELECT USER();
SELECT current_user();
SHOW PROCESSLIST;
connect (con1, $IPv6, root, , test, $MASTER_MYPORT);
connection default;
disconnect con1;
eval REVOKE ALL ON test.* FROM testuser@'$IPv6';
eval RENAME USER testuser@'$IPv6' to testuser1@'$IPv6';
eval SET PASSWORD FOR testuser1@'$IPv6' = '9876';
SELECT USER();
eval DROP USER testuser1@'$IPv6';
eval SET @nip= inet_aton('$IPv6');
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT INTO t1 VALUES (@nip,@nip,@nip,@nip,@nip,@nip);
SELECT inet_ntoa(c1) FROM t1;
SELECT inet_ntoa(CAST(c1 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c2) FROM t1;
SELECT inet_ntoa(CAST(c2 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c3) FROM t1;
SELECT inet_ntoa(CAST(c3 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c4) FROM t1;
SELECT inet_ntoa(CAST(c4 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c5) FROM t1;
SELECT inet_ntoa(CAST(c5 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c6) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT @nip;
SELECT inet_ntoa(@nip);
eval SET @nip6= inet6_aton('$IPv6');
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT IGNORE INTO t1 VALUES (@nip6,@nip6,@nip6,@nip6,@nip6,@nip6);
SELECT inet6_ntoa(c1) FROM t1;
SELECT inet6_ntoa(CAST(c1 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c2) FROM t1;
SELECT inet6_ntoa(CAST(c2 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c3) FROM t1;
SELECT inet6_ntoa(CAST(c3 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c4) FROM t1;
SELECT inet6_ntoa(CAST(c4 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c5) FROM t1;
SELECT inet6_ntoa(CAST(c5 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c6) FROM t1;
SELECT inet6_ntoa(CAST(c6 AS BINARY(16))) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT inet6_ntoa(@nip6);
eval CREATE USER testuser@'$IPv6' identified by '1234';
eval GRANT ALL ON test.* TO testuser@'$IPv6';
eval SHOW GRANTS FOR testuser@'$IPv6';
SELECT USER();
SELECT current_user();
SHOW PROCESSLIST;
connect (con1, $IPv6, root, , test, $MASTER_MYPORT);
connection default;
disconnect con1;
eval REVOKE ALL ON test.* FROM testuser@'$IPv6';
eval RENAME USER testuser@'$IPv6' to testuser1@'$IPv6';
eval SET PASSWORD FOR testuser1@'$IPv6' = '9876';
SELECT USER();
eval DROP USER testuser1@'$IPv6';
eval SET @nip= inet_aton('$IPv6');
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT INTO t1 VALUES (@nip,@nip,@nip,@nip,@nip,@nip);
SELECT inet_ntoa(c1) FROM t1;
SELECT inet_ntoa(CAST(c1 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c2) FROM t1;
SELECT inet_ntoa(CAST(c2 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c3) FROM t1;
SELECT inet_ntoa(CAST(c3 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c4) FROM t1;
SELECT inet_ntoa(CAST(c4 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c5) FROM t1;
SELECT inet_ntoa(CAST(c5 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c6) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT @nip;
SELECT inet_ntoa(@nip);
eval SET @nip6= inet6_aton('$IPv6');
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT IGNORE INTO t1 VALUES (@nip6,@nip6,@nip6,@nip6,@nip6,@nip6);
SELECT inet6_ntoa(c1) FROM t1;
SELECT inet6_ntoa(CAST(c1 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c2) FROM t1;
SELECT inet6_ntoa(CAST(c2 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c3) FROM t1;
SELECT inet6_ntoa(CAST(c3 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c4) FROM t1;
SELECT inet6_ntoa(CAST(c4 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c5) FROM t1;
SELECT inet6_ntoa(CAST(c5 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c6) FROM t1;
SELECT inet6_ntoa(CAST(c6 AS BINARY(16))) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT inet6_ntoa(@nip6);
eval CREATE USER testuser@'$IPv6' identified by '1234';
eval GRANT ALL ON test.* TO testuser@'$IPv6';
eval SHOW GRANTS FOR testuser@'$IPv6';
SELECT USER();
SELECT current_user();
SHOW PROCESSLIST;
connect (con1, $IPv6, root, , test, $MASTER_MYPORT);
connection default;
disconnect con1;
eval REVOKE ALL ON test.* FROM testuser@'$IPv6';
eval RENAME USER testuser@'$IPv6' to testuser1@'$IPv6';
eval SET PASSWORD FOR testuser1@'$IPv6' = '9876';
SELECT USER();
eval DROP USER testuser1@'$IPv6';
eval SET @nip= inet_aton('$IPv6');
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT INTO t1 VALUES (@nip,@nip,@nip,@nip,@nip,@nip);
SELECT inet_ntoa(c1) FROM t1;
SELECT inet_ntoa(CAST(c1 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c2) FROM t1;
SELECT inet_ntoa(CAST(c2 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c3) FROM t1;
SELECT inet_ntoa(CAST(c3 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c4) FROM t1;
SELECT inet_ntoa(CAST(c4 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c5) FROM t1;
SELECT inet_ntoa(CAST(c5 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c6) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT @nip;
SELECT inet_ntoa(@nip);
eval SET @nip6= inet6_aton('$IPv6');
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT IGNORE INTO t1 VALUES (@nip6,@nip6,@nip6,@nip6,@nip6,@nip6);
SELECT inet6_ntoa(c1) FROM t1;
SELECT inet6_ntoa(CAST(c1 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c2) FROM t1;
SELECT inet6_ntoa(CAST(c2 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c3) FROM t1;
SELECT inet6_ntoa(CAST(c3 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c4) FROM t1;
SELECT inet6_ntoa(CAST(c4 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c5) FROM t1;
SELECT inet6_ntoa(CAST(c5 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c6) FROM t1;
SELECT inet6_ntoa(CAST(c6 AS BINARY(16))) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT inet6_ntoa(@nip6);
eval CREATE USER testuser@'$IPv6' identified by '1234';
eval GRANT ALL ON test.* TO testuser@'$IPv6';
eval SHOW GRANTS FOR testuser@'$IPv6';
SELECT USER();
SELECT current_user();
SHOW PROCESSLIST;
connect (con1, $IPv6, root, , test, $MASTER_MYPORT);
connection default;
disconnect con1;
eval REVOKE ALL ON test.* FROM testuser@'$IPv6';
eval RENAME USER testuser@'$IPv6' to testuser1@'$IPv6';
eval SET PASSWORD FOR testuser1@'$IPv6' = '9876';
SELECT USER();
eval DROP USER testuser1@'$IPv6';
eval SET @nip= inet_aton('$IPv6');
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT INTO t1 VALUES (@nip,@nip,@nip,@nip,@nip,@nip);
SELECT inet_ntoa(c1) FROM t1;
SELECT inet_ntoa(CAST(c1 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c2) FROM t1;
SELECT inet_ntoa(CAST(c2 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c3) FROM t1;
SELECT inet_ntoa(CAST(c3 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c4) FROM t1;
SELECT inet_ntoa(CAST(c4 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c5) FROM t1;
SELECT inet_ntoa(CAST(c5 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c6) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT @nip;
SELECT inet_ntoa(@nip);
eval SET @nip6= inet6_aton('$IPv6');
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT IGNORE INTO t1 VALUES (@nip6,@nip6,@nip6,@nip6,@nip6,@nip6);
SELECT inet6_ntoa(c1) FROM t1;
SELECT inet6_ntoa(CAST(c1 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c2) FROM t1;
SELECT inet6_ntoa(CAST(c2 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c3) FROM t1;
SELECT inet6_ntoa(CAST(c3 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c4) FROM t1;
SELECT inet6_ntoa(CAST(c4 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c5) FROM t1;
SELECT inet6_ntoa(CAST(c5 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c6) FROM t1;
SELECT inet6_ntoa(CAST(c6 AS BINARY(16))) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT inet6_ntoa(@nip6);
eval CREATE USER testuser@'$IPv6' identified by '1234';
eval GRANT ALL ON test.* TO testuser@'$IPv6';
eval SHOW GRANTS FOR testuser@'$IPv6';
SELECT USER();
SELECT current_user();
SHOW PROCESSLIST;
connect (con1, $IPv6, root, , test, $MASTER_MYPORT);
connection default;
disconnect con1;
eval REVOKE ALL ON test.* FROM testuser@'$IPv6';
eval RENAME USER testuser@'$IPv6' to testuser1@'$IPv6';
eval SET PASSWORD FOR testuser1@'$IPv6' = '9876';
SELECT USER();
eval DROP USER testuser1@'$IPv6';
eval SET @nip= inet_aton('$IPv6');
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT INTO t1 VALUES (@nip,@nip,@nip,@nip,@nip,@nip);
SELECT inet_ntoa(c1) FROM t1;
SELECT inet_ntoa(CAST(c1 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c2) FROM t1;
SELECT inet_ntoa(CAST(c2 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c3) FROM t1;
SELECT inet_ntoa(CAST(c3 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c4) FROM t1;
SELECT inet_ntoa(CAST(c4 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c5) FROM t1;
SELECT inet_ntoa(CAST(c5 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c6) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT @nip;
SELECT inet_ntoa(@nip);
eval SET @nip6= inet6_aton('$IPv6');
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT IGNORE INTO t1 VALUES (@nip6,@nip6,@nip6,@nip6,@nip6,@nip6);
SELECT inet6_ntoa(c1) FROM t1;
SELECT inet6_ntoa(CAST(c1 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c2) FROM t1;
SELECT inet6_ntoa(CAST(c2 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c3) FROM t1;
SELECT inet6_ntoa(CAST(c3 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c4) FROM t1;
SELECT inet6_ntoa(CAST(c4 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c5) FROM t1;
SELECT inet6_ntoa(CAST(c5 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c6) FROM t1;
SELECT inet6_ntoa(CAST(c6 AS BINARY(16))) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT inet6_ntoa(@nip6);
eval SET @nip= inet_aton('$IPv6');
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT INTO t1 VALUES (@nip,@nip,@nip,@nip,@nip,@nip);
SELECT inet_ntoa(c1) FROM t1;
SELECT inet_ntoa(CAST(c1 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c2) FROM t1;
SELECT inet_ntoa(CAST(c2 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c3) FROM t1;
SELECT inet_ntoa(CAST(c3 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c4) FROM t1;
SELECT inet_ntoa(CAST(c4 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c5) FROM t1;
SELECT inet_ntoa(CAST(c5 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c6) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT @nip;
SELECT inet_ntoa(@nip);
eval SET @nip6= inet6_aton('$IPv6');
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT IGNORE INTO t1 VALUES (@nip6,@nip6,@nip6,@nip6,@nip6,@nip6);
SELECT inet6_ntoa(c1) FROM t1;
SELECT inet6_ntoa(CAST(c1 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c2) FROM t1;
SELECT inet6_ntoa(CAST(c2 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c3) FROM t1;
SELECT inet6_ntoa(CAST(c3 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c4) FROM t1;
SELECT inet6_ntoa(CAST(c4 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c5) FROM t1;
SELECT inet6_ntoa(CAST(c5 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c6) FROM t1;
SELECT inet6_ntoa(CAST(c6 AS BINARY(16))) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT inet6_ntoa(@nip6);
eval CREATE USER testuser@'$IPv6' identified by '1234';
eval GRANT ALL ON test.* TO testuser@'$IPv6';
eval SHOW GRANTS FOR testuser@'$IPv6';
SELECT USER();
SELECT current_user();
SHOW PROCESSLIST;
connect (con1, $IPv6, root, , test, $MASTER_MYPORT);
connection default;
disconnect con1;
eval REVOKE ALL ON test.* FROM testuser@'$IPv6';
eval RENAME USER testuser@'$IPv6' to testuser1@'$IPv6';
eval SET PASSWORD FOR testuser1@'$IPv6' = '9876';
SELECT USER();
eval DROP USER testuser1@'$IPv6';
eval SET @nip= inet_aton('$IPv6');
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT INTO t1 VALUES (@nip,@nip,@nip,@nip,@nip,@nip);
SELECT inet_ntoa(c1) FROM t1;
SELECT inet_ntoa(CAST(c1 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c2) FROM t1;
SELECT inet_ntoa(CAST(c2 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c3) FROM t1;
SELECT inet_ntoa(CAST(c3 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c4) FROM t1;
SELECT inet_ntoa(CAST(c4 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c5) FROM t1;
SELECT inet_ntoa(CAST(c5 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c6) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT @nip;
SELECT inet_ntoa(@nip);
eval SET @nip6= inet6_aton('$IPv6');
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT IGNORE INTO t1 VALUES (@nip6,@nip6,@nip6,@nip6,@nip6,@nip6);
SELECT inet6_ntoa(c1) FROM t1;
SELECT inet6_ntoa(CAST(c1 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c2) FROM t1;
SELECT inet6_ntoa(CAST(c2 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c3) FROM t1;
SELECT inet6_ntoa(CAST(c3 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c4) FROM t1;
SELECT inet6_ntoa(CAST(c4 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c5) FROM t1;
SELECT inet6_ntoa(CAST(c5 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c6) FROM t1;
SELECT inet6_ntoa(CAST(c6 AS BINARY(16))) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT inet6_ntoa(@nip6);
DROP USER 'root'@'::1';
DROP USER 'root'@'127.0.0.1';
    DROP USER 'root'@'127.0.0.1';
  DROP USER 'root'@'::1';
  RESET MASTER;
       let $wait_counter= `SELECT $wait_timeout * 10`;
while ($wait_counter)   let $current_sessions= query_get_value(SHOW GLOBAL STATUS LIKE 'Threads_connected', Value, 1);
   let $success= `SELECT $current_sessions <= $count_sessions`;
   if ($success)   {      let $wait_counter= 0;
   }   if (!$success)   {      sleep 0.1;
      dec $wait_counter;
   }         SHOW PROCESSLIST;
   echo =============Test of '127.0.0.1' (IPv4) ===========================;
echo =============Test of '0:0:0:0:0:FFFF:127.0.0.1' ===================;
echo =============Test of '0000:0000:0000:0000:0000:FFFF:127.0.0.1' ====;
echo =============Test of '0:0000:0000:0:0000:FFFF:127.0.0.1' ====;
echo =============Test of '0::0000:FFFF:127.0.0.1' ====;
echo =============Test of '0:0:0:0:0:FFFF:127.0.0.1/96' ================;
echo =============Test of '::FFFF:127.0.0.1' ===========================;
echo =============Test of '::FFFF:127.0.0.1/96' ========================;
echo =============Test of '::1' ========================;
connect (con1, $IPv6, root, , test, $MASTER_MYPORT,);
CREATE USER IF NOT EXISTS 'root'@'127.0.0.1';
CREATE USER IF NOT EXISTS 'root'@'::1';
GRANT ALL ON *.* TO 'root'@'127.0.0.1', 'root'@'::1' WITH GRANT OPTION;
    let $os_version = `SELECT CONVERT(@@version_compile_os using latin1) NOT IN ("Win32","Win64","Windows")`;
  if ($os_version)  {    connect (slave_init_con,localhost,root,,test,$SLAVE_MYPORT,$SLAVE_MYSOCK);
  }  if (!$os_version)  {    connect (slave_init_con,localhost,root,,test,$SLAVE_MYPORT,$SLAVE_MYSOCK,PIPE);
  }  CREATE USER IF NOT EXISTS 'root'@'127.0.0.1';
  CREATE USER IF NOT EXISTS 'root'@'::1';
  GRANT ALL ON *.* TO 'root'@'127.0.0.1', 'root'@'::1';
  DROP USER 'root'@'::1';
DROP USER 'root'@'127.0.0.1';
    DROP USER 'root'@'127.0.0.1';
  DROP USER 'root'@'::1';
  RESET MASTER;
    DROP USER 'root'@'::1';
DROP USER 'root'@'127.0.0.1';
    DROP USER 'root'@'127.0.0.1';
  DROP USER 'root'@'::1';
  RESET MASTER;
    connect (checkcon123456789,::FFFF:127.0.0.1,root,,test);
skip wrong IP;
connection default;
disconnect checkcon123456789;
CREATE USER IF NOT EXISTS 'root'@'127.0.0.1';
CREATE USER IF NOT EXISTS 'root'@'::1';
GRANT ALL ON *.* TO 'root'@'127.0.0.1', 'root'@'::1' WITH GRANT OPTION;
    let $os_version = `SELECT CONVERT(@@version_compile_os using latin1) NOT IN ("Win32","Win64","Windows")`;
  if ($os_version)  {    connect (slave_init_con,localhost,root,,test,$SLAVE_MYPORT,$SLAVE_MYSOCK);
  }  if (!$os_version)  {    connect (slave_init_con,localhost,root,,test,$SLAVE_MYPORT,$SLAVE_MYSOCK,PIPE);
  }  CREATE USER IF NOT EXISTS 'root'@'127.0.0.1';
  CREATE USER IF NOT EXISTS 'root'@'::1';
  GRANT ALL ON *.* TO 'root'@'127.0.0.1', 'root'@'::1';
  eval CREATE USER testuser@'$IPv6' identified by '1234';
eval GRANT ALL ON test.* TO testuser@'$IPv6';
eval SHOW GRANTS FOR testuser@'$IPv6';
SELECT USER();
SELECT current_user();
SHOW PROCESSLIST;
connect (con1, $IPv6, root, , test, $MASTER_MYPORT);
connection default;
disconnect con1;
eval REVOKE ALL ON test.* FROM testuser@'$IPv6';
eval RENAME USER testuser@'$IPv6' to testuser1@'$IPv6';
eval SET PASSWORD FOR testuser1@'$IPv6' = '9876';
SELECT USER();
eval DROP USER testuser1@'$IPv6';
eval SET @nip= inet_aton('$IPv6');
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT INTO t1 VALUES (@nip,@nip,@nip,@nip,@nip,@nip);
SELECT inet_ntoa(c1) FROM t1;
SELECT inet_ntoa(CAST(c1 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c2) FROM t1;
SELECT inet_ntoa(CAST(c2 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c3) FROM t1;
SELECT inet_ntoa(CAST(c3 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c4) FROM t1;
SELECT inet_ntoa(CAST(c4 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c5) FROM t1;
SELECT inet_ntoa(CAST(c5 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c6) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT @nip;
SELECT inet_ntoa(@nip);
eval SET @nip6= inet6_aton('$IPv6');
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT IGNORE INTO t1 VALUES (@nip6,@nip6,@nip6,@nip6,@nip6,@nip6);
SELECT inet6_ntoa(c1) FROM t1;
SELECT inet6_ntoa(CAST(c1 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c2) FROM t1;
SELECT inet6_ntoa(CAST(c2 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c3) FROM t1;
SELECT inet6_ntoa(CAST(c3 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c4) FROM t1;
SELECT inet6_ntoa(CAST(c4 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c5) FROM t1;
SELECT inet6_ntoa(CAST(c5 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c6) FROM t1;
SELECT inet6_ntoa(CAST(c6 AS BINARY(16))) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT inet6_ntoa(@nip6);
eval CREATE USER testuser@'$IPv6' identified by '1234';
eval GRANT ALL ON test.* TO testuser@'$IPv6';
eval SHOW GRANTS FOR testuser@'$IPv6';
SELECT USER();
SELECT current_user();
SHOW PROCESSLIST;
connect (con1, $IPv6, root, , test, $MASTER_MYPORT);
connection default;
disconnect con1;
eval REVOKE ALL ON test.* FROM testuser@'$IPv6';
eval RENAME USER testuser@'$IPv6' to testuser1@'$IPv6';
eval SET PASSWORD FOR testuser1@'$IPv6' = '9876';
SELECT USER();
eval DROP USER testuser1@'$IPv6';
eval SET @nip= inet_aton('$IPv6');
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT INTO t1 VALUES (@nip,@nip,@nip,@nip,@nip,@nip);
SELECT inet_ntoa(c1) FROM t1;
SELECT inet_ntoa(CAST(c1 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c2) FROM t1;
SELECT inet_ntoa(CAST(c2 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c3) FROM t1;
SELECT inet_ntoa(CAST(c3 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c4) FROM t1;
SELECT inet_ntoa(CAST(c4 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c5) FROM t1;
SELECT inet_ntoa(CAST(c5 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c6) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT @nip;
SELECT inet_ntoa(@nip);
eval SET @nip6= inet6_aton('$IPv6');
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT IGNORE INTO t1 VALUES (@nip6,@nip6,@nip6,@nip6,@nip6,@nip6);
SELECT inet6_ntoa(c1) FROM t1;
SELECT inet6_ntoa(CAST(c1 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c2) FROM t1;
SELECT inet6_ntoa(CAST(c2 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c3) FROM t1;
SELECT inet6_ntoa(CAST(c3 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c4) FROM t1;
SELECT inet6_ntoa(CAST(c4 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c5) FROM t1;
SELECT inet6_ntoa(CAST(c5 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c6) FROM t1;
SELECT inet6_ntoa(CAST(c6 AS BINARY(16))) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT inet6_ntoa(@nip6);
eval CREATE USER testuser@'$IPv6' identified by '1234';
eval GRANT ALL ON test.* TO testuser@'$IPv6';
eval SHOW GRANTS FOR testuser@'$IPv6';
SELECT USER();
SELECT current_user();
SHOW PROCESSLIST;
connect (con1, $IPv6, root, , test, $MASTER_MYPORT);
connection default;
disconnect con1;
eval REVOKE ALL ON test.* FROM testuser@'$IPv6';
eval RENAME USER testuser@'$IPv6' to testuser1@'$IPv6';
eval SET PASSWORD FOR testuser1@'$IPv6' = '9876';
SELECT USER();
eval DROP USER testuser1@'$IPv6';
eval SET @nip= inet_aton('$IPv6');
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT INTO t1 VALUES (@nip,@nip,@nip,@nip,@nip,@nip);
SELECT inet_ntoa(c1) FROM t1;
SELECT inet_ntoa(CAST(c1 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c2) FROM t1;
SELECT inet_ntoa(CAST(c2 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c3) FROM t1;
SELECT inet_ntoa(CAST(c3 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c4) FROM t1;
SELECT inet_ntoa(CAST(c4 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c5) FROM t1;
SELECT inet_ntoa(CAST(c5 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c6) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT @nip;
SELECT inet_ntoa(@nip);
eval SET @nip6= inet6_aton('$IPv6');
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT IGNORE INTO t1 VALUES (@nip6,@nip6,@nip6,@nip6,@nip6,@nip6);
SELECT inet6_ntoa(c1) FROM t1;
SELECT inet6_ntoa(CAST(c1 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c2) FROM t1;
SELECT inet6_ntoa(CAST(c2 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c3) FROM t1;
SELECT inet6_ntoa(CAST(c3 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c4) FROM t1;
SELECT inet6_ntoa(CAST(c4 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c5) FROM t1;
SELECT inet6_ntoa(CAST(c5 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c6) FROM t1;
SELECT inet6_ntoa(CAST(c6 AS BINARY(16))) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT inet6_ntoa(@nip6);
eval CREATE USER testuser@'$IPv6' identified by '1234';
eval GRANT ALL ON test.* TO testuser@'$IPv6';
eval SHOW GRANTS FOR testuser@'$IPv6';
SELECT USER();
SELECT current_user();
SHOW PROCESSLIST;
connect (con1, $IPv6, root, , test, $MASTER_MYPORT);
connection default;
disconnect con1;
eval REVOKE ALL ON test.* FROM testuser@'$IPv6';
eval RENAME USER testuser@'$IPv6' to testuser1@'$IPv6';
eval SET PASSWORD FOR testuser1@'$IPv6' = '9876';
SELECT USER();
eval DROP USER testuser1@'$IPv6';
eval SET @nip= inet_aton('$IPv6');
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT INTO t1 VALUES (@nip,@nip,@nip,@nip,@nip,@nip);
SELECT inet_ntoa(c1) FROM t1;
SELECT inet_ntoa(CAST(c1 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c2) FROM t1;
SELECT inet_ntoa(CAST(c2 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c3) FROM t1;
SELECT inet_ntoa(CAST(c3 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c4) FROM t1;
SELECT inet_ntoa(CAST(c4 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c5) FROM t1;
SELECT inet_ntoa(CAST(c5 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c6) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT @nip;
SELECT inet_ntoa(@nip);
eval SET @nip6= inet6_aton('$IPv6');
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT IGNORE INTO t1 VALUES (@nip6,@nip6,@nip6,@nip6,@nip6,@nip6);
SELECT inet6_ntoa(c1) FROM t1;
SELECT inet6_ntoa(CAST(c1 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c2) FROM t1;
SELECT inet6_ntoa(CAST(c2 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c3) FROM t1;
SELECT inet6_ntoa(CAST(c3 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c4) FROM t1;
SELECT inet6_ntoa(CAST(c4 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c5) FROM t1;
SELECT inet6_ntoa(CAST(c5 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c6) FROM t1;
SELECT inet6_ntoa(CAST(c6 AS BINARY(16))) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT inet6_ntoa(@nip6);
eval CREATE USER testuser@'$IPv6' identified by '1234';
eval GRANT ALL ON test.* TO testuser@'$IPv6';
eval SHOW GRANTS FOR testuser@'$IPv6';
SELECT USER();
SELECT current_user();
SHOW PROCESSLIST;
connect (con1, $IPv6, root, , test, $MASTER_MYPORT);
connection default;
disconnect con1;
eval REVOKE ALL ON test.* FROM testuser@'$IPv6';
eval RENAME USER testuser@'$IPv6' to testuser1@'$IPv6';
eval SET PASSWORD FOR testuser1@'$IPv6' = '9876';
SELECT USER();
eval DROP USER testuser1@'$IPv6';
eval SET @nip= inet_aton('$IPv6');
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT INTO t1 VALUES (@nip,@nip,@nip,@nip,@nip,@nip);
SELECT inet_ntoa(c1) FROM t1;
SELECT inet_ntoa(CAST(c1 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c2) FROM t1;
SELECT inet_ntoa(CAST(c2 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c3) FROM t1;
SELECT inet_ntoa(CAST(c3 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c4) FROM t1;
SELECT inet_ntoa(CAST(c4 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c5) FROM t1;
SELECT inet_ntoa(CAST(c5 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c6) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT @nip;
SELECT inet_ntoa(@nip);
eval SET @nip6= inet6_aton('$IPv6');
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT IGNORE INTO t1 VALUES (@nip6,@nip6,@nip6,@nip6,@nip6,@nip6);
SELECT inet6_ntoa(c1) FROM t1;
SELECT inet6_ntoa(CAST(c1 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c2) FROM t1;
SELECT inet6_ntoa(CAST(c2 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c3) FROM t1;
SELECT inet6_ntoa(CAST(c3 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c4) FROM t1;
SELECT inet6_ntoa(CAST(c4 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c5) FROM t1;
SELECT inet6_ntoa(CAST(c5 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c6) FROM t1;
SELECT inet6_ntoa(CAST(c6 AS BINARY(16))) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT inet6_ntoa(@nip6);
eval SET @nip= inet_aton('$IPv6');
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT INTO t1 VALUES (@nip,@nip,@nip,@nip,@nip,@nip);
SELECT inet_ntoa(c1) FROM t1;
SELECT inet_ntoa(CAST(c1 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c2) FROM t1;
SELECT inet_ntoa(CAST(c2 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c3) FROM t1;
SELECT inet_ntoa(CAST(c3 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c4) FROM t1;
SELECT inet_ntoa(CAST(c4 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c5) FROM t1;
SELECT inet_ntoa(CAST(c5 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c6) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT @nip;
SELECT inet_ntoa(@nip);
eval SET @nip6= inet6_aton('$IPv6');
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT IGNORE INTO t1 VALUES (@nip6,@nip6,@nip6,@nip6,@nip6,@nip6);
SELECT inet6_ntoa(c1) FROM t1;
SELECT inet6_ntoa(CAST(c1 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c2) FROM t1;
SELECT inet6_ntoa(CAST(c2 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c3) FROM t1;
SELECT inet6_ntoa(CAST(c3 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c4) FROM t1;
SELECT inet6_ntoa(CAST(c4 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c5) FROM t1;
SELECT inet6_ntoa(CAST(c5 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c6) FROM t1;
SELECT inet6_ntoa(CAST(c6 AS BINARY(16))) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT inet6_ntoa(@nip6);
eval CREATE USER testuser@'$IPv6' identified by '1234';
eval GRANT ALL ON test.* TO testuser@'$IPv6';
eval SHOW GRANTS FOR testuser@'$IPv6';
SELECT USER();
SELECT current_user();
SHOW PROCESSLIST;
connect (con1, $IPv6, root, , test, $MASTER_MYPORT);
connection default;
disconnect con1;
eval REVOKE ALL ON test.* FROM testuser@'$IPv6';
eval RENAME USER testuser@'$IPv6' to testuser1@'$IPv6';
eval SET PASSWORD FOR testuser1@'$IPv6' = '9876';
SELECT USER();
eval DROP USER testuser1@'$IPv6';
eval SET @nip= inet_aton('$IPv6');
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT INTO t1 VALUES (@nip,@nip,@nip,@nip,@nip,@nip);
SELECT inet_ntoa(c1) FROM t1;
SELECT inet_ntoa(CAST(c1 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c2) FROM t1;
SELECT inet_ntoa(CAST(c2 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c3) FROM t1;
SELECT inet_ntoa(CAST(c3 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c4) FROM t1;
SELECT inet_ntoa(CAST(c4 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c5) FROM t1;
SELECT inet_ntoa(CAST(c5 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c6) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT @nip;
SELECT inet_ntoa(@nip);
eval SET @nip6= inet6_aton('$IPv6');
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT IGNORE INTO t1 VALUES (@nip6,@nip6,@nip6,@nip6,@nip6,@nip6);
SELECT inet6_ntoa(c1) FROM t1;
SELECT inet6_ntoa(CAST(c1 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c2) FROM t1;
SELECT inet6_ntoa(CAST(c2 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c3) FROM t1;
SELECT inet6_ntoa(CAST(c3 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c4) FROM t1;
SELECT inet6_ntoa(CAST(c4 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c5) FROM t1;
SELECT inet6_ntoa(CAST(c5 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c6) FROM t1;
SELECT inet6_ntoa(CAST(c6 AS BINARY(16))) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT inet6_ntoa(@nip6);
DROP USER 'root'@'::1';
DROP USER 'root'@'127.0.0.1';
    DROP USER 'root'@'127.0.0.1';
  DROP USER 'root'@'::1';
  RESET MASTER;
       let $wait_counter= `SELECT $wait_timeout * 10`;
while ($wait_counter)   let $current_sessions= query_get_value(SHOW GLOBAL STATUS LIKE 'Threads_connected', Value, 1);
   let $success= `SELECT $current_sessions <= $count_sessions`;
   if ($success)   {      let $wait_counter= 0;
   }   if (!$success)   {      sleep 0.1;
      dec $wait_counter;
   }         SHOW PROCESSLIST;
   echo =============Test of '127.0.0.1' (IPv4) ===========================;
echo =============Test of '0:0:0:0:0:FFFF:127.0.0.1' ===================;
echo =============Test of '0000:0000:0000:0000:0000:FFFF:127.0.0.1' ====;
echo =============Test of '0:0000:0000:0:0000:FFFF:127.0.0.1' ====;
echo =============Test of '0::0000:FFFF:127.0.0.1' ====;
echo =============Test of '0:0:0:0:0:FFFF:127.0.0.1/96' ================;
echo =============Test of '::FFFF:127.0.0.1' ===========================;
echo =============Test of '::FFFF:127.0.0.1/96' ========================;
echo =============Test of '::1' ========================;
connect (con1, $IPv6, root, , test, $MASTER_MYPORT,);
CREATE USER IF NOT EXISTS 'root'@'127.0.0.1';
CREATE USER IF NOT EXISTS 'root'@'::1';
GRANT ALL ON *.* TO 'root'@'127.0.0.1', 'root'@'::1' WITH GRANT OPTION;
    let $os_version = `SELECT CONVERT(@@version_compile_os using latin1) NOT IN ("Win32","Win64","Windows")`;
  if ($os_version)  {    connect (slave_init_con,localhost,root,,test,$SLAVE_MYPORT,$SLAVE_MYSOCK);
  }  if (!$os_version)  {    connect (slave_init_con,localhost,root,,test,$SLAVE_MYPORT,$SLAVE_MYSOCK,PIPE);
  }  CREATE USER IF NOT EXISTS 'root'@'127.0.0.1';
  CREATE USER IF NOT EXISTS 'root'@'::1';
  GRANT ALL ON *.* TO 'root'@'127.0.0.1', 'root'@'::1';
  DROP USER 'root'@'::1';
DROP USER 'root'@'127.0.0.1';
    DROP USER 'root'@'127.0.0.1';
  DROP USER 'root'@'::1';
  RESET MASTER;
    DROP USER 'root'@'::1';
DROP USER 'root'@'127.0.0.1';
    DROP USER 'root'@'127.0.0.1';
  DROP USER 'root'@'::1';
  RESET MASTER;
    connect (checkcon123456789,::FFFF:127.0.0.1,root,,test);
skip wrong IP;
connection default;
disconnect checkcon123456789;
CREATE USER IF NOT EXISTS 'root'@'127.0.0.1';
CREATE USER IF NOT EXISTS 'root'@'::1';
GRANT ALL ON *.* TO 'root'@'127.0.0.1', 'root'@'::1' WITH GRANT OPTION;
    let $os_version = `SELECT CONVERT(@@version_compile_os using latin1) NOT IN ("Win32","Win64","Windows")`;
  if ($os_version)  {    connect (slave_init_con,localhost,root,,test,$SLAVE_MYPORT,$SLAVE_MYSOCK);
  }  if (!$os_version)  {    connect (slave_init_con,localhost,root,,test,$SLAVE_MYPORT,$SLAVE_MYSOCK,PIPE);
  }  CREATE USER IF NOT EXISTS 'root'@'127.0.0.1';
  CREATE USER IF NOT EXISTS 'root'@'::1';
  GRANT ALL ON *.* TO 'root'@'127.0.0.1', 'root'@'::1';
  eval CREATE USER testuser@'$IPv6' identified by '1234';
eval GRANT ALL ON test.* TO testuser@'$IPv6';
eval SHOW GRANTS FOR testuser@'$IPv6';
SELECT USER();
SELECT current_user();
SHOW PROCESSLIST;
connect (con1, $IPv6, root, , test, $MASTER_MYPORT);
connection default;
disconnect con1;
eval REVOKE ALL ON test.* FROM testuser@'$IPv6';
eval RENAME USER testuser@'$IPv6' to testuser1@'$IPv6';
eval SET PASSWORD FOR testuser1@'$IPv6' = '9876';
SELECT USER();
eval DROP USER testuser1@'$IPv6';
eval SET @nip= inet_aton('$IPv6');
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT INTO t1 VALUES (@nip,@nip,@nip,@nip,@nip,@nip);
SELECT inet_ntoa(c1) FROM t1;
SELECT inet_ntoa(CAST(c1 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c2) FROM t1;
SELECT inet_ntoa(CAST(c2 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c3) FROM t1;
SELECT inet_ntoa(CAST(c3 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c4) FROM t1;
SELECT inet_ntoa(CAST(c4 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c5) FROM t1;
SELECT inet_ntoa(CAST(c5 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c6) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT @nip;
SELECT inet_ntoa(@nip);
eval SET @nip6= inet6_aton('$IPv6');
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT IGNORE INTO t1 VALUES (@nip6,@nip6,@nip6,@nip6,@nip6,@nip6);
SELECT inet6_ntoa(c1) FROM t1;
SELECT inet6_ntoa(CAST(c1 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c2) FROM t1;
SELECT inet6_ntoa(CAST(c2 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c3) FROM t1;
SELECT inet6_ntoa(CAST(c3 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c4) FROM t1;
SELECT inet6_ntoa(CAST(c4 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c5) FROM t1;
SELECT inet6_ntoa(CAST(c5 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c6) FROM t1;
SELECT inet6_ntoa(CAST(c6 AS BINARY(16))) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT inet6_ntoa(@nip6);
eval CREATE USER testuser@'$IPv6' identified by '1234';
eval GRANT ALL ON test.* TO testuser@'$IPv6';
eval SHOW GRANTS FOR testuser@'$IPv6';
SELECT USER();
SELECT current_user();
SHOW PROCESSLIST;
connect (con1, $IPv6, root, , test, $MASTER_MYPORT);
connection default;
disconnect con1;
eval REVOKE ALL ON test.* FROM testuser@'$IPv6';
eval RENAME USER testuser@'$IPv6' to testuser1@'$IPv6';
eval SET PASSWORD FOR testuser1@'$IPv6' = '9876';
SELECT USER();
eval DROP USER testuser1@'$IPv6';
eval SET @nip= inet_aton('$IPv6');
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT INTO t1 VALUES (@nip,@nip,@nip,@nip,@nip,@nip);
SELECT inet_ntoa(c1) FROM t1;
SELECT inet_ntoa(CAST(c1 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c2) FROM t1;
SELECT inet_ntoa(CAST(c2 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c3) FROM t1;
SELECT inet_ntoa(CAST(c3 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c4) FROM t1;
SELECT inet_ntoa(CAST(c4 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c5) FROM t1;
SELECT inet_ntoa(CAST(c5 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c6) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT @nip;
SELECT inet_ntoa(@nip);
eval SET @nip6= inet6_aton('$IPv6');
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT IGNORE INTO t1 VALUES (@nip6,@nip6,@nip6,@nip6,@nip6,@nip6);
SELECT inet6_ntoa(c1) FROM t1;
SELECT inet6_ntoa(CAST(c1 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c2) FROM t1;
SELECT inet6_ntoa(CAST(c2 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c3) FROM t1;
SELECT inet6_ntoa(CAST(c3 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c4) FROM t1;
SELECT inet6_ntoa(CAST(c4 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c5) FROM t1;
SELECT inet6_ntoa(CAST(c5 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c6) FROM t1;
SELECT inet6_ntoa(CAST(c6 AS BINARY(16))) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT inet6_ntoa(@nip6);
eval CREATE USER testuser@'$IPv6' identified by '1234';
eval GRANT ALL ON test.* TO testuser@'$IPv6';
eval SHOW GRANTS FOR testuser@'$IPv6';
SELECT USER();
SELECT current_user();
SHOW PROCESSLIST;
connect (con1, $IPv6, root, , test, $MASTER_MYPORT);
connection default;
disconnect con1;
eval REVOKE ALL ON test.* FROM testuser@'$IPv6';
eval RENAME USER testuser@'$IPv6' to testuser1@'$IPv6';
eval SET PASSWORD FOR testuser1@'$IPv6' = '9876';
SELECT USER();
eval DROP USER testuser1@'$IPv6';
eval SET @nip= inet_aton('$IPv6');
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT INTO t1 VALUES (@nip,@nip,@nip,@nip,@nip,@nip);
SELECT inet_ntoa(c1) FROM t1;
SELECT inet_ntoa(CAST(c1 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c2) FROM t1;
SELECT inet_ntoa(CAST(c2 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c3) FROM t1;
SELECT inet_ntoa(CAST(c3 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c4) FROM t1;
SELECT inet_ntoa(CAST(c4 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c5) FROM t1;
SELECT inet_ntoa(CAST(c5 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c6) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT @nip;
SELECT inet_ntoa(@nip);
eval SET @nip6= inet6_aton('$IPv6');
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT IGNORE INTO t1 VALUES (@nip6,@nip6,@nip6,@nip6,@nip6,@nip6);
SELECT inet6_ntoa(c1) FROM t1;
SELECT inet6_ntoa(CAST(c1 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c2) FROM t1;
SELECT inet6_ntoa(CAST(c2 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c3) FROM t1;
SELECT inet6_ntoa(CAST(c3 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c4) FROM t1;
SELECT inet6_ntoa(CAST(c4 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c5) FROM t1;
SELECT inet6_ntoa(CAST(c5 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c6) FROM t1;
SELECT inet6_ntoa(CAST(c6 AS BINARY(16))) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT inet6_ntoa(@nip6);
eval CREATE USER testuser@'$IPv6' identified by '1234';
eval GRANT ALL ON test.* TO testuser@'$IPv6';
eval SHOW GRANTS FOR testuser@'$IPv6';
SELECT USER();
SELECT current_user();
SHOW PROCESSLIST;
connect (con1, $IPv6, root, , test, $MASTER_MYPORT);
connection default;
disconnect con1;
eval REVOKE ALL ON test.* FROM testuser@'$IPv6';
eval RENAME USER testuser@'$IPv6' to testuser1@'$IPv6';
eval SET PASSWORD FOR testuser1@'$IPv6' = '9876';
SELECT USER();
eval DROP USER testuser1@'$IPv6';
eval SET @nip= inet_aton('$IPv6');
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT INTO t1 VALUES (@nip,@nip,@nip,@nip,@nip,@nip);
SELECT inet_ntoa(c1) FROM t1;
SELECT inet_ntoa(CAST(c1 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c2) FROM t1;
SELECT inet_ntoa(CAST(c2 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c3) FROM t1;
SELECT inet_ntoa(CAST(c3 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c4) FROM t1;
SELECT inet_ntoa(CAST(c4 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c5) FROM t1;
SELECT inet_ntoa(CAST(c5 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c6) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT @nip;
SELECT inet_ntoa(@nip);
eval SET @nip6= inet6_aton('$IPv6');
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT IGNORE INTO t1 VALUES (@nip6,@nip6,@nip6,@nip6,@nip6,@nip6);
SELECT inet6_ntoa(c1) FROM t1;
SELECT inet6_ntoa(CAST(c1 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c2) FROM t1;
SELECT inet6_ntoa(CAST(c2 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c3) FROM t1;
SELECT inet6_ntoa(CAST(c3 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c4) FROM t1;
SELECT inet6_ntoa(CAST(c4 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c5) FROM t1;
SELECT inet6_ntoa(CAST(c5 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c6) FROM t1;
SELECT inet6_ntoa(CAST(c6 AS BINARY(16))) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT inet6_ntoa(@nip6);
eval CREATE USER testuser@'$IPv6' identified by '1234';
eval GRANT ALL ON test.* TO testuser@'$IPv6';
eval SHOW GRANTS FOR testuser@'$IPv6';
SELECT USER();
SELECT current_user();
SHOW PROCESSLIST;
connect (con1, $IPv6, root, , test, $MASTER_MYPORT);
connection default;
disconnect con1;
eval REVOKE ALL ON test.* FROM testuser@'$IPv6';
eval RENAME USER testuser@'$IPv6' to testuser1@'$IPv6';
eval SET PASSWORD FOR testuser1@'$IPv6' = '9876';
SELECT USER();
eval DROP USER testuser1@'$IPv6';
eval SET @nip= inet_aton('$IPv6');
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT INTO t1 VALUES (@nip,@nip,@nip,@nip,@nip,@nip);
SELECT inet_ntoa(c1) FROM t1;
SELECT inet_ntoa(CAST(c1 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c2) FROM t1;
SELECT inet_ntoa(CAST(c2 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c3) FROM t1;
SELECT inet_ntoa(CAST(c3 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c4) FROM t1;
SELECT inet_ntoa(CAST(c4 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c5) FROM t1;
SELECT inet_ntoa(CAST(c5 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c6) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT @nip;
SELECT inet_ntoa(@nip);
eval SET @nip6= inet6_aton('$IPv6');
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT IGNORE INTO t1 VALUES (@nip6,@nip6,@nip6,@nip6,@nip6,@nip6);
SELECT inet6_ntoa(c1) FROM t1;
SELECT inet6_ntoa(CAST(c1 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c2) FROM t1;
SELECT inet6_ntoa(CAST(c2 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c3) FROM t1;
SELECT inet6_ntoa(CAST(c3 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c4) FROM t1;
SELECT inet6_ntoa(CAST(c4 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c5) FROM t1;
SELECT inet6_ntoa(CAST(c5 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c6) FROM t1;
SELECT inet6_ntoa(CAST(c6 AS BINARY(16))) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT inet6_ntoa(@nip6);
eval SET @nip= inet_aton('$IPv6');
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT INTO t1 VALUES (@nip,@nip,@nip,@nip,@nip,@nip);
SELECT inet_ntoa(c1) FROM t1;
SELECT inet_ntoa(CAST(c1 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c2) FROM t1;
SELECT inet_ntoa(CAST(c2 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c3) FROM t1;
SELECT inet_ntoa(CAST(c3 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c4) FROM t1;
SELECT inet_ntoa(CAST(c4 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c5) FROM t1;
SELECT inet_ntoa(CAST(c5 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c6) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT @nip;
SELECT inet_ntoa(@nip);
eval SET @nip6= inet6_aton('$IPv6');
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT IGNORE INTO t1 VALUES (@nip6,@nip6,@nip6,@nip6,@nip6,@nip6);
SELECT inet6_ntoa(c1) FROM t1;
SELECT inet6_ntoa(CAST(c1 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c2) FROM t1;
SELECT inet6_ntoa(CAST(c2 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c3) FROM t1;
SELECT inet6_ntoa(CAST(c3 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c4) FROM t1;
SELECT inet6_ntoa(CAST(c4 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c5) FROM t1;
SELECT inet6_ntoa(CAST(c5 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c6) FROM t1;
SELECT inet6_ntoa(CAST(c6 AS BINARY(16))) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT inet6_ntoa(@nip6);
eval CREATE USER testuser@'$IPv6' identified by '1234';
eval GRANT ALL ON test.* TO testuser@'$IPv6';
eval SHOW GRANTS FOR testuser@'$IPv6';
SELECT USER();
SELECT current_user();
SHOW PROCESSLIST;
connect (con1, $IPv6, root, , test, $MASTER_MYPORT);
connection default;
disconnect con1;
eval REVOKE ALL ON test.* FROM testuser@'$IPv6';
eval RENAME USER testuser@'$IPv6' to testuser1@'$IPv6';
eval SET PASSWORD FOR testuser1@'$IPv6' = '9876';
SELECT USER();
eval DROP USER testuser1@'$IPv6';
eval SET @nip= inet_aton('$IPv6');
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT INTO t1 VALUES (@nip,@nip,@nip,@nip,@nip,@nip);
SELECT inet_ntoa(c1) FROM t1;
SELECT inet_ntoa(CAST(c1 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c2) FROM t1;
SELECT inet_ntoa(CAST(c2 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c3) FROM t1;
SELECT inet_ntoa(CAST(c3 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c4) FROM t1;
SELECT inet_ntoa(CAST(c4 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c5) FROM t1;
SELECT inet_ntoa(CAST(c5 AS UNSIGNED)) FROM t1;
SELECT inet_ntoa(c6) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT @nip;
SELECT inet_ntoa(@nip);
eval SET @nip6= inet6_aton('$IPv6');
CREATE TABLE t1 (c1 varbinary(16), c2 varchar(16), c3 binary(16), c4 char(16), c5 long, c6 int) charset latin1;
INSERT IGNORE INTO t1 VALUES (@nip6,@nip6,@nip6,@nip6,@nip6,@nip6);
SELECT inet6_ntoa(c1) FROM t1;
SELECT inet6_ntoa(CAST(c1 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c2) FROM t1;
SELECT inet6_ntoa(CAST(c2 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c3) FROM t1;
SELECT inet6_ntoa(CAST(c3 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c4) FROM t1;
SELECT inet6_ntoa(CAST(c4 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c5) FROM t1;
SELECT inet6_ntoa(CAST(c5 AS BINARY(16))) FROM t1;
SELECT inet6_ntoa(c6) FROM t1;
SELECT inet6_ntoa(CAST(c6 AS BINARY(16))) FROM t1;
DROP TABLE IF EXISTS t1;
SELECT inet6_ntoa(@nip6);
DROP USER 'root'@'::1';
DROP USER 'root'@'127.0.0.1';
    DROP USER 'root'@'127.0.0.1';
  DROP USER 'root'@'::1';
  RESET MASTER;
       let $wait_counter= `SELECT $wait_timeout * 10`;
while ($wait_counter)   let $current_sessions= query_get_value(SHOW GLOBAL STATUS LIKE 'Threads_connected', Value, 1);
   let $success= `SELECT $current_sessions <= $count_sessions`;
   if ($success)   {      let $wait_counter= 0;
   }   if (!$success)   {      sleep 0.1;
      dec $wait_counter;
   }         SHOW PROCESSLIST;
   echo =============Test of '127.0.0.1' (IPv4) ===========================;
echo =============Test of '0:0:0:0:0:FFFF:127.0.0.1' ===================;
echo =============Test of '0000:0000:0000:0000:0000:FFFF:127.0.0.1' ====;
echo =============Test of '0:0000:0000:0:0000:FFFF:127.0.0.1' ====;
echo =============Test of '0::0000:FFFF:127.0.0.1' ====;
echo =============Test of '0:0:0:0:0:FFFF:127.0.0.1/96' ================;
echo =============Test of '::FFFF:127.0.0.1' ===========================;
echo =============Test of '::FFFF:127.0.0.1/96' ========================;
echo =============Test of '::1' ========================;
connect (con1, $IPv6, root, , test, $MASTER_MYPORT,);
