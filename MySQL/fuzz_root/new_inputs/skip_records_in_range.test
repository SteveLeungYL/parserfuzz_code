      connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
SET optimizer_trace="enabled=on";
eval $query;
SELECT TRACE INTO @trace FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
SELECT @trace RLIKE "skipped_due_to_force_index";
SET optimizer_trace="enabled=off";
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
SET optimizer_trace="enabled=on";
eval $query;
SELECT TRACE INTO @trace FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
SELECT @trace RLIKE "skipped_due_to_force_index";
SET optimizer_trace="enabled=off";
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
SET optimizer_trace="enabled=on";
eval $query;
SELECT TRACE INTO @trace FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
SELECT @trace RLIKE "skipped_due_to_force_index";
SET optimizer_trace="enabled=off";
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
SET optimizer_trace="enabled=on";
eval $query;
SELECT TRACE INTO @trace FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
SELECT @trace RLIKE "skipped_due_to_force_index";
SET optimizer_trace="enabled=off";
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
SET optimizer_trace="enabled=on";
eval $query;
SELECT TRACE INTO @trace FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
SELECT @trace RLIKE "skipped_due_to_force_index";
SET optimizer_trace="enabled=off";
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
SET optimizer_trace="enabled=on";
eval $query;
SELECT TRACE INTO @trace FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
SELECT @trace RLIKE "skipped_due_to_force_index";
SET optimizer_trace="enabled=off";
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
SET optimizer_trace="enabled=on";
eval $query;
SELECT TRACE INTO @trace FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
SELECT @trace RLIKE "skipped_due_to_force_index";
SET optimizer_trace="enabled=off";
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
SET optimizer_trace="enabled=on";
eval $query;
SELECT TRACE INTO @trace FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
SELECT @trace RLIKE "skipped_due_to_force_index";
SET optimizer_trace="enabled=off";
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
SET optimizer_trace="enabled=on";
eval $query;
SELECT TRACE INTO @trace FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
SELECT @trace RLIKE "skipped_due_to_force_index";
SET optimizer_trace="enabled=off";
CREATE TABLE t1 (  pk_col1 INT NOT NULL,  a1 CHAR(64),  a2 CHAR(64),  PRIMARY KEY(pk_col1),  KEY t1_a1_idx (a1),  KEY t1_a1_a2_idx (a1, a2)) ENGINE=INNODB;
INSERT INTO t1 (pk_col1, a1, a2) VALUES (1,'a','b'), (2,'a','b'), (3,'d','c'),                                        (4,'b','c'), (5,'c','d'), (6,'a','b');
CREATE TABLE t2 (  pk_col1 INT NOT NULL,  pk_col2 INT NOT NULL,  a1 CHAR(64),  a2 CHAR(64),  PRIMARY KEY(pk_col1, pk_col2),  KEY t2_a1_idx (a1),  KEY t2_a1_a2_idx (a1, a2)) ENGINE=INNODB;
INSERT INTO t2 (pk_col1, pk_col2, a1, a2) VALUES (1,1,'a','b'),(1,2,'a','b'),                                                 (1,3,'d','c'),(1,4,'b','c'),                                                 (2,1,'c','d'),(3,1,'a','b');
ANALYZE TABLE t1;
ANALYZE TABLE t2;
SELECT t2.a1, t2.a2FROM t1 FORCE INDEX(t1_a1_a2_idx) JOIN t2 ON (t1.pk_col1 = t2.pk_col2)WHERE t1.a1 > 'a';
connect (ce, localhost, root,, test);
connect (cq, localhost, root,, test);
connection cq;
DROP TABLE t1, t2;
CREATE TABLE t1 (v3 INT, KEY(v3));
CREATE view v1 AS SELECT v3  FROM t1 FORCE KEY (v3) GROUP BY v3;
eval EXPLAIN $query1;
eval $query1;
DROP VIEW v1;
DROP TABLE t1;
      connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
SET optimizer_trace="enabled=on";
eval $query;
SELECT TRACE INTO @trace FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
SELECT @trace RLIKE "skipped_due_to_force_index";
SET optimizer_trace="enabled=off";
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
SET optimizer_trace="enabled=on";
eval $query;
SELECT TRACE INTO @trace FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
SELECT @trace RLIKE "skipped_due_to_force_index";
SET optimizer_trace="enabled=off";
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
SET optimizer_trace="enabled=on";
eval $query;
SELECT TRACE INTO @trace FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
SELECT @trace RLIKE "skipped_due_to_force_index";
SET optimizer_trace="enabled=off";
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
SET optimizer_trace="enabled=on";
eval $query;
SELECT TRACE INTO @trace FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
SELECT @trace RLIKE "skipped_due_to_force_index";
SET optimizer_trace="enabled=off";
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
SET optimizer_trace="enabled=on";
eval $query;
SELECT TRACE INTO @trace FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
SELECT @trace RLIKE "skipped_due_to_force_index";
SET optimizer_trace="enabled=off";
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
SET optimizer_trace="enabled=on";
eval $query;
SELECT TRACE INTO @trace FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
SELECT @trace RLIKE "skipped_due_to_force_index";
SET optimizer_trace="enabled=off";
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
SET optimizer_trace="enabled=on";
eval $query;
SELECT TRACE INTO @trace FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
SELECT @trace RLIKE "skipped_due_to_force_index";
SET optimizer_trace="enabled=off";
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
SET optimizer_trace="enabled=on";
eval $query;
SELECT TRACE INTO @trace FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
SELECT @trace RLIKE "skipped_due_to_force_index";
SET optimizer_trace="enabled=off";
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
SET optimizer_trace="enabled=on";
eval $query;
SELECT TRACE INTO @trace FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
SELECT @trace RLIKE "skipped_due_to_force_index";
SET optimizer_trace="enabled=off";
CREATE TABLE t1 (  pk_col1 INT NOT NULL,  a1 CHAR(64),  a2 CHAR(64),  PRIMARY KEY(pk_col1),  KEY t1_a1_idx (a1),  KEY t1_a1_a2_idx (a1, a2)) ENGINE=INNODB;
INSERT INTO t1 (pk_col1, a1, a2) VALUES (1,'a','b'), (2,'a','b'), (3,'d','c'),                                        (4,'b','c'), (5,'c','d'), (6,'a','b');
CREATE TABLE t2 (  pk_col1 INT NOT NULL,  pk_col2 INT NOT NULL,  a1 CHAR(64),  a2 CHAR(64),  PRIMARY KEY(pk_col1, pk_col2),  KEY t2_a1_idx (a1),  KEY t2_a1_a2_idx (a1, a2)) ENGINE=INNODB;
INSERT INTO t2 (pk_col1, pk_col2, a1, a2) VALUES (1,1,'a','b'),(1,2,'a','b'),                                                 (1,3,'d','c'),(1,4,'b','c'),                                                 (2,1,'c','d'),(3,1,'a','b');
ANALYZE TABLE t1;
ANALYZE TABLE t2;
SELECT t2.a1, t2.a2FROM t1 FORCE INDEX(t1_a1_a2_idx) JOIN t2 ON (t1.pk_col1 = t2.pk_col2)WHERE t1.a1 > 'a';
connect (ce, localhost, root,, test);
connect (cq, localhost, root,, test);
connection cq;
DROP TABLE t1, t2;
CREATE TABLE t1 (v3 INT, KEY(v3));
CREATE view v1 AS SELECT v3  FROM t1 FORCE KEY (v3) GROUP BY v3;
eval EXPLAIN $query1;
eval $query1;
DROP VIEW v1;
DROP TABLE t1;
      connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
SET optimizer_trace="enabled=on";
eval $query;
SELECT TRACE INTO @trace FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
SELECT @trace RLIKE "skipped_due_to_force_index";
SET optimizer_trace="enabled=off";
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
SET optimizer_trace="enabled=on";
eval $query;
SELECT TRACE INTO @trace FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
SELECT @trace RLIKE "skipped_due_to_force_index";
SET optimizer_trace="enabled=off";
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
SET optimizer_trace="enabled=on";
eval $query;
SELECT TRACE INTO @trace FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
SELECT @trace RLIKE "skipped_due_to_force_index";
SET optimizer_trace="enabled=off";
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
SET optimizer_trace="enabled=on";
eval $query;
SELECT TRACE INTO @trace FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
SELECT @trace RLIKE "skipped_due_to_force_index";
SET optimizer_trace="enabled=off";
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
SET optimizer_trace="enabled=on";
eval $query;
SELECT TRACE INTO @trace FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
SELECT @trace RLIKE "skipped_due_to_force_index";
SET optimizer_trace="enabled=off";
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
SET optimizer_trace="enabled=on";
eval $query;
SELECT TRACE INTO @trace FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
SELECT @trace RLIKE "skipped_due_to_force_index";
SET optimizer_trace="enabled=off";
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
SET optimizer_trace="enabled=on";
eval $query;
SELECT TRACE INTO @trace FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
SELECT @trace RLIKE "skipped_due_to_force_index";
SET optimizer_trace="enabled=off";
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
SET optimizer_trace="enabled=on";
eval $query;
SELECT TRACE INTO @trace FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
SELECT @trace RLIKE "skipped_due_to_force_index";
SET optimizer_trace="enabled=off";
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
SET optimizer_trace="enabled=on";
eval $query;
SELECT TRACE INTO @trace FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
SELECT @trace RLIKE "skipped_due_to_force_index";
SET optimizer_trace="enabled=off";
CREATE TABLE t1 (  pk_col1 INT NOT NULL,  a1 CHAR(64),  a2 CHAR(64),  PRIMARY KEY(pk_col1),  KEY t1_a1_idx (a1),  KEY t1_a1_a2_idx (a1, a2)) ENGINE=INNODB;
INSERT INTO t1 (pk_col1, a1, a2) VALUES (1,'a','b'), (2,'a','b'), (3,'d','c'),                                        (4,'b','c'), (5,'c','d'), (6,'a','b');
CREATE TABLE t2 (  pk_col1 INT NOT NULL,  pk_col2 INT NOT NULL,  a1 CHAR(64),  a2 CHAR(64),  PRIMARY KEY(pk_col1, pk_col2),  KEY t2_a1_idx (a1),  KEY t2_a1_a2_idx (a1, a2)) ENGINE=INNODB;
INSERT INTO t2 (pk_col1, pk_col2, a1, a2) VALUES (1,1,'a','b'),(1,2,'a','b'),                                                 (1,3,'d','c'),(1,4,'b','c'),                                                 (2,1,'c','d'),(3,1,'a','b');
ANALYZE TABLE t1;
ANALYZE TABLE t2;
SELECT t2.a1, t2.a2FROM t1 FORCE INDEX(t1_a1_a2_idx) JOIN t2 ON (t1.pk_col1 = t2.pk_col2)WHERE t1.a1 > 'a';
connect (ce, localhost, root,, test);
connect (cq, localhost, root,, test);
connection cq;
DROP TABLE t1, t2;
CREATE TABLE t1 (v3 INT, KEY(v3));
CREATE view v1 AS SELECT v3  FROM t1 FORCE KEY (v3) GROUP BY v3;
eval EXPLAIN $query1;
eval $query1;
DROP VIEW v1;
DROP TABLE t1;
      connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
SET optimizer_trace="enabled=on";
eval $query;
SELECT TRACE INTO @trace FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
SELECT @trace RLIKE "skipped_due_to_force_index";
SET optimizer_trace="enabled=off";
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
SET optimizer_trace="enabled=on";
eval $query;
SELECT TRACE INTO @trace FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
SELECT @trace RLIKE "skipped_due_to_force_index";
SET optimizer_trace="enabled=off";
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
SET optimizer_trace="enabled=on";
eval $query;
SELECT TRACE INTO @trace FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
SELECT @trace RLIKE "skipped_due_to_force_index";
SET optimizer_trace="enabled=off";
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
SET optimizer_trace="enabled=on";
eval $query;
SELECT TRACE INTO @trace FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
SELECT @trace RLIKE "skipped_due_to_force_index";
SET optimizer_trace="enabled=off";
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
SET optimizer_trace="enabled=on";
eval $query;
SELECT TRACE INTO @trace FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
SELECT @trace RLIKE "skipped_due_to_force_index";
SET optimizer_trace="enabled=off";
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
SET optimizer_trace="enabled=on";
eval $query;
SELECT TRACE INTO @trace FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
SELECT @trace RLIKE "skipped_due_to_force_index";
SET optimizer_trace="enabled=off";
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
SET optimizer_trace="enabled=on";
eval $query;
SELECT TRACE INTO @trace FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
SELECT @trace RLIKE "skipped_due_to_force_index";
SET optimizer_trace="enabled=off";
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
SET optimizer_trace="enabled=on";
eval $query;
SELECT TRACE INTO @trace FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
SELECT @trace RLIKE "skipped_due_to_force_index";
SET optimizer_trace="enabled=off";
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
SET optimizer_trace="enabled=on";
eval $query;
SELECT TRACE INTO @trace FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
SELECT @trace RLIKE "skipped_due_to_force_index";
SET optimizer_trace="enabled=off";
CREATE TABLE t1 (  pk_col1 INT NOT NULL,  a1 CHAR(64),  a2 CHAR(64),  PRIMARY KEY(pk_col1),  KEY t1_a1_idx (a1),  KEY t1_a1_a2_idx (a1, a2)) ENGINE=INNODB;
INSERT INTO t1 (pk_col1, a1, a2) VALUES (1,'a','b'), (2,'a','b'), (3,'d','c'),                                        (4,'b','c'), (5,'c','d'), (6,'a','b');
CREATE TABLE t2 (  pk_col1 INT NOT NULL,  pk_col2 INT NOT NULL,  a1 CHAR(64),  a2 CHAR(64),  PRIMARY KEY(pk_col1, pk_col2),  KEY t2_a1_idx (a1),  KEY t2_a1_a2_idx (a1, a2)) ENGINE=INNODB;
INSERT INTO t2 (pk_col1, pk_col2, a1, a2) VALUES (1,1,'a','b'),(1,2,'a','b'),                                                 (1,3,'d','c'),(1,4,'b','c'),                                                 (2,1,'c','d'),(3,1,'a','b');
ANALYZE TABLE t1;
ANALYZE TABLE t2;
SELECT t2.a1, t2.a2FROM t1 FORCE INDEX(t1_a1_a2_idx) JOIN t2 ON (t1.pk_col1 = t2.pk_col2)WHERE t1.a1 > 'a';
connect (ce, localhost, root,, test);
connect (cq, localhost, root,, test);
connection cq;
DROP TABLE t1, t2;
CREATE TABLE t1 (v3 INT, KEY(v3));
CREATE view v1 AS SELECT v3  FROM t1 FORCE KEY (v3) GROUP BY v3;
eval EXPLAIN $query1;
eval $query1;
DROP VIEW v1;
DROP TABLE t1;
      connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
SET optimizer_trace="enabled=on";
eval $query;
SELECT TRACE INTO @trace FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
SELECT @trace RLIKE "skipped_due_to_force_index";
SET optimizer_trace="enabled=off";
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
SET optimizer_trace="enabled=on";
eval $query;
SELECT TRACE INTO @trace FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
SELECT @trace RLIKE "skipped_due_to_force_index";
SET optimizer_trace="enabled=off";
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
SET optimizer_trace="enabled=on";
eval $query;
SELECT TRACE INTO @trace FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
SELECT @trace RLIKE "skipped_due_to_force_index";
SET optimizer_trace="enabled=off";
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
SET optimizer_trace="enabled=on";
eval $query;
SELECT TRACE INTO @trace FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
SELECT @trace RLIKE "skipped_due_to_force_index";
SET optimizer_trace="enabled=off";
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
SET optimizer_trace="enabled=on";
eval $query;
SELECT TRACE INTO @trace FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
SELECT @trace RLIKE "skipped_due_to_force_index";
SET optimizer_trace="enabled=off";
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
SET optimizer_trace="enabled=on";
eval $query;
SELECT TRACE INTO @trace FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
SELECT @trace RLIKE "skipped_due_to_force_index";
SET optimizer_trace="enabled=off";
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
SET optimizer_trace="enabled=on";
eval $query;
SELECT TRACE INTO @trace FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
SELECT @trace RLIKE "skipped_due_to_force_index";
SET optimizer_trace="enabled=off";
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
SET optimizer_trace="enabled=on";
eval $query;
SELECT TRACE INTO @trace FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
SELECT @trace RLIKE "skipped_due_to_force_index";
SET optimizer_trace="enabled=off";
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
SET optimizer_trace="enabled=on";
eval $query;
SELECT TRACE INTO @trace FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
SELECT @trace RLIKE "skipped_due_to_force_index";
SET optimizer_trace="enabled=off";
CREATE TABLE t1 (  pk_col1 INT NOT NULL,  a1 CHAR(64),  a2 CHAR(64),  PRIMARY KEY(pk_col1),  KEY t1_a1_idx (a1),  KEY t1_a1_a2_idx (a1, a2)) ENGINE=INNODB;
INSERT INTO t1 (pk_col1, a1, a2) VALUES (1,'a','b'), (2,'a','b'), (3,'d','c'),                                        (4,'b','c'), (5,'c','d'), (6,'a','b');
CREATE TABLE t2 (  pk_col1 INT NOT NULL,  pk_col2 INT NOT NULL,  a1 CHAR(64),  a2 CHAR(64),  PRIMARY KEY(pk_col1, pk_col2),  KEY t2_a1_idx (a1),  KEY t2_a1_a2_idx (a1, a2)) ENGINE=INNODB;
INSERT INTO t2 (pk_col1, pk_col2, a1, a2) VALUES (1,1,'a','b'),(1,2,'a','b'),                                                 (1,3,'d','c'),(1,4,'b','c'),                                                 (2,1,'c','d'),(3,1,'a','b');
ANALYZE TABLE t1;
ANALYZE TABLE t2;
SELECT t2.a1, t2.a2FROM t1 FORCE INDEX(t1_a1_a2_idx) JOIN t2 ON (t1.pk_col1 = t2.pk_col2)WHERE t1.a1 > 'a';
connect (ce, localhost, root,, test);
connect (cq, localhost, root,, test);
connection cq;
DROP TABLE t1, t2;
CREATE TABLE t1 (v3 INT, KEY(v3));
CREATE view v1 AS SELECT v3  FROM t1 FORCE KEY (v3) GROUP BY v3;
eval EXPLAIN $query1;
eval $query1;
DROP VIEW v1;
DROP TABLE t1;
      connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
SET optimizer_trace="enabled=on";
eval $query;
SELECT TRACE INTO @trace FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
SELECT @trace RLIKE "skipped_due_to_force_index";
SET optimizer_trace="enabled=off";
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
SET optimizer_trace="enabled=on";
eval $query;
SELECT TRACE INTO @trace FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
SELECT @trace RLIKE "skipped_due_to_force_index";
SET optimizer_trace="enabled=off";
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
SET optimizer_trace="enabled=on";
eval $query;
SELECT TRACE INTO @trace FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
SELECT @trace RLIKE "skipped_due_to_force_index";
SET optimizer_trace="enabled=off";
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
SET optimizer_trace="enabled=on";
eval $query;
SELECT TRACE INTO @trace FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
SELECT @trace RLIKE "skipped_due_to_force_index";
SET optimizer_trace="enabled=off";
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
SET optimizer_trace="enabled=on";
eval $query;
SELECT TRACE INTO @trace FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
SELECT @trace RLIKE "skipped_due_to_force_index";
SET optimizer_trace="enabled=off";
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
SET optimizer_trace="enabled=on";
eval $query;
SELECT TRACE INTO @trace FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
SELECT @trace RLIKE "skipped_due_to_force_index";
SET optimizer_trace="enabled=off";
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
SET optimizer_trace="enabled=on";
eval $query;
SELECT TRACE INTO @trace FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
SELECT @trace RLIKE "skipped_due_to_force_index";
SET optimizer_trace="enabled=off";
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
SET optimizer_trace="enabled=on";
eval $query;
SELECT TRACE INTO @trace FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
SELECT @trace RLIKE "skipped_due_to_force_index";
SET optimizer_trace="enabled=off";
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
connection cq;
eval SET DEBUG_SYNC= '$point SIGNAL ready_for_explain WAIT_FOR explained';
send_eval $query;
connection ce;
  let $fmt= FORMAT=JSON;
  let $fmt= FORMAT=TRADITIONAL;
SET DEBUG_SYNC= 'now WAIT_FOR ready_for_explain';
SET DEBUG_SYNC= 'after_explain_other SIGNAL explained';
connection cq;
reap;
SET DEBUG_SYNC= 'RESET';
SET optimizer_trace="enabled=on";
eval $query;
SELECT TRACE INTO @trace FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
SELECT @trace RLIKE "skipped_due_to_force_index";
SET optimizer_trace="enabled=off";
CREATE TABLE t1 (  pk_col1 INT NOT NULL,  a1 CHAR(64),  a2 CHAR(64),  PRIMARY KEY(pk_col1),  KEY t1_a1_idx (a1),  KEY t1_a1_a2_idx (a1, a2)) ENGINE=INNODB;
INSERT INTO t1 (pk_col1, a1, a2) VALUES (1,'a','b'), (2,'a','b'), (3,'d','c'),                                        (4,'b','c'), (5,'c','d'), (6,'a','b');
CREATE TABLE t2 (  pk_col1 INT NOT NULL,  pk_col2 INT NOT NULL,  a1 CHAR(64),  a2 CHAR(64),  PRIMARY KEY(pk_col1, pk_col2),  KEY t2_a1_idx (a1),  KEY t2_a1_a2_idx (a1, a2)) ENGINE=INNODB;
INSERT INTO t2 (pk_col1, pk_col2, a1, a2) VALUES (1,1,'a','b'),(1,2,'a','b'),                                                 (1,3,'d','c'),(1,4,'b','c'),                                                 (2,1,'c','d'),(3,1,'a','b');
ANALYZE TABLE t1;
ANALYZE TABLE t2;
SELECT t2.a1, t2.a2FROM t1 FORCE INDEX(t1_a1_a2_idx) JOIN t2 ON (t1.pk_col1 = t2.pk_col2)WHERE t1.a1 > 'a';
connect (ce, localhost, root,, test);
connect (cq, localhost, root,, test);
connection cq;
DROP TABLE t1, t2;
CREATE TABLE t1 (v3 INT, KEY(v3));
CREATE view v1 AS SELECT v3  FROM t1 FORCE KEY (v3) GROUP BY v3;
eval EXPLAIN $query1;
eval $query1;
DROP VIEW v1;
DROP TABLE t1;
