drop temporary table if exists t1;
drop table if exists t1, t2;
drop procedure if exists p_verify_reprepare_count;
drop procedure if exists p1;
drop function if exists f1;
drop view if exists t1;
drop schema if exists mysqltest;
delimiter |;
create procedure p_verify_reprepare_count(expected int)begin  declare old_reprepare_count int default @reprepare_count;
  select variable_value from  performance_schema.session_status where  variable_name='com_stmt_reprepare'  into @reprepare_count;
  if old_reprepare_count + expected <> @reprepare_count then    select concat("Expected: ", expected,                   ", actual: ", @reprepare_count - old_reprepare_count)    as "ERROR";
  else    select '' as "SUCCESS";
  end if;
end|delimiter ;|set @reprepare_count= 0;
flush status;
drop table if exists t1;
create table t1 (a int, b int);
prepare stmt from "select a from t1";
execute stmt;
call p_verify_reprepare_count(0);
alter table t1 add column c int;
execute stmt;
call p_verify_reprepare_count(1);
execute stmt;
call p_verify_reprepare_count(0);
alter table t1 drop column b;
execute stmt;
call p_verify_reprepare_count(1);
execute stmt;
call p_verify_reprepare_count(0);
alter table t1 comment "My best table";
execute stmt;
call p_verify_reprepare_count(1);
execute stmt;
call p_verify_reprepare_count(0);
drop table t1;
deallocate prepare stmt;
create table t1 (a int);
prepare stmt1 from "truncate t1";
prepare stmt2 from "select 1 as my_column from t1";
prepare stmt3 from "select 1 as my_column from (select * from t1) as t2";
prepare stmt4 from"select 1 as my_column from (select 1) as t2 where exists (select 1 from t1)";
prepare stmt5 from "select * from (select 1 as b) as t2, t1";
prepare stmt6 from "select * from t1 union all select 1.5";
prepare stmt7 from "select 1 as my_column union all select 1 from t1";
prepare stmt8 from "insert into t1 values(1),(2)";
prepare stmt9 from "update t1 set a = 3 where a = 2";
prepare stmt10 from "delete from t1 where a = 1";
while ($num)      eval execute stmt$num;
      dec $num;
call p_verify_reprepare_count(0);
drop table t1;
while ($num)      eval execute stmt$num;
   dec $num;
call p_verify_reprepare_count(0);
while ($num)   eval deallocate prepare stmt$num;
   dec $num;
create table t1 (a int, b int);
insert into t1 values(1,1),(2,2),(3,3);
create table t2 like t1;
insert into t1 values(2,2);
prepare stmt1 from "select a,b from t1";
prepare stmt2 from "select a,b from (select * from t1) as t1";
prepare stmt3 from "select * from t1 where a = 2 and b = 2";
prepare stmt4 from "select * from t2 where (a,b) in (select * from t1)";
prepare stmt5 from "select * from t1 union select * from t2";
prepare stmt6 from "select * from t1 union all select * from t2";
prepare stmt7 from "insert into t1 set a = 4, b = 4";
prepare stmt8 from "insert into t1 select * from t2";
while ($num)      eval execute stmt$num;
      dec $num;
call p_verify_reprepare_count(0);
alter table t1 drop column b;
while ($num)   eval execute stmt$num;
   # A reprepare is needed, because layout change of t1 affects statement.   call p_verify_reprepare_count(1);
   dec $num;
while ($num)   eval execute stmt$num;
   call p_verify_reprepare_count(1);
   dec $num;
eval execute stmt8;
call p_verify_reprepare_count(1);
alter table t2 add column c int;
eval execute stmt8;
call p_verify_reprepare_count(1);
while ($num)   eval deallocate prepare stmt$num;
   dec $num;
drop table t1;
drop table t2;
create table t1 (a int, b int, primary key(b),unique index t1_unq_idx(a));
insert into t1 set a = 0, b = 0;
insert into t1 select a + 1, b + 1 from t1;
insert into t1 select a + 2, b + 2 from t1;
insert into t1 select a + 4, b + 4 from t1;
insert into t1 select a + 8, b + 8 from t1;
    query_get_value(explain select avg(a) from t1, possible_keys, 1);
    query_get_value(explain select avg(a) from t1, Extra, 1);
prepare stmt from "select avg(a) from t1";
execute stmt;
call p_verify_reprepare_count(0);
execute stmt;
call p_verify_reprepare_count(0);
alter table t1 drop index t1_unq_idx;
    query_get_value(explain select avg(a) from t1, possible_keys, 1);
    query_get_value(explain select avg(a) from t1, Extra, 1);
execute stmt;
call p_verify_reprepare_count(1);
execute stmt;
call p_verify_reprepare_count(0);
alter table t1 add unique index t1_unq_idx(a);
    query_get_value(explain select avg(a) from t1, possible_keys, 1);
    query_get_value(explain select avg(a) from t1, Extra, 1);
execute stmt;
call p_verify_reprepare_count(1);
execute stmt;
call p_verify_reprepare_count(0);
deallocate prepare stmt;
drop table t1;
create table t1 (a int);
prepare stmt from "insert into t1 values(1)";
execute stmt;
call p_verify_reprepare_count(0);
drop table t1;
create view t1 as select 1;
execute stmt;
call p_verify_reprepare_count(1);
drop view t1;
create table t2 (a int);
create view t1 as select * from t2 with check option;
execute stmt;
call p_verify_reprepare_count(1);
execute stmt;
call p_verify_reprepare_count(0);
select * from t1;
deallocate prepare stmt;
drop view t1;
drop table t2;
create temporary table t1 as select 1 as a;
delimiter |;
create procedure p1()begin  drop temporary table t1;
end|create function f1() returns intbegin  call p1();
  return 1;
end|delimiter ;|prepare stmt from "select f1() as my_column, a from t1";
execute stmt;
call p_verify_reprepare_count(0);
select * from t1;
prepare stmt from "select a, f1() as my_column from t1";
execute stmt;
call p_verify_reprepare_count(0);
select * from t1;
prepare stmt from "select f1() as my_column, count(*) from t1";
execute stmt;
call p_verify_reprepare_count(0);
select * from t1;
prepare stmt from "select count(*), f1() as my_column from t1";
execute stmt;
call p_verify_reprepare_count(0);
select * from t1;
prepare stmt from "select 1 as my_column from (select 1) as t2                   where exists (select f1() from t1)";
execute stmt;
call p_verify_reprepare_count(0);
execute stmt;
call p_verify_reprepare_count(0);
select * from t1;
prepare stmt from "select f1()";
execute stmt;
call p_verify_reprepare_count(0);
execute stmt;
call p_verify_reprepare_count(0);
drop function f1;
drop procedure p1;
deallocate prepare stmt;
create temporary table t1 as select 1 as a;
delimiter |;
create procedure p1()begin  drop temporary table t1;
  create temporary table t1 as select 'abc' as a;
end|create function f1() returns intbegin  call p1();
  return 1;
end|delimiter ;|prepare stmt from "select count(*), f1() as my_column from t1";
execute stmt;
call p_verify_reprepare_count(0);
select * from t1;
deallocate prepare stmt;
prepare stmt from "call p1";
execute stmt;
drop procedure p1;
create schema mysqltest;
delimiter |;
create procedure mysqltest.p1()begin   drop schema mysqltest;
   create schema mysqltest;
end|delimiter ;|execute stmt;
call p_verify_reprepare_count(0);
execute stmt;
call p_verify_reprepare_count(0);
deallocate prepare stmt;
drop schema mysqltest;
drop temporary table t1;
create temporary table t1 as select 1 as a;
prepare stmt from "select 1 from t1 having count(*) = f1()";
execute stmt;
call p_verify_reprepare_count(0);
deallocate prepare stmt;
drop temporary table t1;
drop temporary table if exists t1;
drop table if exists t1, t2;
drop procedure if exists p_verify_reprepare_count;
drop procedure if exists p1;
drop function if exists f1;
drop view if exists t1;
drop schema if exists mysqltest;
