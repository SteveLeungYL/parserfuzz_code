SET SESSION information_schema_stats_expiry=0;
CREATE TABLE t1 ( a INT, KEY (a) );
SHOW KEYS FROM t1;
ALTER TABLE t1 ALTER INDEX a INVISIBLE;
SHOW KEYS FROM t1;
ALTER TABLE t1 ALTER INDEX a VISIBLE;
SHOW KEYS FROM t1;
DROP TABLE t1;
CREATE TABLE t1 ( a INT, b INT );
CREATE INDEX a_invisible ON t1(a) INVISIBLE;
CREATE INDEX b_visible ON t1(a) VISIBLE;
CREATE INDEX a_b_invisible ON t1(a, b) INVISIBLE;
SHOW INDEXES FROM t1;
DROP TABLE t1;
CREATE TABLE t1 ( a INT, KEY (a) );
CREATE TABLE t2 ( a INT, KEY (a) INVISIBLE );
INSERT INTO t1 VALUES (1), (2), (3), (4), (5);
INSERT INTO t2 SELECT * FROM t1;
ANALYZE TABLE t1, t2;
EXPLAIN SELECT a FROM t1;
ALTER TABLE t1 ALTER INDEX a INVISIBLE;
EXPLAIN SELECT a FROM t1;
ALTER TABLE t1 ALTER INDEX a VISIBLE;
EXPLAIN SELECT a FROM t1;
EXPLAIN SELECT a FROM t2;
ALTER TABLE t2 ALTER INDEX a VISIBLE;
EXPLAIN SELECT a FROM t2;
DROP TABLE t1, t2;
CREATE TABLE t1 (  a INT, INDEX (a),  b INT, INDEX (b) INVISIBLE);
SHOW INDEXES FROM t1;
ALTER TABLE t1 RENAME INDEX a TO a1;
ALTER TABLE t1 RENAME INDEX b TO b1;
SHOW INDEXES FROM t1;
ALTER TABLE t1 ALTER INDEX a1 INVISIBLE;
ALTER TABLE t1 ALTER INDEX b1 VISIBLE;
SHOW INDEXES FROM t1;
DROP TABLE t1;
CREATE TABLE t1 (  a INT,  b INT,  c INT,  INDEX (a) VISIBLE,  INDEX (b) INVISIBLE,  INDEX (c));
SHOW CREATE TABLE t1;
DROP TABLE t1;
CREATE TABLE t1 ( a INT, PRIMARY KEY (a) INVISIBLE );
ALTER TABLE t1 ALTER INDEX PRIMARY INVISIBLE;
ALTER TABLE t1 ADD PRIMARY KEY (a) INVISIBLE;
CREATE TABLE t1( a INT );
ALTER TABLE t1 ADD CONSTRAINT pk PRIMARY KEY (a);
SHOW INDEXES FROM t1;
DROP TABLE t1;
CREATE TABLE t1( a INT, PRIMARY KEY pk (a) );
SHOW INDEXES FROM t1;
DROP TABLE t1;
CREATE TABLE t1 (  a INT, KEY (a),  b INT, KEY (b) INVISIBLE);
ALTER TABLE t1 RENAME INDEX no_such_index TO x;
ALTER TABLE t1 ALTER INDEX no_such_index INVISIBLE;
ALTER TABLE t1 ALTER INDEX a INVISIBLE, ALTER INDEX a VISIBLE;
ALTER TABLE t1 ALTER INDEX a INVISIBLE, ALTER INDEX b VISIBLE;
SHOW INDEXES FROM t1;
ALTER TABLE t1 RENAME INDEX a TO x, RENAME INDEX x TO a;
ALTER TABLE t1 RENAME INDEX a TO x, ALTER INDEX x INVISIBLE;
ALTER TABLE t1 RENAME INDEX a TO x, ALTER INDEX a VISIBLE;
ALTER TABLE t1 ALTER INDEX a VISIBLE, RENAME INDEX a TO x;
INSERT INTO t1 VALUES (1, 1), (2, 2), (3, 3);
ANALYZE TABLE t1;
ALTER TABLE t1 ALTER INDEX a INVISIBLE, ALGORITHM = COPY;
ANALYZE TABLE t1;
SHOW INDEXES FROM t1;
ALTER TABLE t1 ALTER INDEX a VISIBLE, ALGORITHM = INPLACE;
ANALYZE TABLE t1;
SHOW INDEXES FROM t1;
ALTER TABLE t1 ALTER INDEX a INVISIBLE, ALGORITHM = DEFAULT;
ANALYZE TABLE t1;
SHOW INDEXES FROM t1;
ALTER TABLE t1 ALTER INDEX a VISIBLE;
ANALYZE TABLE t1;
SHOW INDEXES FROM t1;
ALTER TABLE t1 ADD INDEX ab(a, b), ALTER INDEX ab INVISIBLE;
DROP TABLE t1;
CREATE TABLE t1 ( a INT, UNIQUE KEY (a) INVISIBLE );
CREATE TABLE t2 ( a INT UNIQUE );
CREATE TABLE t3 ( a INT NOT NULL, KEY (a) INVISIBLE, b INT PRIMARY KEY );
CREATE TABLE t4 ( a INT NOT NULL, UNIQUE KEY (a) INVISIBLE,                  b INT PRIMARY KEY AUTO_INCREMENT );
CREATE TABLE t5 ( a INT, b INT, c INT, UNIQUE KEY (a, b, c) INVISIBLE );
INSERT INTO t1 VALUES (1);
INSERT INTO t1 VALUES (1);
ALTER TABLE t2 ALTER INDEX a INVISIBLE;
INSERT INTO t2 VALUES (1);
INSERT INTO t2 VALUES (1);
INSERT INTO t3(a) VALUES (NULL);
INSERT INTO t4(a) VALUES (NULL);
INSERT INTO t4(a) VALUES (1);
INSERT INTO t4(a) VALUES (1);
INSERT INTO t5 VALUES (1, 2, 3);
INSERT INTO t5 VALUES (1, 2, 3);
DROP TABLE t1, t2, t3, t4, t5;
CREATE TABLE t1 ( a INT NOT NULL, UNIQUE KEY (a) );
ALTER TABLE t1 ALTER INDEX a INVISIBLE;
EXPLAINSELECT * FROM t1;
SELECT * FROM t1;
DROP TABLE t1;
CREATE TABLE t1 (  a INT NOT NULL,  b INT NOT NULL PRIMARY KEY,  UNIQUE KEY (a) INVISIBLE);
SHOW INDEXES FROM t1;
DROP TABLE t1;
CREATE TABLE t1 (  a INT NOT NULL,  b INT NOT NULL,  UNIQUE KEY (a),  UNIQUE KEY (b) INVISIBLE);
SHOW INDEXES FROM t1;
DROP TABLE t1;
CREATE TABLE t1 ( a INT NOT NULL, UNIQUE KEY (a) INVISIBLE );
CREATE TABLE t1 ( a INT NOT NULL, KEY (a) INVISIBLE, b INT NOT NULL UNIQUE );
CREATE TABLE t2 ( a INT PRIMARY KEY, b INT, INDEX(b) INVISIBLE);
ALTER TABLE t2 ALTER INDEX b VISIBLE;
DROP TABLE t1, t2;
CREATE TEMPORARY TABLE t1 ( a INT, KEY (a) INVISIBLE );
SHOW INDEXES FROM t1;
EXPLAIN SELECT a FROM t1;
DROP TABLE t1;
CREATE TABLE t1 (  fid INT NOT NULL AUTO_INCREMENT PRIMARY KEY,  g GEOMETRY NOT NULL SRID 0,  SPATIAL KEY(g));
ANALYZE TABLE t1;
while ($1)  eval INSERT INTO t1 (g) VALUES (ST_GeomFromText('LineString($1 $1, $2 $2)'));
  dec $1;
  inc $2;
EXPLAIN SELECT *FROM t1WHERE ST_Within(g,                ST_GeomFromText('Polygon((140 140,160 140,160 160,140 140))'));
ALTER TABLE t1 ALTER INDEX g INVISIBLE;
SHOW INDEXES FROM t1;
DROP TABLE t1;
SELECT 1FROM information_schema.tablesWHERE table_schema = 'test' AND table_name = 't1' AND engine = 'ndbcluster';
CREATE TABLE t1 (  fid INT NOT NULL AUTO_INCREMENT PRIMARY KEY,  g GEOMETRY NOT NULL SRID 0,  SPATIAL KEY(g));
CREATE TABLE t1 (a VARCHAR(200), b TEXT, FULLTEXT (a,b));
INSERT INTO t1 VALUES('Some data', 'for full-text search');
ANALYZE TABLE t1;
SELECT * FROM t1 WHERE MATCH(a, b) AGAINST ("collections" IN BOOLEAN MODE);
ALTER TABLE t1 ALTER INDEX a INVISIBLE;
SHOW INDEXES FROM t1;
DROP TABLE t1;
CREATE TABLE t1 ( a INT AUTO_INCREMENT, KEY ( a ) );
INSERT INTO t1 VALUES (), (), ();
ANALYZE TABLE t1;
EXPLAIN SELECT a FROM t1;
ALTER TABLE t1 ALTER INDEX a INVISIBLE;
SHOW INDEXES FROM t1;
EXPLAIN SELECT a FROM t1;
DROP TABLE t1;
CREATE TABLE t1 ( a INT AUTO_INCREMENT, KEY ( a ) );
CREATE TABLE t1 ( a INT, KEY(a) INVISIBLE );
SELECT * FROM t1 FORCE INDEX(a);
SELECT * FROM t1 FORCE INDEX FOR JOIN (a);
SELECT * FROM t1 FORCE INDEX FOR ORDER BY (a);
SELECT * FROM t1 FORCE INDEX FOR GROUP BY (a);
SELECT * FROM t1 USE INDEX(a);
SELECT * FROM t1 USE INDEX FOR JOIN (a);
SELECT * FROM t1 USE INDEX FOR ORDER BY (a);
SELECT * FROM t1 USE INDEX FOR GROUP BY (a);
SELECT * FROM t1 IGNORE INDEX(a);
SELECT * FROM t1 IGNORE INDEX FOR JOIN (a);
SELECT * FROM t1 IGNORE INDEX FOR ORDER BY (a);
SELECT * FROM t1 IGNORE INDEX FOR GROUP BY (a);
DROP TABLE t1;
CREATE TABLE t1 (  a CHAR(2) NOT NULL,  b CHAR(2) NOT NULL,  c INT(10) UNSIGNED NOT NULL,  d VARCHAR(255) DEFAULT NULL,  e VARCHAR(1000) DEFAULT NULL,  KEY (a) INVISIBLE,  KEY (b)) PARTITION BY KEY (a) PARTITIONS 20;
INSERT INTO t1 (a, b, c, d, e) VALUES('07', '03', 343, '1', '07_03_343'),('01', '04', 343, '2', '01_04_343'),('01', '06', 343, '3', '01_06_343'),('01', '07', 343, '4', '01_07_343'),('01', '08', 343, '5', '01_08_343'),('01', '09', 343, '6', '01_09_343'),('03', '03', 343, '7', '03_03_343'),('03', '06', 343, '8', '03_06_343'),('03', '07', 343, '9', '03_07_343'),('04', '03', 343, '10', '04_03_343'),('04', '06', 343, '11', '04_06_343'),('05', '03', 343, '12', '05_03_343'),('11', '03', 343, '13', '11_03_343'),('11', '04', 343, '14', '11_04_343');
ANALYZE TABLE t1;
EXPLAIN SELECT a FROM t1;
EXPLAIN SELECT b FROM t1;
EXPLAIN SELECT * FROM t1 WHERE a = '04';
ALTER TABLE t1 ALTER INDEX a VISIBLE;
EXPLAIN SELECT a FROM t1;
EXPLAIN SELECT * FROM t1 WHERE a = '04';
ALTER TABLE t1 ALTER INDEX b INVISIBLE;
EXPLAIN SELECT b FROM t1;
DROP TABLE t1;
CREATE TABLE t1 ( a INT GENERATED ALWAYS AS (1), KEY (a) INVISIBLE );
SHOW INDEXES FROM t1;
EXPLAIN SELECT a FROM t1;
DROP TABLE t1;
CREATE TABLE t1p ( a INT KEY );
CREATE TABLE t1c ( t1p_a INT );
ALTER TABLE t1c ADD CONSTRAINT FOREIGN KEY ( t1p_a ) REFERENCES t1p( a );
ALTER TABLE t1c ALTER INDEX t1p_a INVISIBLE;
INSERT INTO t1c VALUES ( 1 );
SELECT * FROM t1c;
DROP TABLE t1c, t1p;
CREATE TABLE t1 ( a INT, KEY( a ) INVISIBLE );
INSERT INTO t1 VALUES (1), (2), (3), (4), (5), (6), (7), (8), (9), (10);
EXPLAIN SELECT a FROM t1;
SELECT @@optimizer_switch;
EXPLAIN SELECT a FROM t1;
SET @@optimizer_switch='use_invisible_indexes=on';
EXPLAIN SELECT a FROM t1;
SELECT @@optimizer_switch;
EXPLAIN SELECT a FROM t1;
SELECT @@optimizer_switch;
SET @@optimizer_switch='use_invisible_indexes=off';
EXPLAIN SELECT a FROM t1;
EXPLAIN SELECT a FROM t1;
DROP TABLE t1;
CREATE TABLE t1 ( id INT NOT NULL PRIMARY KEY, b INT NOT NULL, INDEX (b) INVISIBLE);
INSERT INTO t1 VALUES (1, 1), (2,2),(3,3),(4,4),(5,5);
ANALYZE TABLE t1;
SET optimizer_switch="use_invisible_indexes=on";
EXPLAIN SELECT * FROM t1 FORCE INDEX (b) WHERE b = 3;
SET optimizer_switch="use_invisible_indexes=default";
EXPLAIN SELECT * FROM t1 FORCE INDEX (b) WHERE b = 3;
DROP TABLE t1;
SET SESSION information_schema_stats_expiry=0;
CREATE TABLE t1 ( a INT, KEY (a) );
SHOW KEYS FROM t1;
ALTER TABLE t1 ALTER INDEX a INVISIBLE;
SHOW KEYS FROM t1;
ALTER TABLE t1 ALTER INDEX a VISIBLE;
SHOW KEYS FROM t1;
DROP TABLE t1;
CREATE TABLE t1 ( a INT, b INT );
CREATE INDEX a_invisible ON t1(a) INVISIBLE;
CREATE INDEX b_visible ON t1(a) VISIBLE;
CREATE INDEX a_b_invisible ON t1(a, b) INVISIBLE;
SHOW INDEXES FROM t1;
DROP TABLE t1;
CREATE TABLE t1 ( a INT, KEY (a) );
CREATE TABLE t2 ( a INT, KEY (a) INVISIBLE );
INSERT INTO t1 VALUES (1), (2), (3), (4), (5);
INSERT INTO t2 SELECT * FROM t1;
ANALYZE TABLE t1, t2;
EXPLAIN SELECT a FROM t1;
ALTER TABLE t1 ALTER INDEX a INVISIBLE;
EXPLAIN SELECT a FROM t1;
ALTER TABLE t1 ALTER INDEX a VISIBLE;
EXPLAIN SELECT a FROM t1;
EXPLAIN SELECT a FROM t2;
ALTER TABLE t2 ALTER INDEX a VISIBLE;
EXPLAIN SELECT a FROM t2;
DROP TABLE t1, t2;
CREATE TABLE t1 (  a INT, INDEX (a),  b INT, INDEX (b) INVISIBLE);
SHOW INDEXES FROM t1;
ALTER TABLE t1 RENAME INDEX a TO a1;
ALTER TABLE t1 RENAME INDEX b TO b1;
SHOW INDEXES FROM t1;
ALTER TABLE t1 ALTER INDEX a1 INVISIBLE;
ALTER TABLE t1 ALTER INDEX b1 VISIBLE;
SHOW INDEXES FROM t1;
DROP TABLE t1;
CREATE TABLE t1 (  a INT,  b INT,  c INT,  INDEX (a) VISIBLE,  INDEX (b) INVISIBLE,  INDEX (c));
SHOW CREATE TABLE t1;
DROP TABLE t1;
CREATE TABLE t1 ( a INT, PRIMARY KEY (a) INVISIBLE );
ALTER TABLE t1 ALTER INDEX PRIMARY INVISIBLE;
ALTER TABLE t1 ADD PRIMARY KEY (a) INVISIBLE;
CREATE TABLE t1( a INT );
ALTER TABLE t1 ADD CONSTRAINT pk PRIMARY KEY (a);
SHOW INDEXES FROM t1;
DROP TABLE t1;
CREATE TABLE t1( a INT, PRIMARY KEY pk (a) );
SHOW INDEXES FROM t1;
DROP TABLE t1;
CREATE TABLE t1 (  a INT, KEY (a),  b INT, KEY (b) INVISIBLE);
ALTER TABLE t1 RENAME INDEX no_such_index TO x;
ALTER TABLE t1 ALTER INDEX no_such_index INVISIBLE;
ALTER TABLE t1 ALTER INDEX a INVISIBLE, ALTER INDEX a VISIBLE;
ALTER TABLE t1 ALTER INDEX a INVISIBLE, ALTER INDEX b VISIBLE;
SHOW INDEXES FROM t1;
ALTER TABLE t1 RENAME INDEX a TO x, RENAME INDEX x TO a;
ALTER TABLE t1 RENAME INDEX a TO x, ALTER INDEX x INVISIBLE;
ALTER TABLE t1 RENAME INDEX a TO x, ALTER INDEX a VISIBLE;
ALTER TABLE t1 ALTER INDEX a VISIBLE, RENAME INDEX a TO x;
INSERT INTO t1 VALUES (1, 1), (2, 2), (3, 3);
ANALYZE TABLE t1;
ALTER TABLE t1 ALTER INDEX a INVISIBLE, ALGORITHM = COPY;
ANALYZE TABLE t1;
SHOW INDEXES FROM t1;
ALTER TABLE t1 ALTER INDEX a VISIBLE, ALGORITHM = INPLACE;
ANALYZE TABLE t1;
SHOW INDEXES FROM t1;
ALTER TABLE t1 ALTER INDEX a INVISIBLE, ALGORITHM = DEFAULT;
ANALYZE TABLE t1;
SHOW INDEXES FROM t1;
ALTER TABLE t1 ALTER INDEX a VISIBLE;
ANALYZE TABLE t1;
SHOW INDEXES FROM t1;
ALTER TABLE t1 ADD INDEX ab(a, b), ALTER INDEX ab INVISIBLE;
DROP TABLE t1;
CREATE TABLE t1 ( a INT, UNIQUE KEY (a) INVISIBLE );
CREATE TABLE t2 ( a INT UNIQUE );
CREATE TABLE t3 ( a INT NOT NULL, KEY (a) INVISIBLE, b INT PRIMARY KEY );
CREATE TABLE t4 ( a INT NOT NULL, UNIQUE KEY (a) INVISIBLE,                  b INT PRIMARY KEY AUTO_INCREMENT );
CREATE TABLE t5 ( a INT, b INT, c INT, UNIQUE KEY (a, b, c) INVISIBLE );
INSERT INTO t1 VALUES (1);
INSERT INTO t1 VALUES (1);
ALTER TABLE t2 ALTER INDEX a INVISIBLE;
INSERT INTO t2 VALUES (1);
INSERT INTO t2 VALUES (1);
INSERT INTO t3(a) VALUES (NULL);
INSERT INTO t4(a) VALUES (NULL);
INSERT INTO t4(a) VALUES (1);
INSERT INTO t4(a) VALUES (1);
INSERT INTO t5 VALUES (1, 2, 3);
INSERT INTO t5 VALUES (1, 2, 3);
DROP TABLE t1, t2, t3, t4, t5;
CREATE TABLE t1 ( a INT NOT NULL, UNIQUE KEY (a) );
ALTER TABLE t1 ALTER INDEX a INVISIBLE;
EXPLAINSELECT * FROM t1;
SELECT * FROM t1;
DROP TABLE t1;
CREATE TABLE t1 (  a INT NOT NULL,  b INT NOT NULL PRIMARY KEY,  UNIQUE KEY (a) INVISIBLE);
SHOW INDEXES FROM t1;
DROP TABLE t1;
CREATE TABLE t1 (  a INT NOT NULL,  b INT NOT NULL,  UNIQUE KEY (a),  UNIQUE KEY (b) INVISIBLE);
SHOW INDEXES FROM t1;
DROP TABLE t1;
CREATE TABLE t1 ( a INT NOT NULL, UNIQUE KEY (a) INVISIBLE );
CREATE TABLE t1 ( a INT NOT NULL, KEY (a) INVISIBLE, b INT NOT NULL UNIQUE );
CREATE TABLE t2 ( a INT PRIMARY KEY, b INT, INDEX(b) INVISIBLE);
ALTER TABLE t2 ALTER INDEX b VISIBLE;
DROP TABLE t1, t2;
CREATE TEMPORARY TABLE t1 ( a INT, KEY (a) INVISIBLE );
SHOW INDEXES FROM t1;
EXPLAIN SELECT a FROM t1;
DROP TABLE t1;
CREATE TABLE t1 (  fid INT NOT NULL AUTO_INCREMENT PRIMARY KEY,  g GEOMETRY NOT NULL SRID 0,  SPATIAL KEY(g));
ANALYZE TABLE t1;
while ($1)  eval INSERT INTO t1 (g) VALUES (ST_GeomFromText('LineString($1 $1, $2 $2)'));
  dec $1;
  inc $2;
EXPLAIN SELECT *FROM t1WHERE ST_Within(g,                ST_GeomFromText('Polygon((140 140,160 140,160 160,140 140))'));
ALTER TABLE t1 ALTER INDEX g INVISIBLE;
SHOW INDEXES FROM t1;
DROP TABLE t1;
SELECT 1FROM information_schema.tablesWHERE table_schema = 'test' AND table_name = 't1' AND engine = 'ndbcluster';
CREATE TABLE t1 (  fid INT NOT NULL AUTO_INCREMENT PRIMARY KEY,  g GEOMETRY NOT NULL SRID 0,  SPATIAL KEY(g));
CREATE TABLE t1 (a VARCHAR(200), b TEXT, FULLTEXT (a,b));
INSERT INTO t1 VALUES('Some data', 'for full-text search');
ANALYZE TABLE t1;
SELECT * FROM t1 WHERE MATCH(a, b) AGAINST ("collections" IN BOOLEAN MODE);
ALTER TABLE t1 ALTER INDEX a INVISIBLE;
SHOW INDEXES FROM t1;
DROP TABLE t1;
CREATE TABLE t1 ( a INT AUTO_INCREMENT, KEY ( a ) );
INSERT INTO t1 VALUES (), (), ();
ANALYZE TABLE t1;
EXPLAIN SELECT a FROM t1;
ALTER TABLE t1 ALTER INDEX a INVISIBLE;
SHOW INDEXES FROM t1;
EXPLAIN SELECT a FROM t1;
DROP TABLE t1;
CREATE TABLE t1 ( a INT AUTO_INCREMENT, KEY ( a ) );
CREATE TABLE t1 ( a INT, KEY(a) INVISIBLE );
SELECT * FROM t1 FORCE INDEX(a);
SELECT * FROM t1 FORCE INDEX FOR JOIN (a);
SELECT * FROM t1 FORCE INDEX FOR ORDER BY (a);
SELECT * FROM t1 FORCE INDEX FOR GROUP BY (a);
SELECT * FROM t1 USE INDEX(a);
SELECT * FROM t1 USE INDEX FOR JOIN (a);
SELECT * FROM t1 USE INDEX FOR ORDER BY (a);
SELECT * FROM t1 USE INDEX FOR GROUP BY (a);
SELECT * FROM t1 IGNORE INDEX(a);
SELECT * FROM t1 IGNORE INDEX FOR JOIN (a);
SELECT * FROM t1 IGNORE INDEX FOR ORDER BY (a);
SELECT * FROM t1 IGNORE INDEX FOR GROUP BY (a);
DROP TABLE t1;
CREATE TABLE t1 (  a CHAR(2) NOT NULL,  b CHAR(2) NOT NULL,  c INT(10) UNSIGNED NOT NULL,  d VARCHAR(255) DEFAULT NULL,  e VARCHAR(1000) DEFAULT NULL,  KEY (a) INVISIBLE,  KEY (b)) PARTITION BY KEY (a) PARTITIONS 20;
INSERT INTO t1 (a, b, c, d, e) VALUES('07', '03', 343, '1', '07_03_343'),('01', '04', 343, '2', '01_04_343'),('01', '06', 343, '3', '01_06_343'),('01', '07', 343, '4', '01_07_343'),('01', '08', 343, '5', '01_08_343'),('01', '09', 343, '6', '01_09_343'),('03', '03', 343, '7', '03_03_343'),('03', '06', 343, '8', '03_06_343'),('03', '07', 343, '9', '03_07_343'),('04', '03', 343, '10', '04_03_343'),('04', '06', 343, '11', '04_06_343'),('05', '03', 343, '12', '05_03_343'),('11', '03', 343, '13', '11_03_343'),('11', '04', 343, '14', '11_04_343');
ANALYZE TABLE t1;
EXPLAIN SELECT a FROM t1;
EXPLAIN SELECT b FROM t1;
EXPLAIN SELECT * FROM t1 WHERE a = '04';
ALTER TABLE t1 ALTER INDEX a VISIBLE;
EXPLAIN SELECT a FROM t1;
EXPLAIN SELECT * FROM t1 WHERE a = '04';
ALTER TABLE t1 ALTER INDEX b INVISIBLE;
EXPLAIN SELECT b FROM t1;
DROP TABLE t1;
CREATE TABLE t1 ( a INT GENERATED ALWAYS AS (1), KEY (a) INVISIBLE );
SHOW INDEXES FROM t1;
EXPLAIN SELECT a FROM t1;
DROP TABLE t1;
CREATE TABLE t1p ( a INT KEY );
CREATE TABLE t1c ( t1p_a INT );
ALTER TABLE t1c ADD CONSTRAINT FOREIGN KEY ( t1p_a ) REFERENCES t1p( a );
ALTER TABLE t1c ALTER INDEX t1p_a INVISIBLE;
INSERT INTO t1c VALUES ( 1 );
SELECT * FROM t1c;
DROP TABLE t1c, t1p;
CREATE TABLE t1 ( a INT, KEY( a ) INVISIBLE );
INSERT INTO t1 VALUES (1), (2), (3), (4), (5), (6), (7), (8), (9), (10);
EXPLAIN SELECT a FROM t1;
SELECT @@optimizer_switch;
EXPLAIN SELECT a FROM t1;
SET @@optimizer_switch='use_invisible_indexes=on';
EXPLAIN SELECT a FROM t1;
SELECT @@optimizer_switch;
EXPLAIN SELECT a FROM t1;
SELECT @@optimizer_switch;
SET @@optimizer_switch='use_invisible_indexes=off';
EXPLAIN SELECT a FROM t1;
EXPLAIN SELECT a FROM t1;
DROP TABLE t1;
CREATE TABLE t1 ( id INT NOT NULL PRIMARY KEY, b INT NOT NULL, INDEX (b) INVISIBLE);
INSERT INTO t1 VALUES (1, 1), (2,2),(3,3),(4,4),(5,5);
ANALYZE TABLE t1;
SET optimizer_switch="use_invisible_indexes=on";
EXPLAIN SELECT * FROM t1 FORCE INDEX (b) WHERE b = 3;
SET optimizer_switch="use_invisible_indexes=default";
EXPLAIN SELECT * FROM t1 FORCE INDEX (b) WHERE b = 3;
DROP TABLE t1;
SET SESSION information_schema_stats_expiry=0;
CREATE TABLE t1 ( a INT, KEY (a) );
SHOW KEYS FROM t1;
ALTER TABLE t1 ALTER INDEX a INVISIBLE;
SHOW KEYS FROM t1;
ALTER TABLE t1 ALTER INDEX a VISIBLE;
SHOW KEYS FROM t1;
DROP TABLE t1;
CREATE TABLE t1 ( a INT, b INT );
CREATE INDEX a_invisible ON t1(a) INVISIBLE;
CREATE INDEX b_visible ON t1(a) VISIBLE;
CREATE INDEX a_b_invisible ON t1(a, b) INVISIBLE;
SHOW INDEXES FROM t1;
DROP TABLE t1;
CREATE TABLE t1 ( a INT, KEY (a) );
CREATE TABLE t2 ( a INT, KEY (a) INVISIBLE );
INSERT INTO t1 VALUES (1), (2), (3), (4), (5);
INSERT INTO t2 SELECT * FROM t1;
ANALYZE TABLE t1, t2;
EXPLAIN SELECT a FROM t1;
ALTER TABLE t1 ALTER INDEX a INVISIBLE;
EXPLAIN SELECT a FROM t1;
ALTER TABLE t1 ALTER INDEX a VISIBLE;
EXPLAIN SELECT a FROM t1;
EXPLAIN SELECT a FROM t2;
ALTER TABLE t2 ALTER INDEX a VISIBLE;
EXPLAIN SELECT a FROM t2;
DROP TABLE t1, t2;
CREATE TABLE t1 (  a INT, INDEX (a),  b INT, INDEX (b) INVISIBLE);
SHOW INDEXES FROM t1;
ALTER TABLE t1 RENAME INDEX a TO a1;
ALTER TABLE t1 RENAME INDEX b TO b1;
SHOW INDEXES FROM t1;
ALTER TABLE t1 ALTER INDEX a1 INVISIBLE;
ALTER TABLE t1 ALTER INDEX b1 VISIBLE;
SHOW INDEXES FROM t1;
DROP TABLE t1;
CREATE TABLE t1 (  a INT,  b INT,  c INT,  INDEX (a) VISIBLE,  INDEX (b) INVISIBLE,  INDEX (c));
SHOW CREATE TABLE t1;
DROP TABLE t1;
CREATE TABLE t1 ( a INT, PRIMARY KEY (a) INVISIBLE );
ALTER TABLE t1 ALTER INDEX PRIMARY INVISIBLE;
ALTER TABLE t1 ADD PRIMARY KEY (a) INVISIBLE;
CREATE TABLE t1( a INT );
ALTER TABLE t1 ADD CONSTRAINT pk PRIMARY KEY (a);
SHOW INDEXES FROM t1;
DROP TABLE t1;
CREATE TABLE t1( a INT, PRIMARY KEY pk (a) );
SHOW INDEXES FROM t1;
DROP TABLE t1;
CREATE TABLE t1 (  a INT, KEY (a),  b INT, KEY (b) INVISIBLE);
ALTER TABLE t1 RENAME INDEX no_such_index TO x;
ALTER TABLE t1 ALTER INDEX no_such_index INVISIBLE;
ALTER TABLE t1 ALTER INDEX a INVISIBLE, ALTER INDEX a VISIBLE;
ALTER TABLE t1 ALTER INDEX a INVISIBLE, ALTER INDEX b VISIBLE;
SHOW INDEXES FROM t1;
ALTER TABLE t1 RENAME INDEX a TO x, RENAME INDEX x TO a;
ALTER TABLE t1 RENAME INDEX a TO x, ALTER INDEX x INVISIBLE;
ALTER TABLE t1 RENAME INDEX a TO x, ALTER INDEX a VISIBLE;
ALTER TABLE t1 ALTER INDEX a VISIBLE, RENAME INDEX a TO x;
INSERT INTO t1 VALUES (1, 1), (2, 2), (3, 3);
ANALYZE TABLE t1;
ALTER TABLE t1 ALTER INDEX a INVISIBLE, ALGORITHM = COPY;
ANALYZE TABLE t1;
SHOW INDEXES FROM t1;
ALTER TABLE t1 ALTER INDEX a VISIBLE, ALGORITHM = INPLACE;
ANALYZE TABLE t1;
SHOW INDEXES FROM t1;
ALTER TABLE t1 ALTER INDEX a INVISIBLE, ALGORITHM = DEFAULT;
ANALYZE TABLE t1;
SHOW INDEXES FROM t1;
ALTER TABLE t1 ALTER INDEX a VISIBLE;
ANALYZE TABLE t1;
SHOW INDEXES FROM t1;
ALTER TABLE t1 ADD INDEX ab(a, b), ALTER INDEX ab INVISIBLE;
DROP TABLE t1;
CREATE TABLE t1 ( a INT, UNIQUE KEY (a) INVISIBLE );
CREATE TABLE t2 ( a INT UNIQUE );
CREATE TABLE t3 ( a INT NOT NULL, KEY (a) INVISIBLE, b INT PRIMARY KEY );
CREATE TABLE t4 ( a INT NOT NULL, UNIQUE KEY (a) INVISIBLE,                  b INT PRIMARY KEY AUTO_INCREMENT );
CREATE TABLE t5 ( a INT, b INT, c INT, UNIQUE KEY (a, b, c) INVISIBLE );
INSERT INTO t1 VALUES (1);
INSERT INTO t1 VALUES (1);
ALTER TABLE t2 ALTER INDEX a INVISIBLE;
INSERT INTO t2 VALUES (1);
INSERT INTO t2 VALUES (1);
INSERT INTO t3(a) VALUES (NULL);
INSERT INTO t4(a) VALUES (NULL);
INSERT INTO t4(a) VALUES (1);
INSERT INTO t4(a) VALUES (1);
INSERT INTO t5 VALUES (1, 2, 3);
INSERT INTO t5 VALUES (1, 2, 3);
DROP TABLE t1, t2, t3, t4, t5;
CREATE TABLE t1 ( a INT NOT NULL, UNIQUE KEY (a) );
ALTER TABLE t1 ALTER INDEX a INVISIBLE;
EXPLAINSELECT * FROM t1;
SELECT * FROM t1;
DROP TABLE t1;
CREATE TABLE t1 (  a INT NOT NULL,  b INT NOT NULL PRIMARY KEY,  UNIQUE KEY (a) INVISIBLE);
SHOW INDEXES FROM t1;
DROP TABLE t1;
CREATE TABLE t1 (  a INT NOT NULL,  b INT NOT NULL,  UNIQUE KEY (a),  UNIQUE KEY (b) INVISIBLE);
SHOW INDEXES FROM t1;
DROP TABLE t1;
CREATE TABLE t1 ( a INT NOT NULL, UNIQUE KEY (a) INVISIBLE );
CREATE TABLE t1 ( a INT NOT NULL, KEY (a) INVISIBLE, b INT NOT NULL UNIQUE );
CREATE TABLE t2 ( a INT PRIMARY KEY, b INT, INDEX(b) INVISIBLE);
ALTER TABLE t2 ALTER INDEX b VISIBLE;
DROP TABLE t1, t2;
CREATE TEMPORARY TABLE t1 ( a INT, KEY (a) INVISIBLE );
SHOW INDEXES FROM t1;
EXPLAIN SELECT a FROM t1;
DROP TABLE t1;
CREATE TABLE t1 (  fid INT NOT NULL AUTO_INCREMENT PRIMARY KEY,  g GEOMETRY NOT NULL SRID 0,  SPATIAL KEY(g));
ANALYZE TABLE t1;
while ($1)  eval INSERT INTO t1 (g) VALUES (ST_GeomFromText('LineString($1 $1, $2 $2)'));
  dec $1;
  inc $2;
EXPLAIN SELECT *FROM t1WHERE ST_Within(g,                ST_GeomFromText('Polygon((140 140,160 140,160 160,140 140))'));
ALTER TABLE t1 ALTER INDEX g INVISIBLE;
SHOW INDEXES FROM t1;
DROP TABLE t1;
SELECT 1FROM information_schema.tablesWHERE table_schema = 'test' AND table_name = 't1' AND engine = 'ndbcluster';
CREATE TABLE t1 (  fid INT NOT NULL AUTO_INCREMENT PRIMARY KEY,  g GEOMETRY NOT NULL SRID 0,  SPATIAL KEY(g));
CREATE TABLE t1 (a VARCHAR(200), b TEXT, FULLTEXT (a,b));
INSERT INTO t1 VALUES('Some data', 'for full-text search');
ANALYZE TABLE t1;
SELECT * FROM t1 WHERE MATCH(a, b) AGAINST ("collections" IN BOOLEAN MODE);
ALTER TABLE t1 ALTER INDEX a INVISIBLE;
SHOW INDEXES FROM t1;
DROP TABLE t1;
CREATE TABLE t1 ( a INT AUTO_INCREMENT, KEY ( a ) );
INSERT INTO t1 VALUES (), (), ();
ANALYZE TABLE t1;
EXPLAIN SELECT a FROM t1;
ALTER TABLE t1 ALTER INDEX a INVISIBLE;
SHOW INDEXES FROM t1;
EXPLAIN SELECT a FROM t1;
DROP TABLE t1;
CREATE TABLE t1 ( a INT AUTO_INCREMENT, KEY ( a ) );
CREATE TABLE t1 ( a INT, KEY(a) INVISIBLE );
SELECT * FROM t1 FORCE INDEX(a);
SELECT * FROM t1 FORCE INDEX FOR JOIN (a);
SELECT * FROM t1 FORCE INDEX FOR ORDER BY (a);
SELECT * FROM t1 FORCE INDEX FOR GROUP BY (a);
SELECT * FROM t1 USE INDEX(a);
SELECT * FROM t1 USE INDEX FOR JOIN (a);
SELECT * FROM t1 USE INDEX FOR ORDER BY (a);
SELECT * FROM t1 USE INDEX FOR GROUP BY (a);
SELECT * FROM t1 IGNORE INDEX(a);
SELECT * FROM t1 IGNORE INDEX FOR JOIN (a);
SELECT * FROM t1 IGNORE INDEX FOR ORDER BY (a);
SELECT * FROM t1 IGNORE INDEX FOR GROUP BY (a);
DROP TABLE t1;
CREATE TABLE t1 (  a CHAR(2) NOT NULL,  b CHAR(2) NOT NULL,  c INT(10) UNSIGNED NOT NULL,  d VARCHAR(255) DEFAULT NULL,  e VARCHAR(1000) DEFAULT NULL,  KEY (a) INVISIBLE,  KEY (b)) PARTITION BY KEY (a) PARTITIONS 20;
INSERT INTO t1 (a, b, c, d, e) VALUES('07', '03', 343, '1', '07_03_343'),('01', '04', 343, '2', '01_04_343'),('01', '06', 343, '3', '01_06_343'),('01', '07', 343, '4', '01_07_343'),('01', '08', 343, '5', '01_08_343'),('01', '09', 343, '6', '01_09_343'),('03', '03', 343, '7', '03_03_343'),('03', '06', 343, '8', '03_06_343'),('03', '07', 343, '9', '03_07_343'),('04', '03', 343, '10', '04_03_343'),('04', '06', 343, '11', '04_06_343'),('05', '03', 343, '12', '05_03_343'),('11', '03', 343, '13', '11_03_343'),('11', '04', 343, '14', '11_04_343');
ANALYZE TABLE t1;
EXPLAIN SELECT a FROM t1;
EXPLAIN SELECT b FROM t1;
EXPLAIN SELECT * FROM t1 WHERE a = '04';
ALTER TABLE t1 ALTER INDEX a VISIBLE;
EXPLAIN SELECT a FROM t1;
EXPLAIN SELECT * FROM t1 WHERE a = '04';
ALTER TABLE t1 ALTER INDEX b INVISIBLE;
EXPLAIN SELECT b FROM t1;
DROP TABLE t1;
CREATE TABLE t1 ( a INT GENERATED ALWAYS AS (1), KEY (a) INVISIBLE );
SHOW INDEXES FROM t1;
EXPLAIN SELECT a FROM t1;
DROP TABLE t1;
CREATE TABLE t1p ( a INT KEY );
CREATE TABLE t1c ( t1p_a INT );
ALTER TABLE t1c ADD CONSTRAINT FOREIGN KEY ( t1p_a ) REFERENCES t1p( a );
ALTER TABLE t1c ALTER INDEX t1p_a INVISIBLE;
INSERT INTO t1c VALUES ( 1 );
SELECT * FROM t1c;
DROP TABLE t1c, t1p;
CREATE TABLE t1 ( a INT, KEY( a ) INVISIBLE );
INSERT INTO t1 VALUES (1), (2), (3), (4), (5), (6), (7), (8), (9), (10);
EXPLAIN SELECT a FROM t1;
SELECT @@optimizer_switch;
EXPLAIN SELECT a FROM t1;
SET @@optimizer_switch='use_invisible_indexes=on';
EXPLAIN SELECT a FROM t1;
SELECT @@optimizer_switch;
EXPLAIN SELECT a FROM t1;
SELECT @@optimizer_switch;
SET @@optimizer_switch='use_invisible_indexes=off';
EXPLAIN SELECT a FROM t1;
EXPLAIN SELECT a FROM t1;
DROP TABLE t1;
CREATE TABLE t1 ( id INT NOT NULL PRIMARY KEY, b INT NOT NULL, INDEX (b) INVISIBLE);
INSERT INTO t1 VALUES (1, 1), (2,2),(3,3),(4,4),(5,5);
ANALYZE TABLE t1;
SET optimizer_switch="use_invisible_indexes=on";
EXPLAIN SELECT * FROM t1 FORCE INDEX (b) WHERE b = 3;
SET optimizer_switch="use_invisible_indexes=default";
EXPLAIN SELECT * FROM t1 FORCE INDEX (b) WHERE b = 3;
DROP TABLE t1;
SET SESSION information_schema_stats_expiry=0;
CREATE TABLE t1 ( a INT, KEY (a) );
SHOW KEYS FROM t1;
ALTER TABLE t1 ALTER INDEX a INVISIBLE;
SHOW KEYS FROM t1;
ALTER TABLE t1 ALTER INDEX a VISIBLE;
SHOW KEYS FROM t1;
DROP TABLE t1;
CREATE TABLE t1 ( a INT, b INT );
CREATE INDEX a_invisible ON t1(a) INVISIBLE;
CREATE INDEX b_visible ON t1(a) VISIBLE;
CREATE INDEX a_b_invisible ON t1(a, b) INVISIBLE;
SHOW INDEXES FROM t1;
DROP TABLE t1;
CREATE TABLE t1 ( a INT, KEY (a) );
CREATE TABLE t2 ( a INT, KEY (a) INVISIBLE );
INSERT INTO t1 VALUES (1), (2), (3), (4), (5);
INSERT INTO t2 SELECT * FROM t1;
ANALYZE TABLE t1, t2;
EXPLAIN SELECT a FROM t1;
ALTER TABLE t1 ALTER INDEX a INVISIBLE;
EXPLAIN SELECT a FROM t1;
ALTER TABLE t1 ALTER INDEX a VISIBLE;
EXPLAIN SELECT a FROM t1;
EXPLAIN SELECT a FROM t2;
ALTER TABLE t2 ALTER INDEX a VISIBLE;
EXPLAIN SELECT a FROM t2;
DROP TABLE t1, t2;
CREATE TABLE t1 (  a INT, INDEX (a),  b INT, INDEX (b) INVISIBLE);
SHOW INDEXES FROM t1;
ALTER TABLE t1 RENAME INDEX a TO a1;
ALTER TABLE t1 RENAME INDEX b TO b1;
SHOW INDEXES FROM t1;
ALTER TABLE t1 ALTER INDEX a1 INVISIBLE;
ALTER TABLE t1 ALTER INDEX b1 VISIBLE;
SHOW INDEXES FROM t1;
DROP TABLE t1;
CREATE TABLE t1 (  a INT,  b INT,  c INT,  INDEX (a) VISIBLE,  INDEX (b) INVISIBLE,  INDEX (c));
SHOW CREATE TABLE t1;
DROP TABLE t1;
CREATE TABLE t1 ( a INT, PRIMARY KEY (a) INVISIBLE );
ALTER TABLE t1 ALTER INDEX PRIMARY INVISIBLE;
ALTER TABLE t1 ADD PRIMARY KEY (a) INVISIBLE;
CREATE TABLE t1( a INT );
ALTER TABLE t1 ADD CONSTRAINT pk PRIMARY KEY (a);
SHOW INDEXES FROM t1;
DROP TABLE t1;
CREATE TABLE t1( a INT, PRIMARY KEY pk (a) );
SHOW INDEXES FROM t1;
DROP TABLE t1;
CREATE TABLE t1 (  a INT, KEY (a),  b INT, KEY (b) INVISIBLE);
ALTER TABLE t1 RENAME INDEX no_such_index TO x;
ALTER TABLE t1 ALTER INDEX no_such_index INVISIBLE;
ALTER TABLE t1 ALTER INDEX a INVISIBLE, ALTER INDEX a VISIBLE;
ALTER TABLE t1 ALTER INDEX a INVISIBLE, ALTER INDEX b VISIBLE;
SHOW INDEXES FROM t1;
ALTER TABLE t1 RENAME INDEX a TO x, RENAME INDEX x TO a;
ALTER TABLE t1 RENAME INDEX a TO x, ALTER INDEX x INVISIBLE;
ALTER TABLE t1 RENAME INDEX a TO x, ALTER INDEX a VISIBLE;
ALTER TABLE t1 ALTER INDEX a VISIBLE, RENAME INDEX a TO x;
INSERT INTO t1 VALUES (1, 1), (2, 2), (3, 3);
ANALYZE TABLE t1;
ALTER TABLE t1 ALTER INDEX a INVISIBLE, ALGORITHM = COPY;
ANALYZE TABLE t1;
SHOW INDEXES FROM t1;
ALTER TABLE t1 ALTER INDEX a VISIBLE, ALGORITHM = INPLACE;
ANALYZE TABLE t1;
SHOW INDEXES FROM t1;
ALTER TABLE t1 ALTER INDEX a INVISIBLE, ALGORITHM = DEFAULT;
ANALYZE TABLE t1;
SHOW INDEXES FROM t1;
ALTER TABLE t1 ALTER INDEX a VISIBLE;
ANALYZE TABLE t1;
SHOW INDEXES FROM t1;
ALTER TABLE t1 ADD INDEX ab(a, b), ALTER INDEX ab INVISIBLE;
DROP TABLE t1;
CREATE TABLE t1 ( a INT, UNIQUE KEY (a) INVISIBLE );
CREATE TABLE t2 ( a INT UNIQUE );
CREATE TABLE t3 ( a INT NOT NULL, KEY (a) INVISIBLE, b INT PRIMARY KEY );
CREATE TABLE t4 ( a INT NOT NULL, UNIQUE KEY (a) INVISIBLE,                  b INT PRIMARY KEY AUTO_INCREMENT );
CREATE TABLE t5 ( a INT, b INT, c INT, UNIQUE KEY (a, b, c) INVISIBLE );
INSERT INTO t1 VALUES (1);
INSERT INTO t1 VALUES (1);
ALTER TABLE t2 ALTER INDEX a INVISIBLE;
INSERT INTO t2 VALUES (1);
INSERT INTO t2 VALUES (1);
INSERT INTO t3(a) VALUES (NULL);
INSERT INTO t4(a) VALUES (NULL);
INSERT INTO t4(a) VALUES (1);
INSERT INTO t4(a) VALUES (1);
INSERT INTO t5 VALUES (1, 2, 3);
INSERT INTO t5 VALUES (1, 2, 3);
DROP TABLE t1, t2, t3, t4, t5;
CREATE TABLE t1 ( a INT NOT NULL, UNIQUE KEY (a) );
ALTER TABLE t1 ALTER INDEX a INVISIBLE;
EXPLAINSELECT * FROM t1;
SELECT * FROM t1;
DROP TABLE t1;
CREATE TABLE t1 (  a INT NOT NULL,  b INT NOT NULL PRIMARY KEY,  UNIQUE KEY (a) INVISIBLE);
SHOW INDEXES FROM t1;
DROP TABLE t1;
CREATE TABLE t1 (  a INT NOT NULL,  b INT NOT NULL,  UNIQUE KEY (a),  UNIQUE KEY (b) INVISIBLE);
SHOW INDEXES FROM t1;
DROP TABLE t1;
CREATE TABLE t1 ( a INT NOT NULL, UNIQUE KEY (a) INVISIBLE );
CREATE TABLE t1 ( a INT NOT NULL, KEY (a) INVISIBLE, b INT NOT NULL UNIQUE );
CREATE TABLE t2 ( a INT PRIMARY KEY, b INT, INDEX(b) INVISIBLE);
ALTER TABLE t2 ALTER INDEX b VISIBLE;
DROP TABLE t1, t2;
CREATE TEMPORARY TABLE t1 ( a INT, KEY (a) INVISIBLE );
SHOW INDEXES FROM t1;
EXPLAIN SELECT a FROM t1;
DROP TABLE t1;
CREATE TABLE t1 (  fid INT NOT NULL AUTO_INCREMENT PRIMARY KEY,  g GEOMETRY NOT NULL SRID 0,  SPATIAL KEY(g));
ANALYZE TABLE t1;
while ($1)  eval INSERT INTO t1 (g) VALUES (ST_GeomFromText('LineString($1 $1, $2 $2)'));
  dec $1;
  inc $2;
EXPLAIN SELECT *FROM t1WHERE ST_Within(g,                ST_GeomFromText('Polygon((140 140,160 140,160 160,140 140))'));
ALTER TABLE t1 ALTER INDEX g INVISIBLE;
SHOW INDEXES FROM t1;
DROP TABLE t1;
SELECT 1FROM information_schema.tablesWHERE table_schema = 'test' AND table_name = 't1' AND engine = 'ndbcluster';
CREATE TABLE t1 (  fid INT NOT NULL AUTO_INCREMENT PRIMARY KEY,  g GEOMETRY NOT NULL SRID 0,  SPATIAL KEY(g));
CREATE TABLE t1 (a VARCHAR(200), b TEXT, FULLTEXT (a,b));
INSERT INTO t1 VALUES('Some data', 'for full-text search');
ANALYZE TABLE t1;
SELECT * FROM t1 WHERE MATCH(a, b) AGAINST ("collections" IN BOOLEAN MODE);
ALTER TABLE t1 ALTER INDEX a INVISIBLE;
SHOW INDEXES FROM t1;
DROP TABLE t1;
CREATE TABLE t1 ( a INT AUTO_INCREMENT, KEY ( a ) );
INSERT INTO t1 VALUES (), (), ();
ANALYZE TABLE t1;
EXPLAIN SELECT a FROM t1;
ALTER TABLE t1 ALTER INDEX a INVISIBLE;
SHOW INDEXES FROM t1;
EXPLAIN SELECT a FROM t1;
DROP TABLE t1;
CREATE TABLE t1 ( a INT AUTO_INCREMENT, KEY ( a ) );
CREATE TABLE t1 ( a INT, KEY(a) INVISIBLE );
SELECT * FROM t1 FORCE INDEX(a);
SELECT * FROM t1 FORCE INDEX FOR JOIN (a);
SELECT * FROM t1 FORCE INDEX FOR ORDER BY (a);
SELECT * FROM t1 FORCE INDEX FOR GROUP BY (a);
SELECT * FROM t1 USE INDEX(a);
SELECT * FROM t1 USE INDEX FOR JOIN (a);
SELECT * FROM t1 USE INDEX FOR ORDER BY (a);
SELECT * FROM t1 USE INDEX FOR GROUP BY (a);
SELECT * FROM t1 IGNORE INDEX(a);
SELECT * FROM t1 IGNORE INDEX FOR JOIN (a);
SELECT * FROM t1 IGNORE INDEX FOR ORDER BY (a);
SELECT * FROM t1 IGNORE INDEX FOR GROUP BY (a);
DROP TABLE t1;
CREATE TABLE t1 (  a CHAR(2) NOT NULL,  b CHAR(2) NOT NULL,  c INT(10) UNSIGNED NOT NULL,  d VARCHAR(255) DEFAULT NULL,  e VARCHAR(1000) DEFAULT NULL,  KEY (a) INVISIBLE,  KEY (b)) PARTITION BY KEY (a) PARTITIONS 20;
INSERT INTO t1 (a, b, c, d, e) VALUES('07', '03', 343, '1', '07_03_343'),('01', '04', 343, '2', '01_04_343'),('01', '06', 343, '3', '01_06_343'),('01', '07', 343, '4', '01_07_343'),('01', '08', 343, '5', '01_08_343'),('01', '09', 343, '6', '01_09_343'),('03', '03', 343, '7', '03_03_343'),('03', '06', 343, '8', '03_06_343'),('03', '07', 343, '9', '03_07_343'),('04', '03', 343, '10', '04_03_343'),('04', '06', 343, '11', '04_06_343'),('05', '03', 343, '12', '05_03_343'),('11', '03', 343, '13', '11_03_343'),('11', '04', 343, '14', '11_04_343');
ANALYZE TABLE t1;
EXPLAIN SELECT a FROM t1;
EXPLAIN SELECT b FROM t1;
EXPLAIN SELECT * FROM t1 WHERE a = '04';
ALTER TABLE t1 ALTER INDEX a VISIBLE;
EXPLAIN SELECT a FROM t1;
EXPLAIN SELECT * FROM t1 WHERE a = '04';
ALTER TABLE t1 ALTER INDEX b INVISIBLE;
EXPLAIN SELECT b FROM t1;
DROP TABLE t1;
CREATE TABLE t1 ( a INT GENERATED ALWAYS AS (1), KEY (a) INVISIBLE );
SHOW INDEXES FROM t1;
EXPLAIN SELECT a FROM t1;
DROP TABLE t1;
CREATE TABLE t1p ( a INT KEY );
CREATE TABLE t1c ( t1p_a INT );
ALTER TABLE t1c ADD CONSTRAINT FOREIGN KEY ( t1p_a ) REFERENCES t1p( a );
ALTER TABLE t1c ALTER INDEX t1p_a INVISIBLE;
INSERT INTO t1c VALUES ( 1 );
SELECT * FROM t1c;
DROP TABLE t1c, t1p;
CREATE TABLE t1 ( a INT, KEY( a ) INVISIBLE );
INSERT INTO t1 VALUES (1), (2), (3), (4), (5), (6), (7), (8), (9), (10);
EXPLAIN SELECT a FROM t1;
SELECT @@optimizer_switch;
EXPLAIN SELECT a FROM t1;
SET @@optimizer_switch='use_invisible_indexes=on';
EXPLAIN SELECT a FROM t1;
SELECT @@optimizer_switch;
EXPLAIN SELECT a FROM t1;
SELECT @@optimizer_switch;
SET @@optimizer_switch='use_invisible_indexes=off';
EXPLAIN SELECT a FROM t1;
EXPLAIN SELECT a FROM t1;
DROP TABLE t1;
CREATE TABLE t1 ( id INT NOT NULL PRIMARY KEY, b INT NOT NULL, INDEX (b) INVISIBLE);
INSERT INTO t1 VALUES (1, 1), (2,2),(3,3),(4,4),(5,5);
ANALYZE TABLE t1;
SET optimizer_switch="use_invisible_indexes=on";
EXPLAIN SELECT * FROM t1 FORCE INDEX (b) WHERE b = 3;
SET optimizer_switch="use_invisible_indexes=default";
EXPLAIN SELECT * FROM t1 FORCE INDEX (b) WHERE b = 3;
DROP TABLE t1;
SET SESSION information_schema_stats_expiry=0;
CREATE TABLE t1 ( a INT, KEY (a) );
SHOW KEYS FROM t1;
ALTER TABLE t1 ALTER INDEX a INVISIBLE;
SHOW KEYS FROM t1;
ALTER TABLE t1 ALTER INDEX a VISIBLE;
SHOW KEYS FROM t1;
DROP TABLE t1;
CREATE TABLE t1 ( a INT, b INT );
CREATE INDEX a_invisible ON t1(a) INVISIBLE;
CREATE INDEX b_visible ON t1(a) VISIBLE;
CREATE INDEX a_b_invisible ON t1(a, b) INVISIBLE;
SHOW INDEXES FROM t1;
DROP TABLE t1;
CREATE TABLE t1 ( a INT, KEY (a) );
CREATE TABLE t2 ( a INT, KEY (a) INVISIBLE );
INSERT INTO t1 VALUES (1), (2), (3), (4), (5);
INSERT INTO t2 SELECT * FROM t1;
ANALYZE TABLE t1, t2;
EXPLAIN SELECT a FROM t1;
ALTER TABLE t1 ALTER INDEX a INVISIBLE;
EXPLAIN SELECT a FROM t1;
ALTER TABLE t1 ALTER INDEX a VISIBLE;
EXPLAIN SELECT a FROM t1;
EXPLAIN SELECT a FROM t2;
ALTER TABLE t2 ALTER INDEX a VISIBLE;
EXPLAIN SELECT a FROM t2;
DROP TABLE t1, t2;
CREATE TABLE t1 (  a INT, INDEX (a),  b INT, INDEX (b) INVISIBLE);
SHOW INDEXES FROM t1;
ALTER TABLE t1 RENAME INDEX a TO a1;
ALTER TABLE t1 RENAME INDEX b TO b1;
SHOW INDEXES FROM t1;
ALTER TABLE t1 ALTER INDEX a1 INVISIBLE;
ALTER TABLE t1 ALTER INDEX b1 VISIBLE;
SHOW INDEXES FROM t1;
DROP TABLE t1;
CREATE TABLE t1 (  a INT,  b INT,  c INT,  INDEX (a) VISIBLE,  INDEX (b) INVISIBLE,  INDEX (c));
SHOW CREATE TABLE t1;
DROP TABLE t1;
CREATE TABLE t1 ( a INT, PRIMARY KEY (a) INVISIBLE );
ALTER TABLE t1 ALTER INDEX PRIMARY INVISIBLE;
ALTER TABLE t1 ADD PRIMARY KEY (a) INVISIBLE;
CREATE TABLE t1( a INT );
ALTER TABLE t1 ADD CONSTRAINT pk PRIMARY KEY (a);
SHOW INDEXES FROM t1;
DROP TABLE t1;
CREATE TABLE t1( a INT, PRIMARY KEY pk (a) );
SHOW INDEXES FROM t1;
DROP TABLE t1;
CREATE TABLE t1 (  a INT, KEY (a),  b INT, KEY (b) INVISIBLE);
ALTER TABLE t1 RENAME INDEX no_such_index TO x;
ALTER TABLE t1 ALTER INDEX no_such_index INVISIBLE;
ALTER TABLE t1 ALTER INDEX a INVISIBLE, ALTER INDEX a VISIBLE;
ALTER TABLE t1 ALTER INDEX a INVISIBLE, ALTER INDEX b VISIBLE;
SHOW INDEXES FROM t1;
ALTER TABLE t1 RENAME INDEX a TO x, RENAME INDEX x TO a;
ALTER TABLE t1 RENAME INDEX a TO x, ALTER INDEX x INVISIBLE;
ALTER TABLE t1 RENAME INDEX a TO x, ALTER INDEX a VISIBLE;
ALTER TABLE t1 ALTER INDEX a VISIBLE, RENAME INDEX a TO x;
INSERT INTO t1 VALUES (1, 1), (2, 2), (3, 3);
ANALYZE TABLE t1;
ALTER TABLE t1 ALTER INDEX a INVISIBLE, ALGORITHM = COPY;
ANALYZE TABLE t1;
SHOW INDEXES FROM t1;
ALTER TABLE t1 ALTER INDEX a VISIBLE, ALGORITHM = INPLACE;
ANALYZE TABLE t1;
SHOW INDEXES FROM t1;
ALTER TABLE t1 ALTER INDEX a INVISIBLE, ALGORITHM = DEFAULT;
ANALYZE TABLE t1;
SHOW INDEXES FROM t1;
ALTER TABLE t1 ALTER INDEX a VISIBLE;
ANALYZE TABLE t1;
SHOW INDEXES FROM t1;
ALTER TABLE t1 ADD INDEX ab(a, b), ALTER INDEX ab INVISIBLE;
DROP TABLE t1;
CREATE TABLE t1 ( a INT, UNIQUE KEY (a) INVISIBLE );
CREATE TABLE t2 ( a INT UNIQUE );
CREATE TABLE t3 ( a INT NOT NULL, KEY (a) INVISIBLE, b INT PRIMARY KEY );
CREATE TABLE t4 ( a INT NOT NULL, UNIQUE KEY (a) INVISIBLE,                  b INT PRIMARY KEY AUTO_INCREMENT );
CREATE TABLE t5 ( a INT, b INT, c INT, UNIQUE KEY (a, b, c) INVISIBLE );
INSERT INTO t1 VALUES (1);
INSERT INTO t1 VALUES (1);
ALTER TABLE t2 ALTER INDEX a INVISIBLE;
INSERT INTO t2 VALUES (1);
INSERT INTO t2 VALUES (1);
INSERT INTO t3(a) VALUES (NULL);
INSERT INTO t4(a) VALUES (NULL);
INSERT INTO t4(a) VALUES (1);
INSERT INTO t4(a) VALUES (1);
INSERT INTO t5 VALUES (1, 2, 3);
INSERT INTO t5 VALUES (1, 2, 3);
DROP TABLE t1, t2, t3, t4, t5;
CREATE TABLE t1 ( a INT NOT NULL, UNIQUE KEY (a) );
ALTER TABLE t1 ALTER INDEX a INVISIBLE;
EXPLAINSELECT * FROM t1;
SELECT * FROM t1;
DROP TABLE t1;
CREATE TABLE t1 (  a INT NOT NULL,  b INT NOT NULL PRIMARY KEY,  UNIQUE KEY (a) INVISIBLE);
SHOW INDEXES FROM t1;
DROP TABLE t1;
CREATE TABLE t1 (  a INT NOT NULL,  b INT NOT NULL,  UNIQUE KEY (a),  UNIQUE KEY (b) INVISIBLE);
SHOW INDEXES FROM t1;
DROP TABLE t1;
CREATE TABLE t1 ( a INT NOT NULL, UNIQUE KEY (a) INVISIBLE );
CREATE TABLE t1 ( a INT NOT NULL, KEY (a) INVISIBLE, b INT NOT NULL UNIQUE );
CREATE TABLE t2 ( a INT PRIMARY KEY, b INT, INDEX(b) INVISIBLE);
ALTER TABLE t2 ALTER INDEX b VISIBLE;
DROP TABLE t1, t2;
CREATE TEMPORARY TABLE t1 ( a INT, KEY (a) INVISIBLE );
SHOW INDEXES FROM t1;
EXPLAIN SELECT a FROM t1;
DROP TABLE t1;
CREATE TABLE t1 (  fid INT NOT NULL AUTO_INCREMENT PRIMARY KEY,  g GEOMETRY NOT NULL SRID 0,  SPATIAL KEY(g));
ANALYZE TABLE t1;
while ($1)  eval INSERT INTO t1 (g) VALUES (ST_GeomFromText('LineString($1 $1, $2 $2)'));
  dec $1;
  inc $2;
EXPLAIN SELECT *FROM t1WHERE ST_Within(g,                ST_GeomFromText('Polygon((140 140,160 140,160 160,140 140))'));
ALTER TABLE t1 ALTER INDEX g INVISIBLE;
SHOW INDEXES FROM t1;
DROP TABLE t1;
SELECT 1FROM information_schema.tablesWHERE table_schema = 'test' AND table_name = 't1' AND engine = 'ndbcluster';
CREATE TABLE t1 (  fid INT NOT NULL AUTO_INCREMENT PRIMARY KEY,  g GEOMETRY NOT NULL SRID 0,  SPATIAL KEY(g));
CREATE TABLE t1 (a VARCHAR(200), b TEXT, FULLTEXT (a,b));
INSERT INTO t1 VALUES('Some data', 'for full-text search');
ANALYZE TABLE t1;
SELECT * FROM t1 WHERE MATCH(a, b) AGAINST ("collections" IN BOOLEAN MODE);
ALTER TABLE t1 ALTER INDEX a INVISIBLE;
SHOW INDEXES FROM t1;
DROP TABLE t1;
CREATE TABLE t1 ( a INT AUTO_INCREMENT, KEY ( a ) );
INSERT INTO t1 VALUES (), (), ();
ANALYZE TABLE t1;
EXPLAIN SELECT a FROM t1;
ALTER TABLE t1 ALTER INDEX a INVISIBLE;
SHOW INDEXES FROM t1;
EXPLAIN SELECT a FROM t1;
DROP TABLE t1;
CREATE TABLE t1 ( a INT AUTO_INCREMENT, KEY ( a ) );
CREATE TABLE t1 ( a INT, KEY(a) INVISIBLE );
SELECT * FROM t1 FORCE INDEX(a);
SELECT * FROM t1 FORCE INDEX FOR JOIN (a);
SELECT * FROM t1 FORCE INDEX FOR ORDER BY (a);
SELECT * FROM t1 FORCE INDEX FOR GROUP BY (a);
SELECT * FROM t1 USE INDEX(a);
SELECT * FROM t1 USE INDEX FOR JOIN (a);
SELECT * FROM t1 USE INDEX FOR ORDER BY (a);
SELECT * FROM t1 USE INDEX FOR GROUP BY (a);
SELECT * FROM t1 IGNORE INDEX(a);
SELECT * FROM t1 IGNORE INDEX FOR JOIN (a);
SELECT * FROM t1 IGNORE INDEX FOR ORDER BY (a);
SELECT * FROM t1 IGNORE INDEX FOR GROUP BY (a);
DROP TABLE t1;
CREATE TABLE t1 (  a CHAR(2) NOT NULL,  b CHAR(2) NOT NULL,  c INT(10) UNSIGNED NOT NULL,  d VARCHAR(255) DEFAULT NULL,  e VARCHAR(1000) DEFAULT NULL,  KEY (a) INVISIBLE,  KEY (b)) PARTITION BY KEY (a) PARTITIONS 20;
INSERT INTO t1 (a, b, c, d, e) VALUES('07', '03', 343, '1', '07_03_343'),('01', '04', 343, '2', '01_04_343'),('01', '06', 343, '3', '01_06_343'),('01', '07', 343, '4', '01_07_343'),('01', '08', 343, '5', '01_08_343'),('01', '09', 343, '6', '01_09_343'),('03', '03', 343, '7', '03_03_343'),('03', '06', 343, '8', '03_06_343'),('03', '07', 343, '9', '03_07_343'),('04', '03', 343, '10', '04_03_343'),('04', '06', 343, '11', '04_06_343'),('05', '03', 343, '12', '05_03_343'),('11', '03', 343, '13', '11_03_343'),('11', '04', 343, '14', '11_04_343');
ANALYZE TABLE t1;
EXPLAIN SELECT a FROM t1;
EXPLAIN SELECT b FROM t1;
EXPLAIN SELECT * FROM t1 WHERE a = '04';
ALTER TABLE t1 ALTER INDEX a VISIBLE;
EXPLAIN SELECT a FROM t1;
EXPLAIN SELECT * FROM t1 WHERE a = '04';
ALTER TABLE t1 ALTER INDEX b INVISIBLE;
EXPLAIN SELECT b FROM t1;
DROP TABLE t1;
CREATE TABLE t1 ( a INT GENERATED ALWAYS AS (1), KEY (a) INVISIBLE );
SHOW INDEXES FROM t1;
EXPLAIN SELECT a FROM t1;
DROP TABLE t1;
CREATE TABLE t1p ( a INT KEY );
CREATE TABLE t1c ( t1p_a INT );
ALTER TABLE t1c ADD CONSTRAINT FOREIGN KEY ( t1p_a ) REFERENCES t1p( a );
ALTER TABLE t1c ALTER INDEX t1p_a INVISIBLE;
INSERT INTO t1c VALUES ( 1 );
SELECT * FROM t1c;
DROP TABLE t1c, t1p;
CREATE TABLE t1 ( a INT, KEY( a ) INVISIBLE );
INSERT INTO t1 VALUES (1), (2), (3), (4), (5), (6), (7), (8), (9), (10);
EXPLAIN SELECT a FROM t1;
SELECT @@optimizer_switch;
EXPLAIN SELECT a FROM t1;
SET @@optimizer_switch='use_invisible_indexes=on';
EXPLAIN SELECT a FROM t1;
SELECT @@optimizer_switch;
EXPLAIN SELECT a FROM t1;
SELECT @@optimizer_switch;
SET @@optimizer_switch='use_invisible_indexes=off';
EXPLAIN SELECT a FROM t1;
EXPLAIN SELECT a FROM t1;
DROP TABLE t1;
CREATE TABLE t1 ( id INT NOT NULL PRIMARY KEY, b INT NOT NULL, INDEX (b) INVISIBLE);
INSERT INTO t1 VALUES (1, 1), (2,2),(3,3),(4,4),(5,5);
ANALYZE TABLE t1;
SET optimizer_switch="use_invisible_indexes=on";
EXPLAIN SELECT * FROM t1 FORCE INDEX (b) WHERE b = 3;
SET optimizer_switch="use_invisible_indexes=default";
EXPLAIN SELECT * FROM t1 FORCE INDEX (b) WHERE b = 3;
DROP TABLE t1;
