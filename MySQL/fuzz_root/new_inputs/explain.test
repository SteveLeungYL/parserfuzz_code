  drop table if exists t1;
create table t1 (id int not null, str char(10), unique(str)) charset utf8mb4;
explain select * from t1;
insert into t1 values (1, null),(2, null),(3, "foo"),(4, "bar");
select * from t1 where str is null;
select * from t1 where str="foo";
explain select * from t1 where str is null;
explain format=json select * from t1 where str is null;
explain select * from t1 where str="foo";
explain select * from t1 ignore key (str) where str="foo";
explain select * from t1 use key (str,str) where str="foo";
explain select * from t1 use key (str,str,foo) where str="foo";
explain select * from t1 ignore key (str,str,foo) where str="foo";
drop table t1;
explain select 1;
create table t1 (a int not null);
explain select count(*) from t1;
insert into t1 values(1);
explain select count(*) from t1;
insert into t1 values(1);
explain select count(*) from t1;
drop table t1;
set names koi8r;
create table  (0 int, 1 int, key 0 (0), key 01 (0,1));
insert into  (0) values (1);
insert into  (0) values (2);
explain select 0 from  where 0=1;
drop table ;
set names latin1;
select 3 into @v1;
explain select 3 into @v1;
create table t1(f1 int, f2 int);
insert into t1 values (1,1);
create view v1 as select * from t1 where f1=1;
explain select * from v1 where f2=1;
explain select * from t1 where 0;
explain select * from t1 where 1;
explain select * from t1 having 0;
explain select * from t1 having 1;
drop view v1;
drop table t1;
CREATE TABLE t1(c INT);
INSERT INTO t1 VALUES (),();
CREATE TABLE t2 (b INT,KEY(b),KEY(b),KEY(b),KEY(b),KEY(b),KEY(b),KEY(b),KEY(b),KEY(b),KEY(b),KEY(b),KEY(b),KEY(b),KEY(b),KEY(b),KEY(b),KEY(b),KEY(b),KEY(b),KEY(b),KEY(b),KEY(b),KEY(b),KEY(b),KEY(b),KEY(b),KEY(b),KEY(b),KEY(b),KEY(b),KEY(b),KEY(b),KEY(b),KEY(b),KEY(b),KEY(b),KEY(b),KEY(b),KEY(b),KEY(b));
INSERT INTO t2 VALUES (),(),();
EXPLAIN SELECT 1 FROM  (SELECT 1 FROM t2,t1 WHERE b < c GROUP BY 1 LIMIT 1) AS d2;
DROP TABLE t2;
DROP TABLE t1;
CREATE TABLE t1(a INT);
CREATE TABLE t2(a INT);
INSERT INTO t1 VALUES (1),(2);
INSERT INTO t2 VALUES (1),(2);
EXPLAIN SELECT 1 FROM (SELECT COUNT(DISTINCT t1.a) FROM t1,t2 GROUP BY t1.a) AS s1;
EXPLAIN SELECT 1 FROM (SELECT COUNT(DISTINCT t1.a) FROM t1,t2 GROUP BY t1.a) AS s1;
prepare s1 from 'EXPLAIN SELECT 1   FROM (SELECT COUNT(DISTINCT t1.a) FROM t1,t2 GROUP BY t1.a) AS s1';
execute s1;
prepare s1 from 'EXPLAIN FORMAT=JSON SELECT 1   FROM (SELECT COUNT(DISTINCT t1.a) FROM t1,t2 GROUP BY t1.a) AS s1';
execute s1;
prepare s1 from 'EXPLAIN SELECT 1   FROM (SELECT COUNT(DISTINCT t1.a) FROM t1,t2 GROUP BY t1.a) AS s1';
execute s1;
execute s1;
DROP TABLE t1,t2;
CREATE TABLE t1 (a INT PRIMARY KEY);
EXPLAIN SELECT COUNT(a) FROM t1 USE KEY(a);
DROP TABLE t1;
CREATE TABLE t1(a LONGTEXT);
INSERT INTO t1 VALUES (repeat('a',@@global.max_allowed_packet));
INSERT INTO t1 VALUES (repeat('b',@@global.max_allowed_packet));
EXPLAIN SELECT DISTINCT 1 FROM t1,        (SELECT a AS away FROM t1 GROUP BY a WITH ROLLUP) as d1         WHERE t1.a = d1.a;
EXPLAIN SELECT DISTINCT 1 FROM t1,        (SELECT DISTINCTROW a AS away FROM t1 GROUP BY a WITH ROLLUP) as d1         WHERE t1.a = d1.a;
DROP TABLE t1;
CREATE TABLE t1 (f1 INT);
SELECT @@session.sql_mode INTO @old_sql_mode;
SET SESSION sql_mode='ONLY_FULL_GROUP_BY';
EXPLAIN SELECT 1 FROM t1                          WHERE f1 > ALL( SELECT t.f1 FROM t1,t1 AS t );
SET SESSION sql_mode=@old_sql_mode;
DROP TABLE t1;
set @opt_sw_save=  @@optimizer_switch;
  set optimizer_switch='semijoin=off';
create table t1 (dt datetime not null, t time not null);
create table t2 (dt datetime not null);
insert into t1 values ('2001-01-01 1:1:1', '1:1:1'),('2001-01-01 1:1:1', '1:1:1');
insert into t2 values ('2001-01-01 1:1:1'), ('2001-01-01 1:1:1');
flush tables;
EXPLAIN SELECT outr.dt FROM t1 AS outr WHERE outr.dt IN (SELECT innr.dt FROM t2 AS innr WHERE outr.dt IS NULL );
flush tables;
SELECT outr.dt FROM t1 AS outr WHERE outr.dt IN (SELECT innr.dt FROM t2 AS innr WHERE outr.dt IS NULL );
flush tables;
EXPLAIN SELECT outr.dt FROM t1 AS outr WHERE outr.dt IN ( SELECT innr.dt FROM t2 AS innr WHERE outr.t < '2005-11-13 7:41:31' ); flush tables;
SELECT outr.dt FROM t1 AS outr WHERE outr.dt IN ( SELECT innr.dt FROM t2 AS innr WHERE outr.t < '2005-11-13 7:41:31' );
drop tables t1, t2;
set optimizer_switch= @opt_sw_save;
CREATE TABLE t1 (c int);
INSERT INTO t1 VALUES (NULL);
CREATE TABLE t2 (d int);
INSERT INTO t2 VALUES (NULL), (0);
EXPLAIN SELECT (SELECT 1 FROM t2 WHERE d = c) FROM t1;
DROP TABLE t1, t2;
create table t1(f1 int);
create table t2(f2 int);
insert into t1 values(1);
insert into t2 values(1),(2);
explain select * from t1 where f1=1;
explain select * from t1 join t2 on f1=f2 where f1=1;
drop table t1,t2;
CREATE TABLE t1 (a INT);
CREATE TABLE t2 (b BLOB, KEY b(b(100)));
INSERT INTO t2 VALUES ('1'), ('2'), ('3');
FLUSH TABLES;
EXPLAIN SELECT 1 FROM t1 WHERE a = (SELECT 1 FROM t1 t JOIN t2 WHERE b <= 1 AND t.a);
DROP TABLE t1, t2;
CREATE TABLE t1(c1 INT, c2 INT, c4 INT, c5 INT, KEY(c2, c5), KEY(c2, c4, c5));
INSERT INTO t1 VALUES(4, 1, 1, 1);
INSERT INTO t1 VALUES(3, 1, 1, 1);
INSERT INTO t1 VALUES(2, 1, 1, 1);
INSERT INTO t1 VALUES(1, 1, 1, 1);
EXPLAIN SELECT c1 FROM t1 WHERE c2 = 1 AND c4 = 1 AND c5 = 1;
DROP TABLE t1;
CREATE TABLE t1(f1 VARCHAR(6) NOT NULL,FULLTEXT KEY(f1),UNIQUE(f1));
INSERT INTO t1 VALUES ('test');
EXPLAIN SELECT 1 FROM t1WHERE 1 > ALL((SELECT 1 FROM t1 JOIN t1 a ON (MATCH(t1.f1) AGAINST (""))WHERE t1.f1 GROUP BY t1.f1));
PREPARE stmt FROM'EXPLAIN SELECT 1 FROM t1 WHERE 1 > ALL((SELECT 1 FROM t1 RIGHT OUTER JOIN t1 a ON (MATCH(t1.f1) AGAINST ("")) WHERE t1.f1 GROUP BY t1.f1))';
EXECUTE stmt;
EXECUTE stmt;
DEALLOCATE PREPARE stmt;
PREPARE stmt FROM'EXPLAIN SELECT 1 FROM t1 WHERE 1 > ALL((SELECT 1 FROM t1 JOIN t1 a ON (MATCH(t1.f1) AGAINST ("")) WHERE t1.f1 GROUP BY t1.f1))';
EXECUTE stmt;
EXECUTE stmt;
DEALLOCATE PREPARE stmt;
DROP TABLE t1;
drop table if exists t1;
create table `t1` (`a` int);
explain select 1 from `t1`, `t1` as `t2`where `t1`.`a`  > all ( (select `a` from `t1` ) union (select `a`) );
drop table t1;
EXPLAIN SELECT 1 UNION ALL SELECT 1 UNION ALL SELECT 1 UNION ALL SELECT 1 UNION ALL SELECT 1 UNION ALL SELECT 1 UNION ALL SELECT 1 UNION ALL SELECT 1 UNION ALL SELECT 1 UNION ALL SELECT 1 UNION ALL SELECT 1 UNION ALL SELECT 1 UNION ALL SELECT 1 UNION ALL SELECT 1 UNION ALL SELECT 1 UNION ALL SELECT 1 UNION ALL SELECT 1 UNION ALL SELECT 1 UNION ALL SELECT 1 UNION ALL SELECT 1 UNION ALL SELECT 1 UNION ALL SELECT 1 UNION ALL SELECT 1 UNION ALL SELECT 1 UNION ALL SELECT 1 ;
CREATE TABLE t1 (url char(1) PRIMARY KEY) charset latin1;
INSERT INTO t1 VALUES ('1'),('2'),('3'),('4'),('5');       EXPLAIN SELECT * FROM t1 WHERE url='1';
SELECT * FROM t1 WHERE url=1;
EXPLAIN SELECT * FROM t1 WHERE url=1;
SELECT * FROM t1 WHERE url='1' collate latin1_german2_ci;
EXPLAIN SELECT * FROM t1 WHERE url='1' collate latin1_german2_ci;
EXPLAIN SELECT * FROM t1 WHERE url>'3';
SELECT * FROM t1 WHERE url>3;
EXPLAIN SELECT * FROM t1 WHERE url>3;
SELECT * FROM t1 WHERE url>'3' collate latin1_german2_ci;
EXPLAIN SELECT * FROM t1 WHERE url>'3' collate latin1_german2_ci;
DROP TABLE t1;
CREATE TABLE t1(a INT);
INSERT INTO t1 VALUES (0), (0);
PREPARE s FROM 'EXPLAINSELECT SUBSTRING(1, (SELECT 1 FROM t1 a1 RIGHT OUTER JOIN t1 ON 0)) AS dFROM t1 WHERE 0 > ANY (SELECT @a FROM t1)';
EXECUTE s;
DEALLOCATE PREPARE s;
DROP TABLE t1;
CREATE TABLE t1 (a INT);
INSERT INTO t1 VALUES (1),(2),(3);
CREATE TABLE t2 (a INT);
INSERT INTO t2 VALUES (3),(4),(5);
EXPLAIN SELECT SQL_CALC_FOUND_ROWS * FROM t1 UNION SELECT * FROM t2 LIMIT 2,2;
EXPLAIN REPLACE INTO t1 VALUES (10);
EXPLAIN REPLACE INTO t1 SELECT * FROM t2;
DROP TABLE t1, t2;
CREATE TABLE t1(a INT);
PREPARE s FROM "EXPLAIN DELETE FROM t1 WHERE a || 'a' LIMIT 1";
DROP TABLE t1;
CREATE TABLE t1(c1 INT PRIMARY KEY) ENGINE=INNODB;
INSERT INTO t1 VALUES (1),(2),(3);
CONNECT (c1,localhost,root,,);
CONNECT (c2,localhost,root,,);
CONNECTION c1;
START TRANSACTION;
EXPLAIN SELECT * FROM t1 WHERE c1 = 1 FOR UPDATE;
CONNECTION c2;
START TRANSACTION;
EXPLAIN SELECT * FROM t1 WHERE c1 = 1 FOR UPDATE;
CONNECTION default;
DISCONNECT c1;
DISCONNECT c2;
DROP TABLE t1;
CREATE TABLE t1 (a INT, b INT) ENGINE=INNODB PARTITION BY KEY (b) PARTITIONS 2;
CREATE TABLE t2 (c INT) ENGINE=INNODB;
UPDATE t1 SET a=(SELECT c from t2) WHERE 0;
EXPLAIN UPDATE t1 SET a=(SELECT c from t2) WHERE 0;
DELETE FROM t1 WHERE 0 AND a IN (SELECT c from t2);
EXPLAIN DELETE FROM t1 WHERE 0 AND a IN (SELECT c from t2);
DROP TABLE t1, t2;
CREATE TABLE t1 (a INT);
INSERT INTO t1 VALUES (1),(NULL);
EXPLAIN SELECT * FROM t1 WHERE a<>a;
SELECT COUNT(*) FROM t1 WHERE a<>a;
SELECT a<>a FROM t1;
EXPLAIN SELECT * FROM t1 WHERE a>a;
SELECT COUNT(*) FROM t1 WHERE a>a;
SELECT a>a FROM t1;
EXPLAIN SELECT COUNT(*) FROM t1 WHERE a<a;
SELECT COUNT(*) FROM t1 WHERE a<a;
SELECT a<a FROM t1;
EXPLAIN SELECT COUNT(*) FROM t1 WHERE a<=>a;
SELECT COUNT(*) FROM t1 WHERE a<=>a;
SELECT a<=>a FROM t1;
EXPLAIN SELECT COUNT(*) FROM t1 WHERE a<=a;
SELECT COUNT(*) FROM t1 WHERE a<=a;
SELECT a<=a FROM t1;
EXPLAIN SELECT COUNT(*) FROM t1 WHERE a>=a;
SELECT COUNT(*) FROM t1 WHERE a>=a;
SELECT a>=a FROM t1;
EXPLAIN SELECT COUNT(*) FROM t1 WHERE a=a;
SELECT COUNT(*) FROM t1 WHERE a=a;
SELECT a=a FROM t1;
EXPLAIN SELECT COUNT(*) FROM t1 WHERE a<>a IS NOT FALSE;
SELECT COUNT(*) FROM t1 WHERE a<>a IS NOT FALSE;
EXPLAIN SELECT COUNT(*) FROM t1 WHERE (a=1 and a<>a IS NOT FALSE);
SELECT COUNT(*) FROM t1 WHERE (a=1 AND a<>a IS NOT FALSE);
EXPLAIN SELECT * FROM t1 WHERE (a=1 OR a<>a);
SELECT * FROM t1 WHERE (a= 1 OR a<>a);
EXPLAIN SELECT * FROM t1 WHERE (a=1 AND a<>a);
SELECT * FROM t1 WHERE (a=1 AND a<>a);
UPDATE t1 SET a = 2 WHERE a IS NULL;
ALTER TABLE t1 MODIFY a INT NOT NULL;
EXPLAIN SELECT COUNT(*) FROM t1 WHERE a!=a;
SELECT COUNT(*) FROM t1 WHERE a<>a;
EXPLAIN SELECT COUNT(*) FROM t1 WHERE a>a;
SELECT COUNT(*) FROM t1 WHERE a>a;
EXPLAIN SELECT COUNT(*) FROM t1 WHERE a<a;
SELECT COUNT(*) FROM t1 WHERE a<a;
EXPLAIN SELECT COUNT(*) FROM t1 WHERE a<=>a;
SELECT COUNT(*) FROM t1 WHERE a<=>a;
EXPLAIN SELECT COUNT(*) FROM t1 WHERE a<=a;
SELECT COUNT(*) FROM t1 WHERE a<=a;
EXPLAIN SELECT COUNT(*) FROM t1 WHERE a>=a;
SELECT COUNT(*) FROM t1 WHERE a>=a;
EXPLAIN SELECT COUNT(*) FROM t1 WHERE a=a;
SELECT COUNT(*) FROM t1 WHERE a=a;
EXPLAIN SELECT COUNT(*) FROM t1 WHERE a<>a IS NOT FALSE;
SELECT COUNT(*) FROM t1 WHERE a<>a IS NOT FALSE;
EXPLAIN SELECT COUNT(*) FROM t1 WHERE (a =1 and a<>a IS NOT FALSE);
SELECT COUNT(*) FROM t1 WHERE (a=1 AND a<>a IS NOT FALSE);
EXPLAIN SELECT * FROM t1 WHERE (a=1 OR a<>a);
SELECT * FROM t1 WHERE (a=1 OR a<>a);
EXPLAIN SELECT * FROM t1 WHERE (a=1 AND a<>a);
SELECT * FROM t1 WHERE (a=1 AND a<>a);
DROP TABLE t1;
