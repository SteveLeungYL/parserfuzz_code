DROP TABLE DD,H;
CREATE TABLE t (a INT NOT NULL, b BLOB NOT NULL) ENGINE=INNODB;
CREATE VIEW v AS SELECT * FROM t;
INSERT INTO t VALUES (1, ''), (1, '');
DROP VIEW v;
DROP TABLE t;
CREATE TABLE t1 (doc JSON);
INSERT INTO t1 VALUES ('{"txt": "abcd"}'), ('{"txt": "bcde"}'), ('{"txt": "cdef"}'), ('{"txt": "defg"}');
DROP TABLE t1;
CREATE TABLE t(a INT);
INSERT INTO t VALUES (1), (2), (3);
DROP TABLE t;
CREATE TABLE t1 ( i INTEGER);
INSERT INTO t1 VALUES (392),(392),(1027),(1027),(1027),(1034),(1039);
DROP TABLE t1;
CREATE TABLE t(a INT);
INSERT INTO t values (1),(2),(3),(6),(0);
EXPLAIN FORMAT=JSON SELECT 1 FROM t WINDOW w AS(PARTITION BY NULL,NULL ORDER BY NULL ASC);
EXPLAIN FORMAT=JSON SELECT 1 FROM t WINDOW w AS(PARTITION BY 1+2,3+4,5+6 ORDER BY 1+2,3+4);
EXPLAIN FORMAT=JSON SELECT RANK() OVER w1 FROM t WINDOW w1 AS (ORDER BY a), w2 AS (w1);
EXPLAIN FORMAT=JSON SELECT RANK() OVER w2 FROM t WINDOW w1 AS (ORDER BY a), w2 AS (w1);
EXPLAIN FORMAT=JSON SELECT RANK() OVER w2 FROM t WINDOW w1 AS (ORDER BY a), w2 AS (w1), w3 AS (w1);
EXPLAIN FORMAT=JSON SELECT RANK() OVER w3 FROM t WINDOW w1 AS (w2), w3 AS (w2), w2 AS ();
EXPLAIN FORMAT=JSON SELECT RANK() OVER w1 FROM t WINDOW w2 AS (w1), w1 AS (ORDER BY a);
EXPLAIN FORMAT=JSON SELECT RANK() OVER w1 FROM t WINDOW w1 AS (ROWS UNBOUNDED PRECEDING);
DROP TABLE t;
CREATE TABLE t(c LONGTEXT NOT NULL);
INSERT INTO t VALUES ('1'), ('1'), ('1'), ('1');
DROP TABLE t;
CREATE TABLE t(a BIT(52) NOT NULL, KEY(a));
INSERT INTO t VALUES (1), (1), (1);
DROP TABLE t;
CREATE TABLE t ( f1 LONGTEXT GENERATED ALWAYS AS (_utf8mb4'1') VIRTUAL NOT NULL );
INSERT INTO t VALUES();
DROP TABLE t;
CREATE TABLE t1(b INT);
INSERT INTO t1 VALUES (2);
INSERT INTO t1 VALUES (3);
SET SESSION windowing_use_high_precision= FALSE;
INSERT INTO t1 VALUES (2);
INSERT INTO t1 VALUES (3);
SET SESSION windowing_use_high_precision= TRUE;
SET SESSION windowing_use_high_precision= FALSE;
SET SESSION windowing_use_high_precision= TRUE;
DROP TABLE t1;
CREATE TABLE t (a BIGINT,b INT);
INSERT INTO t VALUES (9223372036854775807,1);
INSERT INTO t VALUES (1,2);
DROP TABLE t;
CREATE TABLE t(f1 INTEGER);
INSERT INTO t VALUES(0),(1),(2),(3);
DROP TABLE t;
CREATE TABLE t(a SMALLINT);
INSERT INTO t(a) VALUES (-32768), (-1), (32767), (32767), (1);
DROP TABLE t;
DO ST_CROSSES(@g,SUM(SHA(@g))OVER());
DO UNHEX(SUM(@g)OVER());
DO BIT_LENGTH(AVG(@f)OVER());
DO COMPRESS(SUM(' >')OVER());
DO LTRIM(AVG(LOG2(@c))OVER());
DO (~(SUM(@f)OVER()));
DO IS_UUID(SUM(@e)OVER());
