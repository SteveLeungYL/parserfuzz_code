SET @old_log_output= @@global.log_output;
SET GLOBAL log_output="FILE,TABLE";
drop table if exists t1,t2;
drop table if exists t1aa,t2aa;
drop database if exists mysqltest;
drop database if exists mysqltest1;
flush privileges;
create table t1 (a int not null primary key, b int not null,c int not null, key(b,c));
insert into t1 values (1,2,2),(2,2,3),(3,2,4),(4,2,4);
check table t1 fast;
check table t1 fast;
check table t1 changed;
insert into t1 values (5,5,5);
check table t1 changed;
check table t1 medium;
check table t1 extended;
analyze table t1;
show index from t1;
insert into t1 values (5,5,5);
optimize table t1;
optimize table t1;
drop table t1;
show variables like "wait_timeout%";
show variables like "WAIT_timeout%";
show variables like "this_doesn't_exists%";
show table status from test like "this_doesn't_exists%";
show databases;
show databases like "test%";
create temporary table t1 (a int not null);
show create table t1;
alter table t1 rename t2;
show create table t2;
drop table t2;
create table t1 ( test_set set( 'val1', 'val2', 'val3' ) not null default '', name char(20) default 'O''Brien' comment 'O''Brien as default', c int not null comment 'int column', `c-b` int comment 'name with a minus', `space 2` int comment 'name with a space'   ) comment = 'it\'s a table' ;
show create table t1;
set sql_quote_show_create=0;
show create table t1;
set sql_quote_show_create=1;
show full columns from t1;
drop table t1;
create table t1 (a int not null, unique aa (a));
show create table t1;
drop table t1;
create table t1 (a int not null, primary key (a));
show create table t1;
drop table t1;
flush tables;
show open tables;
create table t1(n int);
insert into t1 values (1);
show open tables;
drop table t1;
create table t1 (a decimal(9,2), b decimal (9,0), e double(9,2), f double(5,0), h float(3,2), i float(3,0));
show columns from t1;
show full columns from t1;
drop table t1;
create table t1 (a int not null);
create table t2 select max(a) from t1;
show columns from t2;
drop table t1,t2;
create table t1 (c decimal, d double, f float, r real);
show columns from t1;
drop table t1;
create table t1 (c decimal(3,3), d double(3,3), f float(3,3));
show columns from t1;
drop table t1;
SET @old_sql_mode= @@sql_mode, sql_mode= '';
SET @old_sql_quote_show_create= @@sql_quote_show_create, sql_quote_show_create= OFF;
CREATE TABLE ```ab``cd``` (i INT);
SHOW CREATE TABLE ```ab``cd```;
DROP TABLE ```ab``cd```;
CREATE TABLE ```ab````cd``` (i INT);
SHOW CREATE TABLE ```ab````cd```;
DROP TABLE ```ab````cd```;
CREATE TABLE ```a` (i INT);
SHOW CREATE TABLE ```a`;
DROP TABLE ```a`;
CREATE TABLE `a.1` (i INT);
SHOW CREATE TABLE `a.1`;
DROP TABLE `a.1`;
SET sql_mode= 'ANSI_QUOTES';
CREATE TABLE """a" (i INT);
SHOW CREATE TABLE """a";
DROP TABLE """a";
SET sql_mode= '';
SET sql_quote_show_create= OFF;
CREATE TABLE t1 (i INT);
SHOW CREATE TABLE t1;
DROP TABLE t1;
CREATE TABLE `table` (i INT);
SHOW CREATE TABLE `table`;
DROP TABLE `table`;
SET sql_quote_show_create= @old_sql_quote_show_create;
SET sql_mode= @old_sql_mode;
select @@max_heap_table_size;
CREATE TABLE t1 ( a int(11) default NULL, KEY a USING BTREE (a) ) ENGINE=HEAP;
CREATE TABLE t2 ( b int(11) default NULL, index(b) ) ENGINE=HEAP;
CREATE TABLE t3 ( a int(11) default NULL, b int(11) default NULL, KEY a USING BTREE (a), index(b) ) ENGINE=HEAP;
insert into t1 values (1),(2);
insert into t2 values (1),(2);
insert into t3 values (1,1),(2,2);
analyze table t1, t2, t3;
show table status;
insert into t1 values (3),(4);
insert into t2 values (3),(4);
insert into t3 values (3,3),(4,4);
analyze table t1, t2, t3;
show table status;
insert into t1 values (5);
insert into t2 values (5);
insert into t3 values (5,5);
analyze table t1, t2, t3;
show table status;
delete from t1 where a=3;
delete from t2 where b=3;
delete from t3 where a=3;
analyze table t1, t2, t3;
show table status;
truncate table t1;
truncate table t2;
truncate table t3;
analyze table t1, t2, t3;
show table status;
insert into t1 values (5);
insert into t2 values (5);
insert into t3 values (5,5);
analyze table t1, t2, t3;
show table status;
delete from t1 where a=5;
delete from t2 where b=5;
delete from t3 where a=5;
analyze table t1, t2, t3;
show table status;
drop table t1, t2, t3;
create database mysqltest;
show create database mysqltest;
create table mysqltest.t1(a int);
insert into mysqltest.t1 values(1);
grant select on `mysqltest`.* to mysqltest_1@localhost;
grant usage  on `mysqltest`.* to mysqltest_2@localhost;
grant drop   on `mysqltest`.* to mysqltest_3@localhost;
select * from t1;
show create database mysqltest;
drop table t1;
drop database mysqltest;
show session status;
select * from mysqltest.t1;
show create database mysqltest;
drop table mysqltest.t1;
drop database mysqltest;
show session status;
select * from mysqltest.t1;
show create database mysqltest;
drop table mysqltest.t1;
drop database mysqltest;
show session status;
set names binary;
flush privileges;
CREATE TABLE t1( field1 text NOT NULL, PRIMARY KEY(field1(750)) );
show index from t1;
drop table t1;
create table t1 ( c1 int NOT NULL, c2 int NOT NULL, PRIMARY KEY USING HASH (c1), INDEX USING BTREE(c2) );
SHOW CREATE TABLE t1;
DROP TABLE t1;
DROP DATABASE IF EXISTS mysqltest1;
CREATE DATABASE mysqltest1;
use mysqltest1;
CREATE TABLE t1(a INT);
CREATE TABLE t2(a INT);
FLUSH TABLES;
SELECT 1 FROM t1;
SELECT 1 FROM t2;
SHOW OPEN TABLES FROM mysqltest1;
SHOW OPEN TABLES FROM mysqltest1 LIKE 'z%';
SHOW OPEN TABLES FROM mysqltest1 LIKE 't1%';
SHOW OPEN TABLES FROM mysqltest1 LIKE '%1%';
FLUSH TABLES;
DROP DATABASE mysqltest1;
use test;
SHOW TABLES FROM non_existing_database;
SHOW TABLES FROM no_such_database;
SHOW COLUMNS FROM no_such_table;
SET GLOBAL EVENT_SCHEDULER = OFF;
CREATE TABLE t1 (f1 INT, f2 INT);
INSERT INTO t1 VALUES(10, 20);
flush status;
show status like 'slow_queries';
show tables;
show status like 'slow_queries';
select 1 from t1 limit 1;
show status like 'slow_queries';
DROP TABLE t1;
create table t1 (a int);
create trigger tr1 before insert on t1 for each row begin end;
create view v1 as select a from t1;
create procedure p1() begin end;
create function f1() returns int return 0;
create event e1 on schedule every 1 year starts now() ends date_add(now(), interval 5 hour) do begin end;
flush status;
show databases;
show tables;
show events;
show table status;
show open tables;
show plugins;
show columns in t1;
show slave hosts;
show keys in t1;
show storage engines;
show privileges;
show count(*) warnings;
show count(*) errors;
show warnings;
show status;
show processlist;
show variables;
show charset;
show collation;
show grants;
show create database test;
show create table t1;
show create view v1;
show master status;
show slave status;
show create procedure p1;
show create function f1;
show create trigger tr1;
show procedure status;
show create event e1;
show status like 'slow_queries';
drop view v1;
drop table t1;
drop procedure p1;
drop function f1;
drop event e1;
SET GLOBAL EVENT_SCHEDULER = ON;
DROP DATABASE IF EXISTS mysqltest1;
DROP TABLE IF EXISTS t1;
DROP VIEW IF EXISTS v1;
DROP PROCEDURE IF EXISTS p1;
DROP FUNCTION IF EXISTS f1;
CREATE DATABASE mysqltest1;
CREATE TABLE t1(c INT NOT NULL PRIMARY KEY);
CREATE TRIGGER t1_bi BEFORE INSERT ON t1 FOR EACH ROW SET @a = 1;
CREATE VIEW v1 AS SELECT 1;
CREATE PROCEDURE p1() SELECT 1;
CREATE FUNCTION f1() RETURNS INT RETURN 1;
set names utf8;
SHOW CHARACTER SET LIKE 'utf8';
SHOW COLLATION LIKE 'latin1_bin';
SHOW CREATE DATABASE mysqltest1;
SHOW DATABASES LIKE 'mysqltest1';
SHOW CREATE TABLE t1;
SHOW INDEX FROM t1;
SELECT TABLE_CATALOG, TABLE_SCHEMA, TABLE_NAME, TABLE_TYPE, ENGINE, ROW_FORMAT, TABLE_COLLATION, CREATE_OPTIONS, TABLE_COMMENT FROM INFORMATION_SCHEMA.TABLES WHERE table_name = 't1';
SELECT TABLE_CATALOG, TABLE_SCHEMA, TABLE_NAME, COLUMN_NAME, COLUMN_DEFAULT, IS_NULLABLE, DATA_TYPE, CHARACTER_SET_NAME, COLLATION_NAME, COLUMN_TYPE, COLUMN_KEY, EXTRA, PRIVILEGES, COLUMN_COMMENT FROM INFORMATION_SCHEMA.COLUMNS WHERE table_name = 't1';
SHOW TABLES LIKE 't1';
SHOW COLUMNS FROM t1;
SHOW TRIGGERS LIKE 't1';
SELECT TRIGGER_CATALOG, TRIGGER_SCHEMA, TRIGGER_NAME, EVENT_MANIPULATION, EVENT_OBJECT_CATALOG, EVENT_OBJECT_SCHEMA, EVENT_OBJECT_TABLE, ACTION_CONDITION, ACTION_STATEMENT, ACTION_ORIENTATION, ACTION_TIMING, ACTION_REFERENCE_OLD_TABLE, ACTION_REFERENCE_NEW_TABLE, ACTION_REFERENCE_OLD_ROW, ACTION_REFERENCE_NEW_ROW, SQL_MODE, DEFINER FROM INFORMATION_SCHEMA.TRIGGERS WHERE trigger_name = 't1_bi';
SHOW CREATE VIEW v1;
SELECT * FROM INFORMATION_SCHEMA.VIEWS WHERE table_name = 'v1';
SHOW CREATE PROCEDURE p1;
SELECT SPECIFIC_NAME, ROUTINE_CATALOG, ROUTINE_SCHEMA, ROUTINE_NAME, ROUTINE_TYPE, DTD_IDENTIFIER, ROUTINE_BODY, ROUTINE_DEFINITION, EXTERNAL_NAME, EXTERNAL_LANGUAGE, PARAMETER_STYLE, IS_DETERMINISTIC, SQL_DATA_ACCESS, SQL_PATH, SECURITY_TYPE, SQL_MODE, ROUTINE_COMMENT, DEFINER FROM INFORMATION_SCHEMA.ROUTINES WHERE routine_name = 'p1';
SHOW CREATE FUNCTION f1;
SELECT SPECIFIC_NAME, ROUTINE_CATALOG, ROUTINE_SCHEMA, ROUTINE_NAME, ROUTINE_TYPE, DTD_IDENTIFIER, ROUTINE_BODY, ROUTINE_DEFINITION, EXTERNAL_NAME, EXTERNAL_LANGUAGE, PARAMETER_STYLE, IS_DETERMINISTIC, SQL_DATA_ACCESS, SQL_PATH, SECURITY_TYPE, SQL_MODE, ROUTINE_COMMENT, DEFINER FROM INFORMATION_SCHEMA.ROUTINES WHERE routine_name = 'f1';
DROP DATABASE mysqltest1;
DROP TABLE t1;
DROP VIEW v1;
DROP PROCEDURE p1;
DROP FUNCTION f1;
set names koi8r;
DROP DATABASE IF EXISTS mysqltest1;
CREATE DATABASE mysqltest1;
use mysqltest1;
CREATE TABLE t1(�������1 INT);
DROP DATABASE mysqltest1;
SHOW CREATE TABLE mysqltest1.t1;
DROP DATABASE mysqltest1;
use test;
create database mysqltest;
show create database mysqltest;
create table mysqltest.t1(a int);
insert into mysqltest.t1 values(1);
grant select on `mysqltest`.`t1` to mysqltest_4@localhost;
show create database mysqltest;
show session status;
flush privileges;
drop database mysqltest;
show plugins;
create database `mysqlttest\1`;
create table `mysqlttest\1`.`a\b` (a int);
show tables from `mysqlttest\1`;
show fields from `mysqlttest\1`.`a\b`;
show columns from `a\b` from `mysqlttest\1`;
show keys from `mysqlttest\1`.`a\b`;
drop table `mysqlttest\1`.`a\b`;
drop database `mysqlttest\1`;
show engine foobar status;
show engine foobar logs;
show engine foobar mutex;
show engine mutex status;
show engine csv status;
show engine csv logs;
show engine csv mutex;
set names utf8;
drop table if exists `été`;
create table `été` (field1 int);
show full tables;
drop table `été`;
set names latin1;
SET NAMES latin1;
CREATE DATABASE `�`;
CREATE TABLE `�`.`�` (a int) ENGINE=Memory;
ANALYZE TABLE `�`.`�`;
SHOW TABLE STATUS FROM `�` LIKE '�';
DROP DATABASE `�`;
show columns from `#mysql50#????????`;
call mtr.add_suppression("Can.t find file: '.\\\\test\\\\\\?{8}.frm'");
DROP TABLE IF EXISTS t1;
DROP PROCEDURE IF EXISTS p1;
CREATE TABLE t1(c1 INT);
CREATE TRIGGER t1_bi BEFORE INSERT ON t1 FOR EACH ROW SET @a = 1;
SHOW CREATE TRIGGER t1_bi;
CREATE PROCEDURE p1() SHOW CREATE TRIGGER t1_bi;
CALL p1();
CALL p1();
CALL p1();
CALL p1();
CALL p1();
CALL p1();
CALL p1();
CALL p1();
CALL p1();
CALL p1();
PREPARE stmt1 FROM 'SHOW CREATE TRIGGER t1_bi';
EXECUTE stmt1;
EXECUTE stmt1;
EXECUTE stmt1;
EXECUTE stmt1;
EXECUTE stmt1;
EXECUTE stmt1;
EXECUTE stmt1;
EXECUTE stmt1;
EXECUTE stmt1;
EXECUTE stmt1;
DROP TABLE t1;
DROP PROCEDURE p1;
DEALLOCATE PREPARE stmt1;
set names koi8r;
DROP VIEW IF EXISTS v1;
DROP PROCEDURE IF EXISTS p1;
DROP FUNCTION IF EXISTS f1;
DROP TABLE IF EXISTS t1;
DROP EVENT IF EXISTS ev1;
CREATE VIEW v1 AS SELECT '����' AS test;
CREATE PROCEDURE p1() SELECT '����' AS test;
CREATE FUNCTION f1() RETURNS CHAR(10) RETURN '����';
CREATE TABLE t1(c1 CHAR(10));
CREATE TRIGGER t1_bi BEFORE INSERT ON t1 FOR EACH ROW SET NEW.c1 = '����';
CREATE EVENT ev1 ON SCHEDULE AT '2030-01-01 00:00:00' DO SELECT '����' AS test;
set names utf8;
SHOW CREATE VIEW v1;
SHOW CREATE PROCEDURE p1;
SHOW CREATE FUNCTION f1;
SHOW CREATE TRIGGER t1_bi;
SHOW CREATE EVENT ev1;
DROP VIEW v1;
DROP PROCEDURE p1;
DROP FUNCTION f1;
DROP TABLE t1;
DROP EVENT ev1;
SHOW STORAGE ENGINES;
CREATE USER test_u@localhost;
GRANT PROCESS ON *.* TO test_u@localhost;
SHOW ENGINE MYISAM MUTEX;
SHOW ENGINE MYISAM STATUS;
show session status;
DROP USER test_u@localhost;
KILL QUERY 21;
SHOW CREATE TABLE non_existent;
show session status;
DROP TABLE IF EXISTS t1;
CREATE TABLE t1 (i INT PRIMARY KEY);
LOCK TABLE t1 WRITE;
SHOW CREATE TABLE t1;
show session status;
UNLOCK TABLES;
DROP TABLE t1;
DROP TABLE IF EXISTS t1;
CREATE TABLE t1(a INT);
LOCK TABLE t1 WRITE;
START TRANSACTION;
SHOW CREATE TABLE t1;
ALTER TABLE t1 CHARACTER SET = utf8;
UNLOCK TABLES;
COMMIT;
DROP TABLE t1;
DROP TABLE IF EXISTS t1;
CREATE TABLE t1 (a INT);
CREATE TRIGGER t1_bi BEFORE INSERT ON t1 FOR EACH ROW SET new.a = 1;
LOCK TABLE t1 WRITE;
SHOW CREATE TRIGGER t1_bi;
UNLOCK TABLES;
START TRANSACTION;
SHOW CREATE TRIGGER t1_bi;
ALTER TABLE t1 CHARACTER SET = utf8;
show session status;
COMMIT;
DROP TRIGGER t1_bi;
DROP TABLE t1;
SET NAMES latin1;
SELECT GET_LOCK('t', 1000);
SET NAMES latin1;
SELECT GET_LOCK('t',1000) AS 'óóóó';;
SHOW PROCESSLIST;
SET NAMES utf8;
SHOW PROCESSLIST;
SELECT RELEASE_LOCK('t');
reap;
show session status;
SET NAMES latin1;
DROP TABLE IF EXISTS t1;
CREATE TABLE t1 (a INT);
CREATE TRIGGER t1_bi BEFORE INSERT ON t1 FOR EACH ROW BEGIN END;
SHOW CREATE TRIGGER t1_bi;
CREATE TEMPORARY TABLE t1 (b INT);
SHOW CREATE TRIGGER t1_bi;
DROP TEMPORARY TABLE t1;
DROP TABLE t1;
SHOW AUTHORS;
SHOW CONTRIBUTORS;
CREATE TABLE t1 (i CHAR(3), n CHAR(20) CHARACTER SET utf8 GENERATED ALWAYS AS (md5(i)));
SHOW CREATE TABLE t1;
DROP TABLE t1;
CREATE TABLE `t1` ( `i` char(3) DEFAULT NULL, `n` char(20) CHARACTER SET utf8 GENERATED ALWAYS AS (md5(i)) VIRTUAL ) ENGINE=InnoDB DEFAULT CHARSET=latin1;
DROP TABLE t1;
CREATE DATABASE unknown;
SHOW TABLES FROM UNKNOWN;
SHOW TABLES FROM UNKNOWN;
DROP DATABASE unknown;
CREATE TABLE t1 (c1 int(11) NOT NULL, c2 int(11) DEFAULT NULL, c3 text, PRIMARY KEY (c1));
CREATE INDEX c2d ON t1(c2);
SHOW COLUMNS FROM t1;
SHOW FULL COLUMNS FROM t1;
SELECT table_name, column_name, column_type FROM INFORMATION_SCHEMA.COLUMNS WHERE table_name='t1';
SHOW EXTENDED COLUMNS FROM t1;
SHOW EXTENDED FULL COLUMNS FROM t1;
SHOW INDEX FROM t1;
SELECT table_schema, table_name, index_name, column_name FROM INFORMATION_SCHEMA.STATISTICS WHERE table_name='t1';
SELECT * FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE table_name='t1';
SELECT constraint_schema, constraint_name, table_name, column_name FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE WHERE table_name='t1';
SHOW EXTENDED INDEX FROM t1;
DROP TABLE t1;
CREATE TEMPORARY TABLE t1 (f1 INT, f2 INT);
DESCRIBE t1 f1;
DESCRIBE t1 f2;
SHOW COLUMNS FROM t1 LIKE 'f1';
SHOW COLUMNS FROM t1 LIKE 'f2';
DROP TABLE t1;
CREATE TABLE t1 (f1 CHAR(1), f2 CHAR(1) COLLATE UTF8_BIN, f3 CHAR(1) CHARSET UTF8MB3, f4 CHAR(1) CHARSET UTF8MB4);
SHOW CREATE TABLE t1;
ALTER TABLE t1 ADD COLUMN f5 CHAR(1);
ALTER TABLE t1 ADD COLUMN f6 CHAR(1) CHARSET UTF8MB4;
SHOW CREATE TABLE t1;
CREATE TABLE t2 AS SELECT * FROM t1;
SHOW CREATE TABLE t2;
CREATE TABLE t3 LIKE t1;
SHOW CREATE TABLE t3;
DROP TABLE t1;
DROP TABLE t2;
DROP TABLE t3;
SET @@global.log_output = @old_log_output;
TRUNCATE TABLE mysql.general_log;
TRUNCATE TABLE mysql.slow_log;
