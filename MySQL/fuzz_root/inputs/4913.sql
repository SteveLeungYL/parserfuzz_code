set big_tables=0;
flush status;
create table t1(a int, b int, c int);
insert into t1 values(null,null,null),(2,3,4);
WITH qn AS (SELECT a FROM t1) SELECT 1 FROM dual;
WITH qn AS (SELECT a FROM t1), qn2 as (select b from t1) SELECT 1 FROM dual;
WITH qn AS (SELECT a FROM t1), qn as (select b from t1) SELECT 1 FROM qn;
WITH qn AS (SELECT b as a FROM t1) SELECT qn.a, qn2.a  FROM qn, qn as qn2;
WITH qn AS (SELECT b as a FROM t1), qn2 AS (SELECT c FROM t1 WHERE a IS NULL or a>0) SELECT qn.a, qn2.c  FROM qn, qn2;
WITH qn AS (SELECT 10*a as a FROM t1), qn2 AS (SELECT 3*a FROM qn) SELECT * from qn2;
WITH qn AS (SELECT a FROM t1), qn2 AS (SELECT a FROM qn) SELECT * from qn2;
WITH qn AS (SELECT b as a FROM t1), qn2 AS (SELECT a FROM qn WHERE a IS NULL or a>0) SELECT qn.a, qn2.a  FROM qn, qn2;
EXPLAIN WITH qn AS (SELECT b as a FROM t1), qn2 AS (SELECT a FROM qn WHERE a IS NULL or a>0) SELECT qn.a, qn2.a  FROM qn, qn2;
WITH qn2 AS (SELECT a FROM qn WHERE a IS NULL or a>0), qn AS (SELECT b as a FROM t1) SELECT qn2.a  FROM qn2;
with qn1 as (with qn3 as (select * from qn2) select * from qn3), qn2 as (select 1) select * from qn1;
with qn0 as (select 1), qn1 as (select * from qn0), qn2 as (select 1), qn3 as (select 1 from qn1, qn2) select 1 from qn3;
explain with qn as (select 1) select 2;
with qn as (select 1) select 2;
WITH qn2 AS (SELECT a FROM qn WHERE a IS NULL or a>0), qn AS (SELECT b as a FROM qn2) SELECT qn.a  FROM qn;
WITH qn AS (SELECT a FROM qn) SELECT qn.a FROM qn;
WITH qn1 AS (SELECT a FROM qn3), qn2 AS (SELECT a FROM qn1), qn3 AS (SELECT a FROM t1), qn4 AS (SELECT a FROM qn2) SELECT a FROM qn4;
with qn as (select * from t1) select (select max(a) from qn);
SELECT (WITH qn AS (SELECT 10*a as a FROM t1), qn2 AS (SELECT 3*a AS b FROM qn) SELECT * from qn2 LIMIT 1) FROM t1;
SELECT * FROM (WITH qn AS (SELECT 10*a as a FROM t1), qn2 AS (SELECT 3*a AS b FROM qn) SELECT * from qn2) AS dt;
with qn as (with qn2 as (select "qn2" as a from t1) select "qn", a from qn2) select * from qn;
CREATE VIEW v AS WITH qn AS (SELECT 10*a as a FROM t1), qn2 AS (SELECT 3*a AS b FROM qn) SELECT * from qn2;
SELECT * FROM v;
DROP VIEW v;
CREATE TABLE t2 WITH qn AS (SELECT 10*a as a FROM t1), qn2 AS (SELECT 3*a AS b FROM qn) SELECT * from qn2;
SELECT * FROM t2;
INSERT INTO t2 WITH qn AS (SELECT 10*a as a FROM t1), qn2 AS (SELECT 3*a AS b FROM qn) SELECT * from qn2;
SELECT * FROM t2;
DROP TABLE t2;
explain with qn as (select * from t1 limit 10) select (select max(a) from qn where a=0), (select min(b) from qn where b=3);
with qn as (select * from t1 limit 10) select (select max(a) from qn where a=0), (select min(b) from qn where b=3);
create table qn select "base";
select * from qn;
with qn as (select "with") select * from qn;
WITH qn AS (select * from qn) select * from qn;
create view v as select * from qn;
select * from v;
with qn as (select "with") select * from v;
with qn as (select * from v) select * from qn;
drop table qn;
with qn as (select "with") select * from v;
with qn as (select * from v) select * from qn;
create table qn select "base" as a;
create function f() returns varchar(10) return (select * from qn);
select f();
with qn as (select "with") select f();
with qn as (select f()) select * from qn;
create temporary table qn select "tmp" as a;
select * from qn;
with qn as (select "with") select * from qn;
drop function f;
drop view v;
with qn as (select "with") select * from (select "dt") as qn;
WITH qn AS (select "outer" as a) SELECT (WITH qn AS (SELECT "inner" as a) SELECT a from qn), qn.a FROM qn;
with test.qn as (select "with") select * from test.qn;
select test.qn.a from (select "with" as a) qn;
with qn as (select "with") select * from qn;
with qn as (select "with") select * from test.qn;
with qn as (select "with" as a) select a from qn;
with qn as (select "with" as a) select qn.a from qn;
with qn as (select "with" as a) select test.qn.a from qn;
with qn as (select "with" as a) select a from test.qn;
with qn as (select "with" as a) select qn.a from test.qn;
with qn as (select "with" as a) select test.qn.a from test.qn;
drop temporary table qn;
with qn as (select "with" as a) select a from test.qn;
with qn as (select "with" as a) select qn.a from test.qn;
with qn as (select "with" as a) select test.qn.a from test.qn;
drop table qn;
with qn as (select "with" as a) select a from test.qn;
with qn as (select "with" as a) select qn.a from test.qn;
with qn as (select "with" as a) select test.qn.a from test.qn;
WITH qn AS (SELECT b as a FROM t1 UNION SELECT b+5 FROM t1), qn2 AS (SELECT a FROM qn WHERE a IS NULL or a>0) SELECT qn.a FROM qn UNION SELECT qn2.a FROM qn2 WHERE qn2.a>3;
with qn as (select "with" as a) with qn2 as (select "with" as a) select a from test.qn;
with qn as (select "with" as a), with qn2 as (select "with" as a) select a from test.qn;
explain with qn as (select a from t1 order by 1) select a from qn;
explain with qn as (select a from t1 order by 1) select qn.a from qn, t1 as t2;
explain with qn as (select a from t1 order by 1 limit 10) select qn.a from qn, t1 as t2;
explain with qn as (select a from t1), qn2 as (select b from t1) select /*+ merge(qn) no_merge(qn2) */ qn.a,qn2.b from qn, qn2;
explain with qn as (select a from t1) select /*+ merge(qn) no_merge(qn2) */ qn2.a from qn, qn as qn2;
with qn as (select a, b from t1) select b from qn group by a;
with qn as (select a, b from t1 where a=b) select b from qn group by a;
with qn as (select a, sum(b) as s from t1 group by a) select s from qn group by a;
set @myvar= (with qn as (select a, sum(b) as s from t1 group by a) select s from qn group by a having s is not null);
select @myvar;
explain with cte as (select * from t1 as t2 limit 1) select * from t1 where t1.a in (select a+0 from cte);
with cte as (select * from t1 as t2 limit 1) select * from t1 where t1.a in (select a+0 from cte);
explain with cte as (select * from t1 as t2) select * from t1 where t1.a in (select a+0 from cte);
with cte as (select * from t1 as t2) select * from t1 where t1.a in (select a+0 from cte);
with qn () as (select 1) select * from qn, qn qn1;
with qn (foo, bar) as (select 1) select * from qn, qn qn1;
explain with qn (foo, bar) as (select 1, 2 from t1 limit 2) select * from qn, qn qn1;
with qn (foo, bar) as (select 1, 2 from t1 limit 2) select * from qn, qn qn1;
with qn (foo, bar) as (select 1 as col, 2 as coll from t1 limit 2) select * from qn, qn qn1;
with qn (foo, bar) as (select 1 as col, 2 as coll union select a,b from t1) select qn1.bar from qn qn1;
with qn (foo, bar) as (select a, b from t1 limit 2) select qn.bar,foo from qn;
create table t3 with qn (foo, bar) as (select a, b from t1 limit 2) select bar,foo from qn;
desc t3;
drop table t3;
with qn (foo, bar) as (select 1 from t1) select * from qn, qn qn1;
with qn (foo, bar) as (select 1, 2 from t1) select * from qn, qn qn1;
explain with qn (foo, bar) as (select 1, 2 from t1) select * from qn, qn qn1;
with qn (foo, bar) as (select 1 as col, 2 as coll from t1) select * from qn, qn qn1;
with qn (foo, bar) as (select a, b from t1) select qn1.bar,foo from qn qn1;
create table t3 with qn (foo, bar) as (select a, b from t1) select bar,foo from qn;
desc t3;
drop table t3;
with qn as (select 1,1) select * from qn;
with qn (foo, bar) as (select 1,1) select * from qn;
with qn as (select 1,1 from t1) select * from qn;
with qn (foo, bar) as (select 1,1 from t1) select * from qn;
with qn (foo, foo) as (select 1,2) select * from qn;
select * from (select '1', 1) dt(foo,bar);
select * from (select a,b from t1) dt(foo,bar);
select * from (select a from t1) dt(foo,bar);
create view v1 as with qn (foo, bar) as (select 1,1) select * from qn;
show create view v1;
show fields from v1;
select * from v1;
drop view v1;
create view v1 as select * from (select 1,1) dt(foo,bar);
show create view v1;
select * from v1;
drop view v1;
create view v1 as with qn (foo, bar) as (select 1,1 from t1) select * from qn;
show create view v1;
select * from v1;
drop view v1;
create view v1 as select * from (select 1,1 from t1) dt(foo,bar);
show create view v1;
select * from v1;
drop view v1;
create view v1 as select * from (select 1) dt(`select`);
show create view v1;
select * from v1;
drop view v1;
create view v1 (bar) as select 1 as foo group by foo union select 2 order by foo;
select * from v1;
show create view v1;
select TABLE_NAME,COLUMN_NAME from information_schema.columns where TABLE_SCHEMA='test' and TABLE_NAME='v1';
select VIEW_DEFINITION from information_schema.views where TABLE_SCHEMA='test' and TABLE_NAME='v1';
drop view v1;
create view v1 (bar) as select 1, 2 from t1;
drop table t1;
create table t1(a int);
insert into t1 values(1),(2),(3),(4);
flush status;
with qn as (select 123 as col) select * from qn;
show status like "handler_write";
flush status;
with qn as (select 123 as col) select * from qn, qn as qn1;
show status like "handler_write";
create view qn as select 123 as col;
flush status;
select * from qn, qn as qn1;
show status like "handler_write";
drop view qn;
drop table t1;
create view v as select (with qn as (select "with") select * from qn) as scal_subq from dual;
show create view v;
select * from v;
drop view v;
create view v as select * from (with qn as (select "with") select * from qn) as dt;
show create view v;
select * from v;
drop view v;
create table t1 (a int);
explain with qne as (select a from t1), qnm as (select a from t1), qnea as (select a from t1), qnma as (select a from t1) select /*+ merge(qne) no_merge(qnm) merge(alias1) no_merge(alias2) */ qne.a,qnm.a,alias1.a,alias2.a from qne, qnm, qnea as alias1, qnma as alias2;
drop table t1;
create table t1 (a int);
insert into t1(a) values (1),(2),(3),(4),(5),(6),(7),(8),(9),(0);
analyze table t1;
flush status;
explain with tt as (select * from t1) select /*+ no_merge(tt) */ tt.a from t1 straight_join tt where t1.a=tt.a limit 1;
show status like "handler_write";
flush status;
with tt as (select * from t1) select /*+ no_merge(tt) */ tt.a from t1 straight_join tt where t1.a=tt.a limit 1;
show status like "handler_write";
with tt as (select * from t1) select /*+ no_merge(tt) no_merge(tt_)*/ tt.a from t1 straight_join tt straight_join tt as tt_ where t1.a=tt.a and tt.a=tt_.a limit 1;
with q as (select * from t1) select /*+ merge(q) no_merge(q1) */ * from q, q q1 where q.a=1 and q1.a=2;
drop table t1;
drop table t;
create table t1(a int, b int);
insert into t1 values (null, 6), (null, 10);
EXPLAIN with t2 as (select * from t1) SELECT /*+ no_merge(t2) */ * FROM t2 WHERE (a = a OR b <= 6) AND (a IS NULL);
with t2 as (select * from t1) SELECT /*+ no_merge(t2) */ * FROM t2 WHERE (a = a OR b <= 6) AND (a IS NULL);
drop table t1;
create view v1 as select "with";
with v1 as (select * from v1) select * from v1;
drop view v1;
create view v1 as with qn as (select 1 as col) select * from qn;
select * from v1;
drop view v1;
create table t1(a int, b int);
create view v1 as with qn as (select a from t1), qn2 as (select b from t1) select /*+ merge(qn) no_merge(qn2) */ qn.a,qn2.b from qn, qn2;
explain select * from v1;
drop view v1;
create algorithm=temptable view v1 as with qn as (select a from t1) select qn.a  from qn;
explain select * from v1;
drop view v1;
drop table t1;
create table sales_days(day_of_sale DATE, amount INT);
insert into sales_days values ('2015-01-02', 100), ('2015-01-05', 200), ('2015-02-02', 10),  ('2015-02-10', 100), ('2015-03-02', 10),  ('2015-03-18', 1);
with # first CTE: one row per month, with amount sold on all days of month sales_by_month(month,total) as (select month(day_of_sale), sum(amount) from sales_days where year(day_of_sale)=2015 group by month(day_of_sale)), # second CTE: best month best_month(month, total, award) as (select month, total, "best" from sales_by_month where total=(select max(total) from sales_by_month)), # 3rd CTE: worst month worst_month(month, total, award) as (select month, total, "worst" from sales_by_month where total=(select min(total) from sales_by_month)) # Now show results: select * from best_month union all select * from worst_month;
drop table sales_days;
parse_cte ( select 1 ) ;
create temporary table tmp(a int) as select 1;
select * from tmp, tmp tmp1;
with qn as (select 1) select * from qn, qn qn1;
with qn as (select * from tmp) select /*+ merge(qn,qn1) */ * from qn, qn qn1;
with qn as (select * from tmp) select /*+ no_merge(qn,qn1) */ * from qn, qn qn1;
drop temporary table tmp;
create table t1(a int, b int);
insert into t1 values(1,2),(3,4);
create table t2 select * from t1;
set autocommit=0;
with qn as (select a, b from t1) update t1, qn set qn.a=qn.a+10;
select * from t1;
rollback;
explain with qn as (select a+2 as a, b from t1) update t1, qn set t1.a=qn.a+10 where t1.a-qn.a=0;
with qn as (select a+2 as a, b from t1) update t1, qn set t1.a=qn.a+10 where t1.a-qn.a=0;
select * from t1;
rollback;
explain with qn as (select a+2 as a, b from t2) update t1, qn set t1.a=qn.a+10 where t1.a-qn.a=0;
with qn as (select a+2 as a, b from t2) update t1, qn set t1.a=qn.a+10 where t1.a-qn.a=0;
select * from t1;
rollback;
explain with qn as (select a+2 as a, b from t2) update /*+ no_merge(qn) */ t1, qn set t1.a=qn.a+10 where t1.a-qn.a=0;
with qn as (select a+2 as a, b from t2) update /*+ no_merge(qn) */ t1, qn set t1.a=qn.a+10 where t1.a-qn.a=0;
select * from t1;
rollback;
explain with qn as (select a+2 as a, b from t2) update t1, qn, qn as qn2 set t1.a=qn.a+10 where t1.a-qn.a=0 and qn.b=qn2.b;
with qn as (select a+2 as a, b from t2) update t1, qn, qn as qn2 set t1.a=qn.a+10 where t1.a-qn.a=0 and qn.b=qn2.b;
select * from t1;
rollback;
explain with qn as (select a+2 as a, b from t2) update t1 set t1.a=(select qn.a+10 from qn where t1.a-qn.a=0 limit 1);
with qn as (select a+2 as a, b from t2) update t1 set t1.a=(select qn.a+10 from qn where t1.a-qn.a=0 limit 1);
select * from t1;
rollback;
explain with qn as (select a+2 as a, b from t2) update t1 set t1.a=(select /*+ merge(qn) */ qn.a+10 from qn where t1.a-qn.a=0 limit 1);
with qn as (select a+2 as a, b from t2) update t1 set t1.a=(select /*+ merge(qn) */ qn.a+10 from qn where t1.a-qn.a=0 limit 1);
select * from t1;
rollback;
with qn as (select a, b from t1) delete qn from t1,qn;
select * from t1;
rollback;
explain with qn as (select a+2 as a, b from t1) delete t1 from t1, qn where t1.a-qn.a=0;
with qn as (select a+2 as a, b from t1) delete t1 from t1, qn where t1.a-qn.a=0;
select * from t1;
rollback;
explain with qn as (select a+2 as a, b from t2) delete t1 from t1, qn where t1.a-qn.a=0;
with qn as (select a+2 as a, b from t2) delete t1 from t1, qn where t1.a-qn.a=0;
select * from t1;
rollback;
explain with qn as (select a+2 as a, b from t2) delete /*+ no_merge(qn) */ t1 from t1, qn where t1.a-qn.a=0;
with qn as (select a+2 as a, b from t2) delete /*+ no_merge(qn) */ t1 from t1, qn where t1.a-qn.a=0;
select * from t1;
rollback;
explain with qn as (select a+2 as a, b from t2) delete t1 from t1, qn, qn as qn2 where t1.a-qn.a=0 and qn.b=qn2.b;
with qn as (select a+2 as a, b from t2) delete t1 from t1, qn, qn as qn2 where t1.a-qn.a=0 and qn.b=qn2.b;
select * from t1;
rollback;
explain with qn as (select a+2 as a, b from t2) delete from t1 where t1.a=(select qn.a from qn where t1.a-qn.a=0 limit 1);
with qn as (select a+2 as a, b from t2) delete from t1 where t1.a=(select qn.a from qn where t1.a-qn.a=0 limit 1);
select * from t1;
rollback;
explain with qn as (select a+2 as a, b from t2) delete from t1 where t1.a=(select /*+ merge(qn) */ qn.a from qn where t1.a-qn.a=0 limit 1);
with qn as (select a+2 as a, b from t2) delete from t1 where t1.a=(select /*+ merge(qn) */ qn.a from qn where t1.a-qn.a=0 limit 1);
select * from t1;
rollback;
drop table t1,t2;
set autocommit=default;
select database();
create database mysqltest1;
use mysqltest1;
drop database mysqltest1;
select database();
with qn as (select 1) select * from qn;
use test;
show status like 'Created_tmp_disk_tables';
set big_tables=1;
flush status;
create table t1(a int, b int, c int);
insert into t1 values(null,null,null),(2,3,4);
WITH qn AS (SELECT a FROM t1) SELECT 1 FROM dual;
WITH qn AS (SELECT a FROM t1), qn2 as (select b from t1) SELECT 1 FROM dual;
WITH qn AS (SELECT a FROM t1), qn as (select b from t1) SELECT 1 FROM qn;
WITH qn AS (SELECT b as a FROM t1) SELECT qn.a, qn2.a  FROM qn, qn as qn2;
WITH qn AS (SELECT b as a FROM t1), qn2 AS (SELECT c FROM t1 WHERE a IS NULL or a>0) SELECT qn.a, qn2.c  FROM qn, qn2;
WITH qn AS (SELECT 10*a as a FROM t1), qn2 AS (SELECT 3*a FROM qn) SELECT * from qn2;
WITH qn AS (SELECT a FROM t1), qn2 AS (SELECT a FROM qn) SELECT * from qn2;
WITH qn AS (SELECT b as a FROM t1), qn2 AS (SELECT a FROM qn WHERE a IS NULL or a>0) SELECT qn.a, qn2.a  FROM qn, qn2;
EXPLAIN WITH qn AS (SELECT b as a FROM t1), qn2 AS (SELECT a FROM qn WHERE a IS NULL or a>0) SELECT qn.a, qn2.a  FROM qn, qn2;
WITH qn2 AS (SELECT a FROM qn WHERE a IS NULL or a>0), qn AS (SELECT b as a FROM t1) SELECT qn2.a  FROM qn2;
with qn1 as (with qn3 as (select * from qn2) select * from qn3), qn2 as (select 1) select * from qn1;
with qn0 as (select 1), qn1 as (select * from qn0), qn2 as (select 1), qn3 as (select 1 from qn1, qn2) select 1 from qn3;
explain with qn as (select 1) select 2;
with qn as (select 1) select 2;
WITH qn2 AS (SELECT a FROM qn WHERE a IS NULL or a>0), qn AS (SELECT b as a FROM qn2) SELECT qn.a  FROM qn;
WITH qn AS (SELECT a FROM qn) SELECT qn.a FROM qn;
WITH qn1 AS (SELECT a FROM qn3), qn2 AS (SELECT a FROM qn1), qn3 AS (SELECT a FROM t1), qn4 AS (SELECT a FROM qn2) SELECT a FROM qn4;
with qn as (select * from t1) select (select max(a) from qn);
SELECT (WITH qn AS (SELECT 10*a as a FROM t1), qn2 AS (SELECT 3*a AS b FROM qn) SELECT * from qn2 LIMIT 1) FROM t1;
SELECT * FROM (WITH qn AS (SELECT 10*a as a FROM t1), qn2 AS (SELECT 3*a AS b FROM qn) SELECT * from qn2) AS dt;
with qn as (with qn2 as (select "qn2" as a from t1) select "qn", a from qn2) select * from qn;
CREATE VIEW v AS WITH qn AS (SELECT 10*a as a FROM t1), qn2 AS (SELECT 3*a AS b FROM qn) SELECT * from qn2;
SELECT * FROM v;
DROP VIEW v;
CREATE TABLE t2 WITH qn AS (SELECT 10*a as a FROM t1), qn2 AS (SELECT 3*a AS b FROM qn) SELECT * from qn2;
SELECT * FROM t2;
INSERT INTO t2 WITH qn AS (SELECT 10*a as a FROM t1), qn2 AS (SELECT 3*a AS b FROM qn) SELECT * from qn2;
SELECT * FROM t2;
DROP TABLE t2;
explain with qn as (select * from t1 limit 10) select (select max(a) from qn where a=0), (select min(b) from qn where b=3);
with qn as (select * from t1 limit 10) select (select max(a) from qn where a=0), (select min(b) from qn where b=3);
create table qn select "base";
select * from qn;
with qn as (select "with") select * from qn;
WITH qn AS (select * from qn) select * from qn;
create view v as select * from qn;
select * from v;
with qn as (select "with") select * from v;
with qn as (select * from v) select * from qn;
drop table qn;
with qn as (select "with") select * from v;
with qn as (select * from v) select * from qn;
create table qn select "base" as a;
create function f() returns varchar(10) return (select * from qn);
select f();
with qn as (select "with") select f();
with qn as (select f()) select * from qn;
create temporary table qn select "tmp" as a;
select * from qn;
with qn as (select "with") select * from qn;
drop function f;
drop view v;
with qn as (select "with") select * from (select "dt") as qn;
WITH qn AS (select "outer" as a) SELECT (WITH qn AS (SELECT "inner" as a) SELECT a from qn), qn.a FROM qn;
with test.qn as (select "with") select * from test.qn;
select test.qn.a from (select "with" as a) qn;
with qn as (select "with") select * from qn;
with qn as (select "with") select * from test.qn;
with qn as (select "with" as a) select a from qn;
with qn as (select "with" as a) select qn.a from qn;
with qn as (select "with" as a) select test.qn.a from qn;
with qn as (select "with" as a) select a from test.qn;
with qn as (select "with" as a) select qn.a from test.qn;
with qn as (select "with" as a) select test.qn.a from test.qn;
drop temporary table qn;
with qn as (select "with" as a) select a from test.qn;
with qn as (select "with" as a) select qn.a from test.qn;
with qn as (select "with" as a) select test.qn.a from test.qn;
drop table qn;
with qn as (select "with" as a) select a from test.qn;
with qn as (select "with" as a) select qn.a from test.qn;
with qn as (select "with" as a) select test.qn.a from test.qn;
WITH qn AS (SELECT b as a FROM t1 UNION SELECT b+5 FROM t1), qn2 AS (SELECT a FROM qn WHERE a IS NULL or a>0) SELECT qn.a FROM qn UNION SELECT qn2.a FROM qn2 WHERE qn2.a>3;
with qn as (select "with" as a) with qn2 as (select "with" as a) select a from test.qn;
with qn as (select "with" as a), with qn2 as (select "with" as a) select a from test.qn;
explain with qn as (select a from t1 order by 1) select a from qn;
explain with qn as (select a from t1 order by 1) select qn.a from qn, t1 as t2;
explain with qn as (select a from t1 order by 1 limit 10) select qn.a from qn, t1 as t2;
explain with qn as (select a from t1), qn2 as (select b from t1) select /*+ merge(qn) no_merge(qn2) */ qn.a,qn2.b from qn, qn2;
explain with qn as (select a from t1) select /*+ merge(qn) no_merge(qn2) */ qn2.a from qn, qn as qn2;
with qn as (select a, b from t1) select b from qn group by a;
with qn as (select a, b from t1 where a=b) select b from qn group by a;
with qn as (select a, sum(b) as s from t1 group by a) select s from qn group by a;
set @myvar= (with qn as (select a, sum(b) as s from t1 group by a) select s from qn group by a having s is not null);
select @myvar;
explain with cte as (select * from t1 as t2 limit 1) select * from t1 where t1.a in (select a+0 from cte);
with cte as (select * from t1 as t2 limit 1) select * from t1 where t1.a in (select a+0 from cte);
explain with cte as (select * from t1 as t2) select * from t1 where t1.a in (select a+0 from cte);
with cte as (select * from t1 as t2) select * from t1 where t1.a in (select a+0 from cte);
with qn () as (select 1) select * from qn, qn qn1;
with qn (foo, bar) as (select 1) select * from qn, qn qn1;
explain with qn (foo, bar) as (select 1, 2 from t1 limit 2) select * from qn, qn qn1;
with qn (foo, bar) as (select 1, 2 from t1 limit 2) select * from qn, qn qn1;
with qn (foo, bar) as (select 1 as col, 2 as coll from t1 limit 2) select * from qn, qn qn1;
with qn (foo, bar) as (select 1 as col, 2 as coll union select a,b from t1) select qn1.bar from qn qn1;
with qn (foo, bar) as (select a, b from t1 limit 2) select qn.bar,foo from qn;
create table t3 with qn (foo, bar) as (select a, b from t1 limit 2) select bar,foo from qn;
desc t3;
drop table t3;
with qn (foo, bar) as (select 1 from t1) select * from qn, qn qn1;
with qn (foo, bar) as (select 1, 2 from t1) select * from qn, qn qn1;
explain with qn (foo, bar) as (select 1, 2 from t1) select * from qn, qn qn1;
with qn (foo, bar) as (select 1 as col, 2 as coll from t1) select * from qn, qn qn1;
with qn (foo, bar) as (select a, b from t1) select qn1.bar,foo from qn qn1;
create table t3 with qn (foo, bar) as (select a, b from t1) select bar,foo from qn;
desc t3;
drop table t3;
with qn as (select 1,1) select * from qn;
with qn (foo, bar) as (select 1,1) select * from qn;
with qn as (select 1,1 from t1) select * from qn;
with qn (foo, bar) as (select 1,1 from t1) select * from qn;
with qn (foo, foo) as (select 1,2) select * from qn;
select * from (select '1', 1) dt(foo,bar);
select * from (select a,b from t1) dt(foo,bar);
select * from (select a from t1) dt(foo,bar);
create view v1 as with qn (foo, bar) as (select 1,1) select * from qn;
show create view v1;
show fields from v1;
select * from v1;
drop view v1;
create view v1 as select * from (select 1,1) dt(foo,bar);
show create view v1;
select * from v1;
drop view v1;
create view v1 as with qn (foo, bar) as (select 1,1 from t1) select * from qn;
show create view v1;
select * from v1;
drop view v1;
create view v1 as select * from (select 1,1 from t1) dt(foo,bar);
show create view v1;
select * from v1;
drop view v1;
create view v1 as select * from (select 1) dt(`select`);
show create view v1;
select * from v1;
drop view v1;
create view v1 (bar) as select 1 as foo group by foo union select 2 order by foo;
select * from v1;
show create view v1;
select TABLE_NAME,COLUMN_NAME from information_schema.columns where TABLE_SCHEMA='test' and TABLE_NAME='v1';
select VIEW_DEFINITION from information_schema.views where TABLE_SCHEMA='test' and TABLE_NAME='v1';
drop view v1;
create view v1 (bar) as select 1, 2 from t1;
drop table t1;
create table t1(a int);
insert into t1 values(1),(2),(3),(4);
flush status;
with qn as (select 123 as col) select * from qn;
show status like "handler_write";
flush status;
with qn as (select 123 as col) select * from qn, qn as qn1;
show status like "handler_write";
create view qn as select 123 as col;
flush status;
select * from qn, qn as qn1;
show status like "handler_write";
drop view qn;
drop table t1;
create view v as select (with qn as (select "with") select * from qn) as scal_subq from dual;
show create view v;
select * from v;
drop view v;
create view v as select * from (with qn as (select "with") select * from qn) as dt;
show create view v;
select * from v;
drop view v;
create table t1 (a int);
explain with qne as (select a from t1), qnm as (select a from t1), qnea as (select a from t1), qnma as (select a from t1) select /*+ merge(qne) no_merge(qnm) merge(alias1) no_merge(alias2) */ qne.a,qnm.a,alias1.a,alias2.a from qne, qnm, qnea as alias1, qnma as alias2;
drop table t1;
create table t1 (a int);
insert into t1(a) values (1),(2),(3),(4),(5),(6),(7),(8),(9),(0);
analyze table t1;
flush status;
explain with tt as (select * from t1) select /*+ no_merge(tt) */ tt.a from t1 straight_join tt where t1.a=tt.a limit 1;
show status like "handler_write";
flush status;
with tt as (select * from t1) select /*+ no_merge(tt) */ tt.a from t1 straight_join tt where t1.a=tt.a limit 1;
show status like "handler_write";
with tt as (select * from t1) select /*+ no_merge(tt) no_merge(tt_)*/ tt.a from t1 straight_join tt straight_join tt as tt_ where t1.a=tt.a and tt.a=tt_.a limit 1;
with q as (select * from t1) select /*+ merge(q) no_merge(q1) */ * from q, q q1 where q.a=1 and q1.a=2;
drop table t1;
drop table t;
create table t1(a int, b int);
insert into t1 values (null, 6), (null, 10);
EXPLAIN with t2 as (select * from t1) SELECT /*+ no_merge(t2) */ * FROM t2 WHERE (a = a OR b <= 6) AND (a IS NULL);
with t2 as (select * from t1) SELECT /*+ no_merge(t2) */ * FROM t2 WHERE (a = a OR b <= 6) AND (a IS NULL);
drop table t1;
create view v1 as select "with";
with v1 as (select * from v1) select * from v1;
drop view v1;
create view v1 as with qn as (select 1 as col) select * from qn;
select * from v1;
drop view v1;
create table t1(a int, b int);
create view v1 as with qn as (select a from t1), qn2 as (select b from t1) select /*+ merge(qn) no_merge(qn2) */ qn.a,qn2.b from qn, qn2;
explain select * from v1;
drop view v1;
create algorithm=temptable view v1 as with qn as (select a from t1) select qn.a  from qn;
explain select * from v1;
drop view v1;
drop table t1;
create table sales_days(day_of_sale DATE, amount INT);
insert into sales_days values ('2015-01-02', 100), ('2015-01-05', 200), ('2015-02-02', 10),  ('2015-02-10', 100), ('2015-03-02', 10),  ('2015-03-18', 1);
with # first CTE: one row per month, with amount sold on all days of month sales_by_month(month,total) as (select month(day_of_sale), sum(amount) from sales_days where year(day_of_sale)=2015 group by month(day_of_sale)), # second CTE: best month best_month(month, total, award) as (select month, total, "best" from sales_by_month where total=(select max(total) from sales_by_month)), # 3rd CTE: worst month worst_month(month, total, award) as (select month, total, "worst" from sales_by_month where total=(select min(total) from sales_by_month)) # Now show results: select * from best_month union all select * from worst_month;
drop table sales_days;
parse_cte ( select 1 ) ;
create temporary table tmp(a int) as select 1;
select * from tmp, tmp tmp1;
with qn as (select 1) select * from qn, qn qn1;
with qn as (select * from tmp) select /*+ merge(qn,qn1) */ * from qn, qn qn1;
with qn as (select * from tmp) select /*+ no_merge(qn,qn1) */ * from qn, qn qn1;
drop temporary table tmp;
create table t1(a int, b int);
insert into t1 values(1,2),(3,4);
create table t2 select * from t1;
set autocommit=0;
with qn as (select a, b from t1) update t1, qn set qn.a=qn.a+10;
select * from t1;
rollback;
explain with qn as (select a+2 as a, b from t1) update t1, qn set t1.a=qn.a+10 where t1.a-qn.a=0;
with qn as (select a+2 as a, b from t1) update t1, qn set t1.a=qn.a+10 where t1.a-qn.a=0;
select * from t1;
rollback;
explain with qn as (select a+2 as a, b from t2) update t1, qn set t1.a=qn.a+10 where t1.a-qn.a=0;
with qn as (select a+2 as a, b from t2) update t1, qn set t1.a=qn.a+10 where t1.a-qn.a=0;
select * from t1;
rollback;
explain with qn as (select a+2 as a, b from t2) update /*+ no_merge(qn) */ t1, qn set t1.a=qn.a+10 where t1.a-qn.a=0;
with qn as (select a+2 as a, b from t2) update /*+ no_merge(qn) */ t1, qn set t1.a=qn.a+10 where t1.a-qn.a=0;
select * from t1;
rollback;
explain with qn as (select a+2 as a, b from t2) update t1, qn, qn as qn2 set t1.a=qn.a+10 where t1.a-qn.a=0 and qn.b=qn2.b;
with qn as (select a+2 as a, b from t2) update t1, qn, qn as qn2 set t1.a=qn.a+10 where t1.a-qn.a=0 and qn.b=qn2.b;
select * from t1;
rollback;
explain with qn as (select a+2 as a, b from t2) update t1 set t1.a=(select qn.a+10 from qn where t1.a-qn.a=0 limit 1);
with qn as (select a+2 as a, b from t2) update t1 set t1.a=(select qn.a+10 from qn where t1.a-qn.a=0 limit 1);
select * from t1;
rollback;
explain with qn as (select a+2 as a, b from t2) update t1 set t1.a=(select /*+ merge(qn) */ qn.a+10 from qn where t1.a-qn.a=0 limit 1);
with qn as (select a+2 as a, b from t2) update t1 set t1.a=(select /*+ merge(qn) */ qn.a+10 from qn where t1.a-qn.a=0 limit 1);
select * from t1;
rollback;
with qn as (select a, b from t1) delete qn from t1,qn;
select * from t1;
rollback;
explain with qn as (select a+2 as a, b from t1) delete t1 from t1, qn where t1.a-qn.a=0;
with qn as (select a+2 as a, b from t1) delete t1 from t1, qn where t1.a-qn.a=0;
select * from t1;
rollback;
explain with qn as (select a+2 as a, b from t2) delete t1 from t1, qn where t1.a-qn.a=0;
with qn as (select a+2 as a, b from t2) delete t1 from t1, qn where t1.a-qn.a=0;
select * from t1;
rollback;
explain with qn as (select a+2 as a, b from t2) delete /*+ no_merge(qn) */ t1 from t1, qn where t1.a-qn.a=0;
with qn as (select a+2 as a, b from t2) delete /*+ no_merge(qn) */ t1 from t1, qn where t1.a-qn.a=0;
select * from t1;
rollback;
explain with qn as (select a+2 as a, b from t2) delete t1 from t1, qn, qn as qn2 where t1.a-qn.a=0 and qn.b=qn2.b;
with qn as (select a+2 as a, b from t2) delete t1 from t1, qn, qn as qn2 where t1.a-qn.a=0 and qn.b=qn2.b;
select * from t1;
rollback;
explain with qn as (select a+2 as a, b from t2) delete from t1 where t1.a=(select qn.a from qn where t1.a-qn.a=0 limit 1);
with qn as (select a+2 as a, b from t2) delete from t1 where t1.a=(select qn.a from qn where t1.a-qn.a=0 limit 1);
select * from t1;
rollback;
explain with qn as (select a+2 as a, b from t2) delete from t1 where t1.a=(select /*+ merge(qn) */ qn.a from qn where t1.a-qn.a=0 limit 1);
with qn as (select a+2 as a, b from t2) delete from t1 where t1.a=(select /*+ merge(qn) */ qn.a from qn where t1.a-qn.a=0 limit 1);
select * from t1;
rollback;
drop table t1,t2;
set autocommit=default;
select database();
create database mysqltest1;
use mysqltest1;
drop database mysqltest1;
select database();
with qn as (select 1) select * from qn;
use test;
show status like 'Created_tmp_disk_tables';
