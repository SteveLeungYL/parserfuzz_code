drop table if exists t1,t2;
create table t1(n int);
insert into t1 values (1);
select get_lock("mysqltest_lock", 100);
update t1 set n = 2 and get_lock('mysqltest_lock', 100);
update low_priority t1 set n = 4;
select n from t1;
select release_lock("mysqltest_lock");
reap;
select release_lock("mysqltest_lock");
reap;
reap;
drop table t1;
create table t1(n int);
insert into t1 values (1);
select get_lock("mysqltest_lock", 100);
select n from t1 where get_lock('mysqltest_lock', 100);
update low_priority t1 set n = 4;
select n from t1;
select release_lock("mysqltest_lock");
reap;
select release_lock("mysqltest_lock");
reap;
drop table t1;
create table t1 (a int, b int);
create table t2 (c int, d int);
insert into t1 values(1,1);
insert into t1 values(2,2);
insert into t2 values(1,2);
select get_lock("mysqltest_lock", 100);
select a from t1 where get_lock('mysqltest_lock', 100);
update t1,t2 set c=a where b=d;
select c from t2;
select release_lock("mysqltest_lock");
reap;
select release_lock("mysqltest_lock");
select get_lock("mysqltest_lock", 100);
select c from t2 where get_lock('mysqltest_lock', 100);
update t1,t2 set c=a where b=d;;
select release_lock("mysqltest_lock");
reap;
select release_lock("mysqltest_lock");
reap;
lock table t1 read;
update t1,t2 set c=a where b=d;;
unlock tables;
reap;
lock table t2 read;
update t1,t2 set c=a where b=d;;
unlock tables;
reap;
lock table t1 read;
lock tables t1 read, t2 write;
update t1,t2 set c=a where b=d;
unlock tables;
unlock tables;
drop table t1;
drop table t2;
create table t1 (a int);
create table t2 (a int);
lock table t1 write, t2 write;
insert t1 select * from t2;
drop table t2;
unlock tables;
reap;
drop table t1;
create table t1 (a int);
create table t2 (a int);
lock table t1 write, t2 write, t1 as t1_2 write, t2 as t2_2 write;
insert t1 select * from t2;
drop table t2;
unlock tables;
reap;
drop table t1;
create table t1(a int);
lock tables t1 write;
show columns from t1;
unlock tables;
drop table t1;
FLUSH PRIVILEGES;
USE mysql;
FLUSH TABLES;
USE mysql;
UNLOCK TABLES;
reap;
USE test;
use test;
CREATE TABLE t1 (c1 int);
LOCK TABLE t1 WRITE;
FLUSH TABLES WITH READ LOCK;
CREATE TABLE t2 (c1 int);
UNLOCK TABLES;
reap;
UNLOCK TABLES;
DROP TABLE t1;
CREATE TABLE t1 (c1 int);
LOCK TABLE t1 WRITE;
FLUSH TABLES WITH READ LOCK;
CREATE TABLE t2 AS SELECT * FROM t1;
UNLOCK TABLES;
reap;
UNLOCK TABLES;
DROP TABLE t1;
FLUSH PRIVILEGES;
CREATE DATABASE mysqltest_1;
FLUSH TABLES WITH READ LOCK;
DROP DATABASE mysqltest_1;
DROP DATABASE mysqltest_1;
UNLOCK TABLES;
reap;
DROP DATABASE mysqltest_1;
create table t1 (f1 int(12) unsigned not null auto_increment, primary key(f1)) engine=innodb;
lock tables t1 write;
alter table t1 auto_increment=0;
alter table t1 auto_increment=0;
unlock tables;
reap;
reap;
drop table t1;
create table t1 (a int);
create table t2 like t1;
lock tables t1 write;
flush tables with read lock;
select * from t2 for update;
flush tables t2;
unlock tables;
reap;
unlock tables;
reap;
drop table t1,t2;
create table t1 (a int);
create table t2 like t1;
flush tables with read lock;
update t2 set a = 1;
flush table t2;
unlock tables;
reap;
flush tables with read lock;
lock tables t2 write;
flush table t2;
unlock tables;
reap;
unlock tables;
drop table t1,t2;
create table t1 (i int);
insert into t1 values (1);
select get_lock('mysqltest_lock', 100);
select * from t1 where get_lock('mysqltest_lock', 100);
update t1 set i= 10;
select * from t1;
kill query 16;
reap;
reap;
select release_lock('mysqltest_lock');
reap;
select release_lock('mysqltest_lock');
drop table t1;
drop table if exists t1;
create table t1 (a int) ENGINE=MEMORY;
handler t1 open;
drop table t1;
drop table if exists t1;
create table t1 (i int);
lock tables t1 write;
flush tables with read lock;;
alter table t1 add column j int;
insert into t1 values (1,2);;
unlock tables;
reap;
select * from t1;
unlock tables;
reap;
select * from t1;
drop table t1;
drop table if exists t1;
create table t1 (i int);
lock tables t1 write;
flush tables with read lock;;
flush tables;
unlock tables;
reap;
drop table t1;
drop table if exists t1,t2;
create table t1 (a int);
insert into t1 values (1);
select get_lock('mysqltest_lock', 100);
flush status;
select * from t1 where get_lock('mysqltest_lock', 100);
update t1 set a= 2;
select release_lock('mysqltest_lock');
reap;
reap;
select release_lock('mysqltest_lock');
drop table t1;
SET @tlwa= SUBSTRING_INDEX('Table_locks_waited	0', '	', -1);
SET @tlwb= SUBSTRING_INDEX('Table_locks_waited	1', '	', -1);
select @tlwa < @tlwb;
drop table if exists t1;
create table t1 (i int);
lock tables t1 write;
flush tables with read lock;;
flush tables;
drop table t1;
reap;
drop table if exists t1;
create table t1 (c1 int primary key, c2 int, c3 int);
insert into t1 values (1,1,0),(2,2,0),(3,3,0),(4,4,0),(5,5,0);
begin;
update t1 set c3=c3+1 where c2=3;
alter table t1 add column c4 int;;
update t1 set c3=c3+1 where c2=4;
commit;
reap;
drop table t1;
DROP TABLE IF EXISTS t1;
DROP VIEW  IF EXISTS v1;
CREATE TABLE t1 ( f1 integer );
CREATE VIEW v1 AS SELECT f1 FROM t1 ;
LOCK TABLES v1 WRITE, t1 READ;
FLUSH TABLE t1;
show session status;
LOCK TABLES t1 WRITE;
FLUSH TABLE t1;
UNLOCK TABLES;
DROP TABLE t1;
DROP VIEW v1;
CREATE TABLE t1 ( f1 integer );
CREATE VIEW v1 AS SELECT f1 FROM t1 ;
LOCK TABLES t1 WRITE, v1 READ;
FLUSH TABLE t1;
show session status;
LOCK TABLES t1 WRITE;
FLUSH TABLE t1;
DROP TABLE t1;
DROP VIEW v1;
drop table if exists t1;
drop view if exists v1;
create table t1 (i int);
create view v1 as select i from t1;
begin;
select * from t1;
alter table t1 add column j int;
delete a from t1 as a where i = 1;
commit;
reap;
begin;
select * from v1;
alter table t1 drop column j;
insert into v1 values (1);
commit;
reap;
drop view v1;
drop table t1;
DROP TABLE IF EXISTS t1;
CREATE TABLE t1 (id int);
SET SESSION lock_wait_timeout= 1;
START TRANSACTION;
INSERT INTO t1 VALUES (1);
DROP TABLE t1;
COMMIT;
START TRANSACTION;
SELECT * FROM t1;
ALTER TABLE t1 RENAME TO t2;
COMMIT;
LOCK TABLE t1 WRITE;
INSERT INTO t1(id) VALUES (2);
UNLOCK TABLES;
LOCK TABLE t1 READ;
INSERT INTO t1(id) VALUES(4);
UNLOCK TABLES;
LOCK TABLE t1 READ;
FLUSH TABLES;
SELECT * FROM t1;
UNLOCK TABLES;
reap;
CREATE TABLE t2 (id INT);
LOCK TABLE t2 WRITE;
DROP TABLE t1, t2;
SET SESSION information_schema_stats_expiry=0;
SELECT table_name, table_rows, table_comment FROM information_schema.tables WHERE table_schema= 'test' AND table_name= 't1';
SET SESSION information_schema_stats_expiry=default;
UNLOCK TABLES;
reap;
drop tables if exists t1, t2, t3;
create table t3 (i int);
lock table t3 read;
rename tables t1 to t2, t2 to t3;;
kill query 39;
reap;
unlock tables;
drop table t3;
DROP TABLE IF EXISTS t1;
CREATE TABLE t1 (id INT);
LOCK TABLE t1 WRITE;
CREATE TEMPORARY TABLE t1 (id INT);
ALTER TABLE t1 ADD COLUMN j INT;
UNLOCK TABLES;
DROP TABLE t1;
CREATE TABLE t1 (i INT) ENGINE=MyISAM;
CREATE TABLE t2 (i INT) ENGINE=InnoDB;
INSERT INTO t1 VALUES (1);
INSERT INTO t2 VALUES (1);
CREATE VIEW v1 AS SELECT * FROM t1;
CREATE VIEW v2 AS SELECT * FROM t2;
CREATE TABLE t3 (j INT);
CREATE TABLE t4 (j INT);
CREATE VIEW v3 AS SELECT * FROM t3 WHERE (SELECT COUNT(*) FROM t1);
CREATE VIEW v4 AS SELECT * FROM t4 WHERE (SELECT COUNT(*) FROM t2);
CREATE TABLE t5 (k INT);
CREATE TABLE t6 (k INT);
CREATE TRIGGER bi_t5 BEFORE INSERT ON t5 FOR EACH ROW SET @a:= (SELECT COUNT(*) FROM t1);
CREATE TRIGGER bi_t6 BEFORE INSERT ON t6 FOR EACH ROW SET @a:= (SELECT COUNT(*) FROM t2);
CREATE TABLE t7 (z INT);
CREATE TABLE t8 (z INT);
CREATE TRIGGER bi_t7 BEFORE INSERT ON t7 FOR EACH ROW INSERT INTO t1 VALUES (1);
CREATE TRIGGER bi_t8 BEFORE INSERT ON t8 FOR EACH ROW INSERT INTO t2 VALUES (1);
LOCK TABLE t1 READ, t2 READ;
SELECT * FROM t1;
SELECT * FROM t2;
UNLOCK TABLES;
SELECT GET_LOCK('mysqltest_lock', 100);
SELECT GET_LOCK('mysqltest_lock', 100) FROM t1, t2;;
LOCK TABLES t1 READ, t2 READ;
UNLOCK TABLES;
SELECT RELEASE_LOCK('mysqltest_lock');
reap;
SELECT RELEASE_LOCK('mysqltest_lock');
LOCK TABLE t1 READ, t2 READ;
INSERT INTO t1 VALUES (1);
INSERT INTO t2 VALUES (1);
UNLOCK TABLES;
reap;
reap;
DELETE FROM t1 LIMIT 1;
DELETE FROM t2 LIMIT 1;
SELECT GET_LOCK('mysqltest_lock', 100);
INSERT INTO t1 VALUES (GET_LOCK('mysqltest_lock', 100));;
LOCK TABLES t1 READ;;
SELECT RELEASE_LOCK('mysqltest_lock');
reap;
SELECT RELEASE_LOCK('mysqltest_lock');
reap;
UNLOCK TABLES;
SELECT GET_LOCK('mysqltest_lock', 100);
INSERT INTO t2 VALUES (GET_LOCK('mysqltest_lock', 100));;
LOCK TABLES t2 READ;;
SELECT RELEASE_LOCK('mysqltest_lock');
reap;
SELECT RELEASE_LOCK('mysqltest_lock');
reap;
UNLOCK TABLES;
DELETE FROM t1 LIMIT 1;
DELETE FROM t2 LIMIT 1;
BEGIN;
SELECT * FROM t1;
LOCK TABLES t1 READ;
UNLOCK TABLES;
COMMIT;
BEGIN;
SELECT * FROM t2;
LOCK TABLES t2 READ;
UNLOCK TABLES;
COMMIT;
BEGIN;
INSERT INTO t1 VALUES (1);
LOCK TABLES t1 READ;;
COMMIT;
reap;
UNLOCK TABLES;
BEGIN;
INSERT INTO t2 VALUES (1);
LOCK TABLES t2 READ;;
COMMIT;
reap;
UNLOCK TABLES;
DELETE FROM t1 LIMIT 1;
DELETE FROM t2 LIMIT 1;
LOCK TABLES t1 READ, t2 READ;
LOCK TABLES t1 READ, t2 READ;
UNLOCK TABLES;
UNLOCK TABLES;
LOCK TABLES t1 READ;
LOCK TABLES t1 WRITE;;
UNLOCK TABLES;
reap;
UNLOCK TABLES;
LOCK TABLES t2 READ;
LOCK TABLES t2 WRITE;;
UNLOCK TABLES;
reap;
UNLOCK TABLES;
LOCK TABLES t1 WRITE;
LOCK TABLES t1 READ;;
UNLOCK TABLES;
reap;
UNLOCK TABLES;
LOCK TABLES t2 WRITE;
LOCK TABLES t2 READ;;
UNLOCK TABLES;
reap;
UNLOCK TABLES;
LOCK TABLE t1 WRITE;
SELECT * FROM t1;;
UNLOCK TABLES;
reap;
LOCK TABLE t2 WRITE;
SELECT * FROM t2;;
UNLOCK TABLES;
reap;
SELECT GET_LOCK('mysqltest_lock', 100);
SELECT GET_LOCK('mysqltest_lock', 100) FROM t1;;
LOCK TABLES t1 WRITE;;
UNLOCK TABLES;
SELECT RELEASE_LOCK('mysqltest_lock');
reap;
SELECT RELEASE_LOCK('mysqltest_lock');
reap;
UNLOCK TABLES;
SELECT GET_LOCK('mysqltest_lock', 100);
SELECT GET_LOCK('mysqltest_lock', 100) FROM t2;;
LOCK TABLES t2 WRITE;;
UNLOCK TABLES;
SELECT RELEASE_LOCK('mysqltest_lock');
reap;
SELECT RELEASE_LOCK('mysqltest_lock');
reap;
UNLOCK TABLES;
LOCK TABLE t1 WRITE, t2 WRITE;
INSERT INTO t1 VALUES (1);
INSERT INTO t2 VALUES (1);
UNLOCK TABLES;
reap;
reap;
DELETE FROM t1 LIMIT 1;
DELETE FROM t2 LIMIT 1;
SELECT GET_LOCK('mysqltest_lock', 100);
INSERT INTO t1 VALUES (GET_LOCK('mysqltest_lock', 100));;
LOCK TABLES t1 WRITE;;
SELECT RELEASE_LOCK('mysqltest_lock');
reap;
SELECT RELEASE_LOCK('mysqltest_lock');
reap;
UNLOCK TABLES;
SELECT GET_LOCK('mysqltest_lock', 100);
INSERT INTO t2 VALUES (GET_LOCK('mysqltest_lock', 100));;
LOCK TABLES t2 WRITE;;
SELECT RELEASE_LOCK('mysqltest_lock');
reap;
SELECT RELEASE_LOCK('mysqltest_lock');
reap;
UNLOCK TABLES;
DELETE FROM t1 LIMIT 1;
DELETE FROM t2 LIMIT 1;
BEGIN;
SELECT * FROM t1;
LOCK TABLES t1 WRITE;;
COMMIT;
reap;
UNLOCK TABLES;
BEGIN;
SELECT * FROM t2;
LOCK TABLES t2 WRITE;;
COMMIT;
reap;
UNLOCK TABLES;
BEGIN;
INSERT INTO t1 VALUES (1);
LOCK TABLES t1 WRITE;;
COMMIT;
reap;
UNLOCK TABLES;
BEGIN;
INSERT INTO t2 VALUES (1);
LOCK TABLES t2 WRITE;;
COMMIT;
reap;
UNLOCK TABLES;
DELETE FROM t1 LIMIT 1;
DELETE FROM t2 LIMIT 1;
LOCK TABLES t1 WRITE;
LOCK TABLES t1 WRITE;;
UNLOCK TABLES;
reap;
UNLOCK TABLES;
LOCK TABLES t2 WRITE;
LOCK TABLES t2 WRITE;;
UNLOCK TABLES;
reap;
UNLOCK TABLES;
LOCK TABLE v1 READ, v2 READ;
SELECT * FROM t1;
SELECT * FROM t2;
UNLOCK TABLES;
SELECT GET_LOCK('mysqltest_lock', 100);
SELECT GET_LOCK('mysqltest_lock', 100) FROM t1, t2;;
LOCK TABLES v1 READ, v2 READ;
UNLOCK TABLES;
SELECT RELEASE_LOCK('mysqltest_lock');
reap;
SELECT RELEASE_LOCK('mysqltest_lock');
LOCK TABLE v1 READ, v2 READ;
INSERT INTO t1 VALUES (1);
INSERT INTO t2 VALUES (1);
UNLOCK TABLES;
reap;
reap;
DELETE FROM t1 LIMIT 1;
DELETE FROM t2 LIMIT 1;
SELECT GET_LOCK('mysqltest_lock', 100);
INSERT INTO t1 VALUES (GET_LOCK('mysqltest_lock', 100));;
LOCK TABLES v1 READ;;
SELECT RELEASE_LOCK('mysqltest_lock');
reap;
SELECT RELEASE_LOCK('mysqltest_lock');
reap;
UNLOCK TABLES;
SELECT GET_LOCK('mysqltest_lock', 100);
INSERT INTO t2 VALUES (GET_LOCK('mysqltest_lock', 100));;
LOCK TABLES v2 READ;;
SELECT RELEASE_LOCK('mysqltest_lock');
reap;
SELECT RELEASE_LOCK('mysqltest_lock');
reap;
UNLOCK TABLES;
DELETE FROM t1 LIMIT 1;
DELETE FROM t2 LIMIT 1;
BEGIN;
SELECT * FROM t1;
LOCK TABLES v1 READ;
UNLOCK TABLES;
COMMIT;
BEGIN;
SELECT * FROM t2;
LOCK TABLES v2 READ;
UNLOCK TABLES;
COMMIT;
BEGIN;
INSERT INTO t1 VALUES (1);
LOCK TABLES v1 READ;;
COMMIT;
reap;
UNLOCK TABLES;
BEGIN;
INSERT INTO t2 VALUES (1);
LOCK TABLES v2 READ;;
COMMIT;
reap;
UNLOCK TABLES;
DELETE FROM t1 LIMIT 1;
DELETE FROM t2 LIMIT 1;
LOCK TABLES t1 READ, t2 READ;
LOCK TABLES v1 READ, v2 READ;
UNLOCK TABLES;
UNLOCK TABLES;
LOCK TABLES v1 READ;
LOCK TABLES t1 WRITE;;
UNLOCK TABLES;
reap;
UNLOCK TABLES;
LOCK TABLES v2 READ;
LOCK TABLES t2 WRITE;;
UNLOCK TABLES;
reap;
UNLOCK TABLES;
LOCK TABLES t1 WRITE;
LOCK TABLES v1 READ;;
UNLOCK TABLES;
reap;
UNLOCK TABLES;
LOCK TABLES t2 WRITE;
LOCK TABLES v2 READ;;
UNLOCK TABLES;
reap;
UNLOCK TABLES;
LOCK TABLES v3 WRITE, v4 WRITE;
SELECT * FROM t1;
SELECT * FROM t2;
UNLOCK TABLES;
SELECT GET_LOCK('mysqltest_lock', 100);
SELECT GET_LOCK('mysqltest_lock', 100) FROM t1, t2;;
LOCK TABLES v3 WRITE, v4 WRITE;
UNLOCK TABLES;
SELECT RELEASE_LOCK('mysqltest_lock');
reap;
SELECT RELEASE_LOCK('mysqltest_lock');
LOCK TABLES v3 WRITE, v4 WRITE;
INSERT INTO t1 VALUES (1);
INSERT INTO t2 VALUES (1);
UNLOCK TABLES;
reap;
reap;
DELETE FROM t1 LIMIT 1;
DELETE FROM t2 LIMIT 1;
SELECT GET_LOCK('mysqltest_lock', 100);
INSERT INTO t1 VALUES (GET_LOCK('mysqltest_lock', 100));;
LOCK TABLES v3 WRITE;;
SELECT RELEASE_LOCK('mysqltest_lock');
reap;
SELECT RELEASE_LOCK('mysqltest_lock');
reap;
UNLOCK TABLES;
SELECT GET_LOCK('mysqltest_lock', 100);
INSERT INTO t2 VALUES (GET_LOCK('mysqltest_lock', 100));;
LOCK TABLES v4 WRITE;;
SELECT RELEASE_LOCK('mysqltest_lock');
reap;
SELECT RELEASE_LOCK('mysqltest_lock');
reap;
UNLOCK TABLES;
DELETE FROM t1 LIMIT 1;
DELETE FROM t2 LIMIT 1;
BEGIN;
SELECT * FROM t1;
LOCK TABLES v3 WRITE;
UNLOCK TABLES;
COMMIT;
BEGIN;
SELECT * FROM t2;
LOCK TABLES v4 WRITE;
UNLOCK TABLES;
COMMIT;
BEGIN;
INSERT INTO t1 VALUES (1);
LOCK TABLES v3 WRITE;;
COMMIT;
reap;
UNLOCK TABLES;
BEGIN;
INSERT INTO t2 VALUES (1);
LOCK TABLES v4 WRITE;;
COMMIT;
reap;
UNLOCK TABLES;
DELETE FROM t1 LIMIT 1;
DELETE FROM t2 LIMIT 1;
LOCK TABLES t1 READ, t2 READ;
LOCK TABLES v3 WRITE, v4 WRITE;
UNLOCK TABLES;
UNLOCK TABLES;
LOCK TABLES v3 WRITE;
LOCK TABLES t1 WRITE;;
UNLOCK TABLES;
reap;
UNLOCK TABLES;
LOCK TABLES v4 WRITE;
LOCK TABLES t2 WRITE;;
UNLOCK TABLES;
reap;
UNLOCK TABLES;
LOCK TABLES t1 WRITE;
LOCK TABLES v3 WRITE;;
UNLOCK TABLES;
reap;
UNLOCK TABLES;
LOCK TABLES t2 WRITE;
LOCK TABLES v4 WRITE;;
UNLOCK TABLES;
reap;
UNLOCK TABLES;
LOCK TABLE v1 WRITE;
SELECT * FROM t1;;
UNLOCK TABLES;
reap;
LOCK TABLE v2 WRITE;
SELECT * FROM t2;;
UNLOCK TABLES;
reap;
SELECT GET_LOCK('mysqltest_lock', 100);
SELECT GET_LOCK('mysqltest_lock', 100) FROM t1;;
LOCK TABLES v1 WRITE;;
UNLOCK TABLES;
SELECT RELEASE_LOCK('mysqltest_lock');
reap;
SELECT RELEASE_LOCK('mysqltest_lock');
reap;
UNLOCK TABLES;
SELECT GET_LOCK('mysqltest_lock', 100);
SELECT GET_LOCK('mysqltest_lock', 100) FROM t2;;
LOCK TABLES v2 WRITE;;
UNLOCK TABLES;
SELECT RELEASE_LOCK('mysqltest_lock');
reap;
SELECT RELEASE_LOCK('mysqltest_lock');
reap;
UNLOCK TABLES;
LOCK TABLE v1 WRITE, v2 WRITE;
INSERT INTO t1 VALUES (1);
INSERT INTO t2 VALUES (1);
UNLOCK TABLES;
reap;
reap;
DELETE FROM t1 LIMIT 1;
DELETE FROM t2 LIMIT 1;
SELECT GET_LOCK('mysqltest_lock', 100);
INSERT INTO t1 VALUES (GET_LOCK('mysqltest_lock', 100));;
LOCK TABLES v1 WRITE;;
SELECT RELEASE_LOCK('mysqltest_lock');
reap;
SELECT RELEASE_LOCK('mysqltest_lock');
reap;
UNLOCK TABLES;
SELECT GET_LOCK('mysqltest_lock', 100);
INSERT INTO t2 VALUES (GET_LOCK('mysqltest_lock', 100));;
LOCK TABLES v2 WRITE;;
SELECT RELEASE_LOCK('mysqltest_lock');
reap;
SELECT RELEASE_LOCK('mysqltest_lock');
reap;
UNLOCK TABLES;
DELETE FROM t1 LIMIT 1;
DELETE FROM t2 LIMIT 1;
BEGIN;
SELECT * FROM t1;
LOCK TABLES v1 WRITE;;
COMMIT;
reap;
UNLOCK TABLES;
BEGIN;
SELECT * FROM t2;
LOCK TABLES v2 WRITE;;
COMMIT;
reap;
UNLOCK TABLES;
BEGIN;
INSERT INTO t1 VALUES (1);
LOCK TABLES v1 WRITE;;
COMMIT;
reap;
UNLOCK TABLES;
BEGIN;
INSERT INTO t2 VALUES (1);
LOCK TABLES v2 WRITE;;
COMMIT;
reap;
UNLOCK TABLES;
DELETE FROM t1 LIMIT 1;
DELETE FROM t2 LIMIT 1;
LOCK TABLES v1 WRITE;
LOCK TABLES t1 WRITE;;
UNLOCK TABLES;
reap;
UNLOCK TABLES;
LOCK TABLES v2 WRITE;
LOCK TABLES t2 WRITE;;
UNLOCK TABLES;
reap;
UNLOCK TABLES;
LOCK TABLES t5 WRITE, t6 WRITE;
SELECT * FROM t1;
SELECT * FROM t2;
UNLOCK TABLES;
SELECT GET_LOCK('mysqltest_lock', 100);
SELECT GET_LOCK('mysqltest_lock', 100) FROM t1, t2;;
LOCK TABLES v3 WRITE, t6 WRITE;
UNLOCK TABLES;
SELECT RELEASE_LOCK('mysqltest_lock');
reap;
SELECT RELEASE_LOCK('mysqltest_lock');
LOCK TABLES t5 WRITE, t6 WRITE;
INSERT INTO t1 VALUES (1);
INSERT INTO t2 VALUES (1);
UNLOCK TABLES;
reap;
reap;
DELETE FROM t1 LIMIT 1;
DELETE FROM t2 LIMIT 1;
SELECT GET_LOCK('mysqltest_lock', 100);
INSERT INTO t1 VALUES (GET_LOCK('mysqltest_lock', 100));;
LOCK TABLES t5 WRITE;;
SELECT RELEASE_LOCK('mysqltest_lock');
reap;
SELECT RELEASE_LOCK('mysqltest_lock');
reap;
UNLOCK TABLES;
SELECT GET_LOCK('mysqltest_lock', 100);
INSERT INTO t2 VALUES (GET_LOCK('mysqltest_lock', 100));;
LOCK TABLES t6 WRITE;;
SELECT RELEASE_LOCK('mysqltest_lock');
reap;
SELECT RELEASE_LOCK('mysqltest_lock');
reap;
UNLOCK TABLES;
DELETE FROM t1 LIMIT 1;
DELETE FROM t2 LIMIT 1;
BEGIN;
SELECT * FROM t1;
LOCK TABLES t5 WRITE;
UNLOCK TABLES;
COMMIT;
BEGIN;
SELECT * FROM t2;
LOCK TABLES t6 WRITE;
UNLOCK TABLES;
COMMIT;
BEGIN;
INSERT INTO t1 VALUES (1);
LOCK TABLES t5 WRITE;;
COMMIT;
reap;
UNLOCK TABLES;
BEGIN;
INSERT INTO t2 VALUES (1);
LOCK TABLES t6 WRITE;;
COMMIT;
reap;
UNLOCK TABLES;
DELETE FROM t1 LIMIT 1;
DELETE FROM t2 LIMIT 1;
LOCK TABLES t1 READ, t2 READ;
LOCK TABLES t5 WRITE, t6 WRITE;
UNLOCK TABLES;
UNLOCK TABLES;
LOCK TABLES t5 WRITE;
LOCK TABLES t1 WRITE;;
UNLOCK TABLES;
reap;
UNLOCK TABLES;
LOCK TABLES t6 WRITE;
LOCK TABLES t2 WRITE;;
UNLOCK TABLES;
reap;
UNLOCK TABLES;
LOCK TABLES t1 WRITE;
LOCK TABLES t5 WRITE;;
UNLOCK TABLES;
reap;
UNLOCK TABLES;
LOCK TABLES t2 WRITE;
LOCK TABLES t6 WRITE;;
UNLOCK TABLES;
reap;
UNLOCK TABLES;
LOCK TABLE t7 WRITE;
SELECT * FROM t1;;
UNLOCK TABLES;
reap;
LOCK TABLE t8 WRITE;
SELECT * FROM t2;;
UNLOCK TABLES;
reap;
SELECT GET_LOCK('mysqltest_lock', 100);
SELECT GET_LOCK('mysqltest_lock', 100) FROM t1;;
LOCK TABLES t7 WRITE;;
UNLOCK TABLES;
SELECT RELEASE_LOCK('mysqltest_lock');
reap;
SELECT RELEASE_LOCK('mysqltest_lock');
reap;
UNLOCK TABLES;
SELECT GET_LOCK('mysqltest_lock', 100);
SELECT GET_LOCK('mysqltest_lock', 100) FROM t2;;
LOCK TABLES t8 WRITE;;
UNLOCK TABLES;
SELECT RELEASE_LOCK('mysqltest_lock');
reap;
SELECT RELEASE_LOCK('mysqltest_lock');
reap;
UNLOCK TABLES;
LOCK TABLE t7 WRITE, t8 WRITE;
INSERT INTO t1 VALUES (1);
INSERT INTO t2 VALUES (1);
UNLOCK TABLES;
reap;
reap;
DELETE FROM t1 LIMIT 1;
DELETE FROM t2 LIMIT 1;
SELECT GET_LOCK('mysqltest_lock', 100);
INSERT INTO t1 VALUES (GET_LOCK('mysqltest_lock', 100));;
LOCK TABLES t7 WRITE;;
SELECT RELEASE_LOCK('mysqltest_lock');
reap;
SELECT RELEASE_LOCK('mysqltest_lock');
reap;
UNLOCK TABLES;
SELECT GET_LOCK('mysqltest_lock', 100);
INSERT INTO t2 VALUES (GET_LOCK('mysqltest_lock', 100));;
LOCK TABLES t8 WRITE;;
SELECT RELEASE_LOCK('mysqltest_lock');
reap;
SELECT RELEASE_LOCK('mysqltest_lock');
reap;
UNLOCK TABLES;
DELETE FROM t1 LIMIT 1;
DELETE FROM t2 LIMIT 1;
BEGIN;
SELECT * FROM t1;
LOCK TABLES t7 WRITE;;
COMMIT;
reap;
UNLOCK TABLES;
BEGIN;
SELECT * FROM t2;
LOCK TABLES t8 WRITE;;
COMMIT;
reap;
UNLOCK TABLES;
BEGIN;
INSERT INTO t1 VALUES (1);
LOCK TABLES t7 WRITE;;
COMMIT;
reap;
UNLOCK TABLES;
BEGIN;
INSERT INTO t2 VALUES (1);
LOCK TABLES t8 WRITE;;
COMMIT;
reap;
UNLOCK TABLES;
DELETE FROM t1 LIMIT 1;
DELETE FROM t2 LIMIT 1;
LOCK TABLES t7 WRITE;
LOCK TABLES t1 WRITE;;
UNLOCK TABLES;
reap;
UNLOCK TABLES;
LOCK TABLES t8 WRITE;
LOCK TABLES t2 WRITE;;
UNLOCK TABLES;
reap;
UNLOCK TABLES;
DROP VIEW v1, v2, v3, v4;
DROP TABLES t1, t2, t3, t4, t5, t6, t7, t8;
SET @old_concurrent_insert= @@global.concurrent_insert;
SET @@global.concurrent_insert= 1;
CREATE TABLE t1 (i INT) ENGINE=MyISAM;
CREATE TABLE t2 (i INT) ENGINE=InnoDB;
CREATE VIEW v1 AS SELECT * FROM t1;
CREATE VIEW v2 AS (SELECT * FROM t1) UNION (SELECT * FROM t1);
CREATE VIEW v3 AS SELECT * FROM t2;
LOCK TABLE t1 READ LOCAL;
INSERT INTO t1 VALUES (1);
UPDATE t1 SET i= 2;
UNLOCK TABLES;
reap;
LOCK TABLE v1 READ LOCAL;
INSERT INTO v1 VALUES (1);
INSERT INTO t1 VALUES (3);
UPDATE t1 SET i= 2;
UNLOCK TABLES;
reap;
LOCK TABLE v2 READ LOCAL;
INSERT INTO t1 VALUES (1);
UNLOCK TABLES;
reap;
LOCK TABLE v2 READ LOCAL;
UPDATE t1 SET i= 2;;
UNLOCK TABLES;
reap;
LOCK TABLE t2 READ LOCAL;
INSERT INTO t2 VALUES (1);
UNLOCK TABLES;
reap;
LOCK TABLE t2 READ LOCAL;
UPDATE t2 SET i= 2;;
UNLOCK TABLES;
reap;
LOCK TABLE v3 READ LOCAL;
INSERT INTO t2 VALUES (1);
UNLOCK TABLES;
reap;
LOCK TABLE v3 READ LOCAL;
UPDATE t2 SET i= 2;;
UNLOCK TABLES;
reap;
DROP VIEW v1, v2, v3;
DROP TABLES t1, t2;
SET @@global.concurrent_insert= @old_concurrent_insert;
CREATE TABLE t1 (i INT) ENGINE=MyISAM;
CREATE VIEW v1 AS SELECT * FROM t1;
CREATE TABLE t2 (j INT);
CREATE TRIGGER t2_ai AFTER INSERT ON t2 FOR EACH ROW INSERT LOW_PRIORITY INTO t1 VALUES (2);
CREATE TABLE t3 (k INT);
CREATE TRIGGER t3_ai AFTER INSERT ON t3 FOR EACH ROW INSERT INTO t1 VALUES (2);
CREATE TABLE tm (i INT) ENGINE=MERGE UNION=(t1);
BEGIN;
INSERT INTO t1 VALUES (1);
LOCK TABLE t1 READ;;
INSERT HIGH_PRIORITY INTO t1 VALUES (1);
INSERT LOW_PRIORITY INTO t1 VALUES (1);;
REPLACE LOW_PRIORITY INTO t1 VALUES (1);;
UPDATE LOW_PRIORITY t1 SET i= 1;;
UPDATE LOW_PRIORITY t1 AS a, t1 AS b SET a.i= 1;;
DELETE LOW_PRIORITY FROM t1 LIMIT 1;;
DELETE LOW_PRIORITY FROM a USING t1 AS a, t1 AS b;;
LOAD DATA LOW_PRIORITY INFILE '../../std_data/rpl_loaddata.dat' INTO TABLE t1 (@dummy,i);;
DELETE LOW_PRIORITY FROM v1;;
INSERT INTO t2 VALUES (1);;
DELETE LOW_PRIORITY FROM tm LIMIT 1;;
COMMIT;
reap;
UNLOCK TABLES;
reap;
reap;
reap;
reap;
reap;
reap;
reap;
reap;
reap;
reap;
BEGIN;
INSERT INTO t1 VALUES (0);
LOCK TABLE t1 READ;;
SET @@session.low_priority_updates= 1;
INSERT HIGH_PRIORITY INTO t1 VALUES (1);
INSERT INTO t1 VALUES (1);;
SET @@session.low_priority_updates= 1;
REPLACE INTO t1 VALUES (1);;
SET @@session.low_priority_updates= 1;
UPDATE t1 SET i= 1;;
SET @@session.low_priority_updates= 1;
UPDATE t1 AS a, t1 AS b SET a.i= 1;;
SET @@session.low_priority_updates= 1;
DELETE FROM t1 LIMIT 1;;
SET @@session.low_priority_updates= 1;
DELETE FROM a USING t1 AS a, t1 AS b;;
SET @@session.low_priority_updates= 1;
LOAD DATA INFILE '../../std_data/rpl_loaddata.dat' INTO TABLE t1 (@dummy,i);;
SET @@session.low_priority_updates= 1;
DELETE FROM v1;;
SET @@session.low_priority_updates= 1;
INSERT INTO t3 VALUES (1);;
SET @@session.low_priority_updates= 1;
DELETE FROM tm LIMIT 1;;
COMMIT;
reap;
UNLOCK TABLES;
reap;
reap;
reap;
reap;
reap;
reap;
reap;
reap;
reap;
reap;
DROP VIEW v1;
DROP TABLES tm, t2, t3, t1;
create table t1(i int);
create table t2(i int);
create table t3(i int);
create table t4(i int);
lock tables t1 write, t3 read;
begin;
select count(*) from t4;
insert into t3 values (1);;
rename table t2 to t0, t4 to t2, t0 to t4;;
prepare stmt1 from 'select * from t1, t2';;
alter table t1 add column j int;
unlock tables;
reap;
commit;
reap;
reap;
drop tables t1, t2, t3, t4;
