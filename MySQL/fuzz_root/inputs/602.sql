SET NAMES binary;
set @orig_sql_mode_session= @@SESSION.sql_mode;
set @orig_sql_mode_global= @@GLOBAL.sql_mode;
set @orig_partial_revokes = @@global.partial_revokes;
SET GLOBAL partial_revokes= OFF;
drop database if exists mysqltest;
drop database if exists mysqltest_1;
flush privileges;
grant all privileges on `my\_1`.* to mysqltest_1@localhost with grant option;
grant select on `my\_1`.* to mysqltest_2@localhost;
grant update on mysql.* to mysqltest_1@localhost;
grant select on `my\_1`.* to mysqltest_2@localhost;
grant select on `my\_1`.* to mysqltest_3@localhost;
grant insert on mysql.* to mysqltest_1@localhost;
grant select on `my\_1`.* to mysqltest_3@localhost;
grant select on `my\_1`.* to mysqltest_4@localhost;
flush privileges;
grant all privileges on `my\_%`.* to mysqltest_1@localhost with grant option;
grant all privileges on `my\_1`.* to mysqltest_2@localhost with grant option;
grant all privileges on `my_%`.* to mysqltest_3@localhost with grant option;
grant select on `my\_1`.* to mysqltest_4@localhost with grant option;
show grants for mysqltest_1@localhost;
show grants for mysqltest_2@localhost;
flush privileges;
create database mysqltest_1;
grant all privileges on `mysqltest\_1`.* to mysqltest_1@localhost with grant option;
show databases;
grant all privileges on `mysqltest_1`.* to mysqltest_1@localhost with grant option;
show grants for mysqltest_1@localhost;
drop database mysqltest_1;
flush privileges;
create database mysqltest;
grant INSERT, SELECT on mysqltest.* to mysqltest_1@localhost;
flush privileges;
use mysqltest;
create table t1 (id int primary key, data varchar(255));
insert into t1 values (1, 'I can''t change it!');
update t1 set data='I can change it!' where id = 1;
insert into t1 values (1, 'XXX') on duplicate key update data= 'I can change it!';
select * from t1;
drop table t1;
flush privileges;
create table t1 (a int, b int);
grant select (a) on t1 to mysqltest_1@localhost with grant option;
grant select (a,b) on t1 to mysqltest_2@localhost;
grant select on t1 to mysqltest_3@localhost;
drop table t1;
flush privileges;
drop database mysqltest;
use test;
flush privileges;
create database mysqltest_1;
grant select, insert, update on `mysqltest\_1`.* to mysqltest_1@localhost;
set sql_log_off = 1;
set sql_log_bin = 0;
drop database mysqltest_1;
flush privileges;
set sql_mode='ANSI';
drop table if exists t1, t2;
create table t1(c1 int);
create table t2(c1 int, c2 int);
grant select on *.* to 'mysqltest_2';
grant insert on test.* to 'mysqltest_2';
grant update on test.t1 to 'mysqltest_2';
grant update (c2) on test.t2 to 'mysqltest_2';
show grants for 'mysqltest_1';
show grants for 'mysqltest_2';
show grants for 'mysqltest_1';
show grants for 'mysqltest_1';
drop table t1, t2;
flush privileges;
show grants for 'mysqltest_1';
revoke all privileges, grant option from 'mysqltest_1';
flush privileges;
show grants for 'mysqltest_1';
flush privileges;
show grants for 'mysqltest_1';
show grants for '%@b'@'b';
grant select on mysql.* to '%@b'@'b';
show grants for '%@b'@'b';
show grants for '%@b'@'b';
show grants for '%@a'@'a';
grant INSERT,DELETE,UPDATE on mysql.* to mysqltest_3@localhost;
show grants;
set @@sql_mode='';
create database mysqltest_1;
create table mysqltest_1.t1 (i int);
insert into mysqltest_1.t1 values (1),(2),(3);
GRANT ALL ON mysqltest_1.t1 TO mysqltest_1@'127.0.0.0/255.0.0.0';
select * from t1;
REVOKE ALL ON mysqltest_1.t1 FROM mysqltest_1@'127.0.0.0/255.0.0.0';
flush privileges;
drop table mysqltest_1.t1;
grant all on mysqltest_1.* to mysqltest_1@'127.0.0.1';
set password = 'changed';
revoke all on mysqltest_1.* from mysqltest_1@'127.0.0.1';
flush privileges;
grant all on mysqltest_1.* to mysqltest_1@'127.0.0.0/255.0.0.0';
set password = 'changed';
revoke all on mysqltest_1.* from mysqltest_1@'127.0.0.0/255.0.0.0';
flush privileges;
drop database mysqltest_1;
FLUSH PRIVILEGES;
set password = "changed";
FLUSH PRIVILEGES;
flush privileges;
grant all on *.* to 'mysqltest_1'@'localhost';
unlock tables;
reap;
reap;
set password for 'mysqltest_1'@'localhost' = '';
revoke all on *.* from 'mysqltest_1'@'localhost';
unlock tables;
reap;
reap;
create database TESTDB;
create table t2(a int);
FLUSH PRIVILEGES;
create database TEStdb;
drop table t1, t2;
drop database TESTDB;
flush privileges;
SET @old_log_bin_trust_function_creators= @@global.log_bin_trust_function_creators;
SET GLOBAL log_bin_trust_function_creators = 1;
CREATE USER `a@`@localhost;
GRANT ALL PRIVILEGES ON test.* TO `a@`@localhost;
GRANT EXECUTE ON * TO `a@`@localhost;
CREATE TABLE t2 (s1 INT);
INSERT INTO t2 VALUES (1);
DROP FUNCTION IF EXISTS f2;
CREATE FUNCTION f2 () RETURNS INT BEGIN DECLARE v INT; SELECT s1 FROM t2 INTO v; RETURN v; END;
SELECT f2();
DROP FUNCTION f2;
DROP TABLE t2;
REVOKE ALL PRIVILEGES, GRANT OPTION FROM `a@`@localhost;
DROP USER `a@`@localhost;
SET @@global.log_bin_trust_function_creators= @old_log_bin_trust_function_creators;
drop database if exists mysqltest_1;
drop database if exists mysqltest_2;
create database mysqltest_1;
create database mysqltest_2;
grant all on mysqltest_1.* to mysqltest_u1@localhost;
use mysqltest_2;
create table t1 (i int);
show create table mysqltest_2.t1;
create table t1 like mysqltest_2.t1;
grant select on mysqltest_2.t1 to mysqltest_u1@localhost;
show create table mysqltest_2.t1;
create table t1 like mysqltest_2.t1;
use test;
drop database mysqltest_1;
drop database mysqltest_2;
grant all on `mysqltest\_%`.* to mysqltest_1@localhost with grant option;
grant usage on *.* to mysqltest_2@localhost;
create database mysqltest_1;
use mysqltest_1;
create table t1 (f1 int);
grant create on `mysqltest\_1`.* to mysqltest_2@localhost;
grant select on mysqltest_1.t1 to mysqltest_2@localhost;
create database mysqltest_3;
use mysqltest_1;
create table t2(f1 int);
select * from t1;
drop database mysqltest_1;
revoke all privileges, grant option from mysqltest_1@localhost;
revoke all privileges, grant option from mysqltest_2@localhost;
CREATE DATABASE db1;
USE db1;
CREATE TABLE t1 (a INT, b INT);
INSERT INTO t1 VALUES (1,1),(2,2);
CREATE TABLE t2 (b INT, c INT);
INSERT INTO t2 VALUES (1,100),(2,200);
CREATE USER mysqltest1@localhost;
GRANT SELECT ON t1 TO mysqltest1@localhost;
GRANT SELECT (b) ON t2 TO mysqltest1@localhost;
USE db1;
SELECT c FROM t2;
SELECT * FROM t2;
SELECT * FROM t1 JOIN t2 USING (b);
USE test;
DROP TABLE db1.t1, db1.t2;
DROP USER mysqltest1@localhost;
DROP DATABASE db1;
USE mysql;
SELECT LEFT(CURRENT_USER(),INSTR(CURRENT_USER(),'@')-1) INTO @u;
SELECT MID(CURRENT_USER(),INSTR(CURRENT_USER(),'@')+1)  INTO @h;
GRANT INSERT ON *.* TO CURRENT_USER();
FLUSH PRIVILEGES;
USE test;
DROP DATABASE IF EXISTS mysqltest_db1;
DROP DATABASE IF EXISTS mysqltest_db2;
CREATE DATABASE mysqltest_db1;
CREATE DATABASE mysqltest_db2;
CREATE USER mysqltest_u1@localhost, mysqltest_u2@localhost, mysqltest_u3@localhost, mysqltest_u4@localhost, mysqltest_u5@localhost;
GRANT FILE ON *.* TO mysqltest_u1@localhost;
GRANT CREATE TEMPORARY TABLES, EXECUTE ON mysqltest_db1.* TO mysqltest_u1@localhost;
GRANT ALL PRIVILEGES ON mysqltest_db1.* TO mysqltest_u2@localhost;
REVOKE CREATE TEMPORARY TABLES ON mysqltest_db1.* FROM mysqltest_u2@localhost;
GRANT CREATE TEMPORARY TABLES ON mysqltest_db1.* TO mysqltest_u3@localhost;
GRANT EXECUTE ON mysqltest_db1.* TO mysqltest_u3@localhost;
GRANT EXECUTE ON mysqltest_db1.* TO mysqltest_u4@localhost;
GRANT CREATE TEMPORARY TABLES ON mysqltest_db1.* TO mysqltest_u5@localhost;
GRANT CREATE TEMPORARY TABLES ON mysqltest_db2.* TO mysqltest_u5@localhost;
GRANT SELECT, UPDATE, DELETE ON mysqltest_db1.* TO mysqltest_u5@localhost;
CREATE PROCEDURE mysqltest_db1.p0(i INT) SELECT i;
CREATE DEFINER = mysqltest_u3@localhost PROCEDURE mysqltest_db1.p1() CREATE TEMPORARY TABLE t4(x INT);
CREATE DEFINER = mysqltest_u3@localhost PROCEDURE mysqltest_db1.p2() INSERT INTO t4 VALUES (1), (2), (3);
CREATE DEFINER = mysqltest_u3@localhost PROCEDURE mysqltest_db1.p3() SELECT * FROM t4 ORDER BY x;
SET GLOBAL keycache1.key_buffer_size = 128 * 1024;
CREATE TABLE mysqltest_db2.t2_1(a INT);
CREATE TEMPORARY TABLE t1(a INT) engine=myisam;
CREATE TEMPORARY TABLE t2 LIKE t1;
CREATE TEMPORARY TABLE t3(a INT, b INT, PRIMARY KEY (a)) engine=myisam;
CREATE TEMPORARY TABLE t4 SELECT * FROM t1;
CREATE TEMPORARY TABLE t5(a INT) ENGINE = MyISAM;
CREATE TEMPORARY TABLE t6(a INT) ENGINE = MERGE UNION = (t5);
CREATE TEMPORARY TABLE t6(a INT) ENGINE = MERGE UNION = ();
INSERT INTO t1 VALUES (1), (2), (3);
SELECT * FROM t1 ORDER BY a;
CREATE INDEX idx1 ON t3(b);
DROP INDEX idx1 ON t3;
ALTER TABLE t4 ADD COLUMN b INT;
ALTER TABLE t6 UNION = ();
ALTER TABLE t6 UNION = (t5);
INSERT INTO t1 VALUES (4);
INSERT INTO t2 SELECT a FROM t1;
SELECT * FROM t1 ORDER BY a;
SELECT * FROM t2 ORDER BY a;
UPDATE t1 SET a = a * 10;
UPDATE t1 SET a = 100 WHERE a = 10;
UPDATE t1, t2 SET t1.a = 200 WHERE t1.a = t2.a * 10 AND t1.a = 20;
SELECT * FROM t1 ORDER BY a;
DELETE FROM t1 WHERE a = 100;
DELETE t1 FROM t1, t2 WHERE t1.a = t2.a * 100 AND t1.a = 200;
SELECT * FROM t1 ORDER BY a;
TRUNCATE TABLE t1;
SELECT * FROM t1 ORDER BY a;
SHOW COLUMNS FROM t1;
SHOW KEYS FROM t3;
SHOW CREATE TABLE t1;
INSERT INTO t1 VALUES (1), (2), (3);
SELECT a INTO OUTFILE '/data/yu/Squirrel_DBMS_Fuzzing/MySQL_source/mysql-server-inst/bld/mysql-test/var/tmp/bug27480.txt' FROM t1 ;
LOAD DATA INFILE '/data/yu/Squirrel_DBMS_Fuzzing/MySQL_source/mysql-server-inst/bld/mysql-test/var/tmp/bug27480.txt' INTO TABLE t1;
SELECT * FROM t1 ORDER BY a;
SET @a := (SELECT COUNT(*) FROM t1);
SELECT @a;
LOCK TABLES t1 READ;
UNLOCK TABLES;
ANALYZE TABLE t1;
CHECK TABLE t1;
OPTIMIZE TABLE t1;
REPAIR TABLE t1;
INSERT INTO t3 VALUES (1, 111), (2, 222), (3, 333);
REPLACE INTO t3 VALUES (1, 1111), (4, 444), (0, 001);
REPLACE INTO t2 SELECT b FROM t3;
SELECT * FROM t2 ORDER BY a;
SELECT * FROM t3 ORDER BY a;
CACHE INDEX t3 IN keycache1;
LOAD INDEX INTO CACHE t3;
RENAME TABLE t3 TO t3_1;
HANDLER t1 OPEN;
HANDLER t1 READ NEXT;
HANDLER t1 CLOSE;
DO (SELECT COUNT(*) FROM t1);
DELETE FROM t1;
CHECKSUM TABLE t1;
CALL p0((SELECT COUNT(*) FROM t1));
PREPARE stmt1 FROM 'SELECT * FROM t1 ORDER BY a';
PREPARE stmt2 FROM 'SELECT * FROM t2 ORDER BY a';
EXECUTE stmt1;
EXECUTE stmt2;
DEALLOCATE PREPARE stmt1;
DEALLOCATE PREPARE stmt2;
DROP TABLE t1;
CREATE TEMPORARY TABLE t1(a INT);
DROP TEMPORARY TABLE t1;
CREATE TEMPORARY TABLE t2(a INT);
CALL p1();
CALL p2();
CALL p3();
INSERT INTO t4 VALUES (4);
UPDATE t4 SET x = 10 WHERE x = 1;
DELETE FROM t4 WHERE x < 3;
SELECT * FROM t4 ORDER BY x;
DROP TEMPORARY TABLE t4;
CALL p1();
INSERT INTO t4 VALUES (4);
UPDATE t4 SET x = 10 WHERE x = 1;
DELETE FROM t4 WHERE x < 3;
SELECT * FROM t4 ORDER BY x;
DROP TEMPORARY TABLE t4;
CREATE TEMPORARY TABLE t7(a INT) engine=myisam;
CREATE TEMPORARY TABLE t8(a INT) engine=myisam;
CREATE TEMPORARY TABLE t9(a INT) engine=myisam;
CREATE TEMPORARY TABLE t10(a INT) ENGINE = MERGE UNION = (t7, t8);
ALTER TABLE t10 UNION = (t9);
ALTER TABLE t10 UNION = (mysqltest_db2.t2_1);
CREATE TEMPORARY TABLE mysqltest_db2.t2_2(a INT) ENGINE = MERGE UNION = (t7, t8);
ALTER TABLE mysqltest_db2.t2_2 UNION = (t9);
ALTER TABLE mysqltest_db2.t2_2 UNION = ();
DROP TEMPORARY TABLE mysqltest_db2.t2_2;
DROP TEMPORARY TABLE t10;
DROP TEMPORARY TABLE t7;
DROP TEMPORARY TABLE t8;
DROP TEMPORARY TABLE t9;
SET GLOBAL keycache1.key_buffer_size = 0;
DROP DATABASE mysqltest_db1;
DROP DATABASE mysqltest_db2;
DROP USER mysqltest_u1@localhost;
DROP USER mysqltest_u2@localhost;
DROP USER mysqltest_u3@localhost;
DROP USER mysqltest_u4@localhost;
DROP USER mysqltest_u5@localhost;
set GLOBAL sql_mode= @orig_sql_mode_global;
set SESSION sql_mode= @orig_sql_mode_session;
FLUSH PRIVILEGES;
SET GLOBAL partial_revokes = @orig_partial_revokes;
