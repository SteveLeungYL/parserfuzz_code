drop table if exists t1,t2,t3,t4,t5,t6;
drop database if exists mysqltest;
create table t1 (a int not null primary key auto_increment, message char(20));
create table t2 (a int not null primary key auto_increment, message char(20));
INSERT INTO t1 (message) VALUES ("Testing"),("table"),("t1");
INSERT INTO t2 (message) VALUES ("Testing"),("table"),("t2");
create table t3 (a int not null, b char(20), key(a)) engine=MERGE UNION=(t1,t2);
select * from t3;
select * from t3 order by a desc;
drop table t3;
insert into t1 select NULL,message from t2;
insert into t2 select NULL,message from t1;
insert into t1 select NULL,message from t2;
insert into t2 select NULL,message from t1;
insert into t1 select NULL,message from t2;
insert into t2 select NULL,message from t1;
insert into t1 select NULL,message from t2;
insert into t2 select NULL,message from t1;
insert into t1 select NULL,message from t2;
insert into t2 select NULL,message from t1;
insert into t1 select NULL,message from t2;
create table t3 (a int not null, b char(20), key(a)) engine=MERGE UNION=(test.t1,test.t2);
explain select * from t3 where a < 10;
explain select * from t3 where a > 10 and a < 20;
select * from t3 where a = 10;
select * from t3 where a < 10;
select * from t3 where a > 10 and a < 20;
explain select a from t3 order by a desc limit 10;
select a from t3 order by a desc limit 10;
select a from t3 order by a desc limit 300,10;
delete from t3 where a=3;
select * from t3 where a < 10;
delete from t3 where a >= 6 and a <= 8;
select * from t3 where a < 10;
update t3 set a=3 where a=9;
select * from t3 where a < 10;
update t3 set a=6 where a=7;
select * from t3 where a < 10;
show create table t3;
create table t4 (a int not null, b char(10), key(a)) engine=MERGE UNION=(t1,t2);
select * from t4;
alter table t4 add column c int;
flush tables;
select * from t4;
create database mysqltest;
create table mysqltest.t6 (a int not null primary key auto_increment, message char(20));
create table t5 (a int not null, b char(20), key(a)) engine=MERGE UNION=(test.t1,mysqltest.t6);
show create table t5;
alter table t5 engine=myisam;
drop table t5, mysqltest.t6;
drop database mysqltest;
drop table t4,t3,t1,t2;
create table t1 (c char(10)) engine=myisam;
create table t2 (c char(10)) engine=myisam;
create table t3 (c char(10)) union=(t1,t2) engine=merge;
insert into t1 (c) values ('test1');
insert into t1 (c) values ('test1');
insert into t1 (c) values ('test1');
insert into t2 (c) values ('test2');
insert into t2 (c) values ('test2');
insert into t2 (c) values ('test2');
select * from t3;
select * from t3;
delete from t3 where 1=1;
select * from t3;
select * from t1;
drop table t3,t2,t1;
CREATE TABLE t1 (incr int not null, othr int not null, primary key(incr));
CREATE TABLE t2 (incr int not null, othr int not null, primary key(incr));
CREATE TABLE t3 (incr int not null, othr int not null, primary key(incr)) ENGINE=MERGE UNION=(t1,t2);
SELECT * from t3;
INSERT INTO t1 VALUES ( 1,10),( 3,53),( 5,21),( 7,12),( 9,17);
INSERT INTO t2 VALUES ( 2,24),( 4,33),( 6,41),( 8,26),( 0,32);
INSERT INTO t1 VALUES (11,20),(13,43),(15,11),(17,22),(19,37);
INSERT INTO t2 VALUES (12,25),(14,31),(16,42),(18,27),(10,30);
SELECT * from t3 where incr in (1,2,3,4) order by othr;
alter table t3 UNION=(t1);
select count(*) from t3;
alter table t3 UNION=(t1,t2);
select count(*) from t3;
alter table t3 ENGINE=MYISAM;
select count(*) from t3;
drop table t3;
CREATE TABLE t3 (incr int not null, othr int not null, primary key(incr)) ENGINE=MERGE UNION=(t1,t2);
show create table t3;
alter table t3 drop primary key;
show create table t3;
drop table t3,t2,t1;
create table t1 (a int not null, key(a)) engine=merge;
select * from t1;
drop table t1;
create table t1 (a int not null, b int not null, key(a,b));
create table t2 (a int not null, b int not null, key(a,b));
create table t3 (a int not null, b int not null, key(a,b)) ENGINE=MERGE UNION=(t1,t2);
insert into t1 values (1,2),(2,1),(0,0),(4,4),(5,5),(6,6);
insert into t2 values (1,1),(2,2),(0,0),(4,4),(5,5),(6,6);
flush tables;
select * from t3 where a=1 order by b limit 2;
drop table t3,t1,t2;
create table t1 (a int not null, b int not null auto_increment, primary key(a,b));
create table t2 (a int not null, b int not null auto_increment, primary key(a,b));
create table t3 (a int not null, b int not null, key(a,b)) UNION=(t1,t2) INSERT_METHOD=NO;
create table t4 (a int not null, b int not null, key(a,b)) ENGINE=MERGE UNION=(t1,t2) INSERT_METHOD=NO;
create table t5 (a int not null, b int not null auto_increment, primary key(a,b)) ENGINE=MERGE UNION=(t1,t2) INSERT_METHOD=FIRST;
create table t6 (a int not null, b int not null auto_increment, primary key(a,b)) ENGINE=MERGE UNION=(t1,t2) INSERT_METHOD=LAST;
show create table t3;
show create table t4;
show create table t5;
show create table t6;
insert into t1 values (1,NULL),(1,NULL),(1,NULL),(1,NULL);
insert into t2 values (2,NULL),(2,NULL),(2,NULL),(2,NULL);
select * from t3 order by b,a limit 3;
select * from t4 order by b,a limit 3;
select * from t5 order by b,a limit 3,3;
select * from t6 order by b,a limit 6,3;
insert into t5 values (5,1),(5,2);
insert into t6 values (6,1),(6,2);
select * from t1 order by a,b;
select * from t2 order by a,b;
select * from t4 order by a,b;
insert into t3 values (3,1),(3,2),(3,3),(3,4);
select * from t3 order by a,b;
alter table t4 UNION=(t1,t2,t3);
show create table t4;
select * from t4 order by a,b;
alter table t4 INSERT_METHOD=FIRST;
show create table t4;
insert into t4 values (4,1),(4,2);
select * from t1 order by a,b;
select * from t2 order by a,b;
select * from t3 order by a,b;
select * from t4 order by a,b;
select * from t5 order by a,b;
select 1;
insert into t5 values (1,NULL),(5,NULL);
insert into t6 values (2,NULL),(6,NULL);
select * from t1 order by a,b;
select * from t2 order by a,b;
select * from t5 order by a,b;
select * from t6 order by a,b;
insert into t1 values (99,NULL);
select * from t4 where a+0 > 90;
insert t5 values (1,1);
insert t6 values (2,1);
insert t5 values (1,1) on duplicate key update b=b+10;
insert t6 values (2,1) on duplicate key update b=b+20;
select * from t5 where a < 3;
drop table t6, t5, t4, t3, t2, t1;
CREATE TABLE t1 (  a int(11) NOT NULL default '0',  b int(11) NOT NULL default '0',  PRIMARY KEY  (a,b)) ENGINE=MyISAM;
INSERT INTO t1 VALUES (1,1), (2,1);
CREATE TABLE t2 (  a int(11) NOT NULL default '0',  b int(11) NOT NULL default '0',  PRIMARY KEY  (a,b)) ENGINE=MyISAM;
INSERT INTO t2 VALUES (1,2), (2,2);
CREATE TABLE t3 (  a int(11) NOT NULL default '0',  b int(11) NOT NULL default '0',  KEY a (a,b)) ENGINE=MRG_MyISAM UNION=(t1,t2);
select max(b) from t3 where a = 2;
select max(b) from t1 where a = 2;
drop table t3,t1,t2;
CREATE TABLE t1 (c1 INT NOT NULL);
CREATE TABLE t2 (c1 INT NOT NULL);
INSERT INTO t1 VALUES (1);
INSERT INTO t2 VALUES (2);
CREATE TEMPORARY TABLE t3 (c1 INT NOT NULL) ENGINE=MRG_MYISAM UNION=(t1,t2);
SELECT * FROM t3;
CREATE TEMPORARY TABLE t4 (c1 INT NOT NULL) ENGINE=MyISAM;
CREATE TEMPORARY TABLE t5 (c1 INT NOT NULL) ENGINE=MyISAM;
INSERT INTO t4 VALUES (4);
INSERT INTO t5 VALUES (5);
CREATE TEMPORARY TABLE t6 (c1 INT NOT NULL) ENGINE=MRG_MYISAM UNION=(t4,t5);
SELECT * FROM t6;
DROP TABLE t6, t3, t1, t2, t4, t5;
create temporary table t1 (a int not null);
create temporary table t2 (a int not null);
insert into t1 values (1);
insert into t2 values (2);
create table t3 (a int not null) ENGINE=MERGE UNION=(t1,t2);
select * from t3;
drop table t3, t2, t1;
create table t1 (a int not null);
create temporary table t2 (a int not null) engine=myisam;
insert into t1 values (1);
insert into t2 values (2);
create table t3 (a int not null) ENGINE=MERGE UNION=(t1,t2);
select * from t3;
drop table t3;
create temporary table t3 (a int not null) ENGINE=MERGE UNION=(t1,t2);
select * from t3;
drop table t3, t2, t1;
CREATE TEMPORARY TABLE t1 (c1 INT NOT NULL) ENGINE=MyISAM;
CREATE TEMPORARY TABLE t2 (c1 INT NOT NULL) ENGINE=MyISAM;
CREATE TABLE t3 (c1 INT NOT NULL);
INSERT INTO t3 VALUES (3), (33);
LOCK TABLES t3 READ;
CREATE TEMPORARY TABLE t4 (c1 INT NOT NULL) ENGINE=MERGE UNION=(t1,t2) INSERT_METHOD=LAST SELECT * FROM t3;
SELECT * FROM t4;
UNLOCK TABLES;
CREATE TEMPORARY TABLE t4 (c1 INT NOT NULL) ENGINE=MERGE UNION=(t1,t2) INSERT_METHOD=LAST;
INSERT INTO t4 SELECT * FROM t3;
ALTER TABLE t4 UNION=(t1);
LOCK TABLES t4 WRITE;
ALTER TABLE t4 UNION=(t1,t2);
UNLOCK TABLES;
CREATE FUNCTION f1 () RETURNS INT RETURN (SELECT max(c1) FROM t3);
SELECT * FROM t4 WHERE c1 < f1();
DROP FUNCTION f1;
DROP TABLE t4, t3, t2, t1;
CREATE TABLE t1 ( fileset_id tinyint(3) unsigned NOT NULL default '0', file_code varchar(32) NOT NULL default '', fileset_root_id tinyint(3) unsigned NOT NULL default '0', PRIMARY KEY  (fileset_id,file_code), KEY files (fileset_id,fileset_root_id) ) ENGINE=MyISAM;
INSERT INTO t1 VALUES (2, '0000000111', 1), (2, '0000000112', 1), (2, '0000000113', 1), (2, '0000000114', 1), (2, '0000000115', 1), (2, '0000000116', 1), (2, '0000000117', 1), (2, '0000000118', 1), (2, '0000000119', 1), (2, '0000000120', 1);
CREATE TABLE t2 ( fileset_id tinyint(3) unsigned NOT NULL default '0', file_code varchar(32) NOT NULL default '', fileset_root_id tinyint(3) unsigned NOT NULL default '0', PRIMARY KEY  (fileset_id,file_code), KEY files (fileset_id,fileset_root_id) ) ENGINE=MRG_MyISAM UNION=(t1);
EXPLAIN SELECT * FROM t2 IGNORE INDEX (files) WHERE fileset_id = 2 AND file_code BETWEEN '0000000115' AND '0000000120' LIMIT 1;
EXPLAIN SELECT * FROM t2 WHERE fileset_id = 2 AND file_code BETWEEN '0000000115' AND '0000000120' LIMIT 1;
EXPLAIN SELECT * FROM t1 WHERE fileset_id = 2 AND file_code BETWEEN '0000000115' AND '0000000120' LIMIT 1;
EXPLAIN SELECT * FROM t2 WHERE fileset_id = 2 AND file_code = '0000000115' LIMIT 1;
DROP TABLE t2, t1;
create table t1 (x int, y int, index xy(x, y));
create table t2 (x int, y int, index xy(x, y));
create table t3 (x int, y int, index xy(x, y)) engine=merge union=(t1,t2);
insert into t1 values(1, 2);
insert into t2 values(1, 3);
select * from t3 where x = 1 and y < 5 order by y;
select * from t3 where x = 1 and y < 5 order by y desc;
drop table t1,t2,t3;
create table t1 (a int);
create table t2 (a int);
insert into t1 values (0);
insert into t2 values (1);
create table t3 engine=merge union=(t1, t2) select * from t1;
create table t3 engine=merge union=(t1, t2) select * from t2;
create table t3 engine=merge union=(t1, t2) select (select max(a) from t2);
drop table t1, t2;
create table t1 ( a double(14,4), b varchar(10), index (a,b) ) engine=merge union=(t2,t3);
create table t2 ( a double(14,4), b varchar(10), index (a,b) ) engine=myisam;
create table t3 ( a double(14,4), b varchar(10), index (a,b) ) engine=myisam;
insert into t2 values ( null, '');
insert into t2 values ( 9999999999.999, '');
insert into t3 select * from t2;
select min(a), max(a) from t1;
flush tables;
select min(a), max(a) from t1;
drop table t1, t2, t3;
create table t1 (a int,b int,c int, index (a,b,c));
create table t2 (a int,b int,c int, index (a,b,c));
create table t3 (a int,b int,c int, index (a,b,c)) engine=merge union=(t1 ,t2);
insert into t1 (a,b,c) values (1,1,0),(1,2,0);
insert into t2 (a,b,c) values (1,1,1),(1,2,1);
explain select a,b,c from t3 force index (a) where a=1 order by a,b,c;
select a,b,c from t3 force index (a) where a=1 order by a,b,c;
explain select a,b,c from t3 force index (a) where a=1 order by a desc, b desc, c desc;
select a,b,c from t3 force index (a) where a=1 order by a desc, b desc, c desc;
show index from t3;
drop table t1, t2, t3;
CREATE TABLE t1 ( a INT AUTO_INCREMENT PRIMARY KEY, b VARCHAR(10), UNIQUE (b) ) ENGINE=MyISAM;
CREATE TABLE t2 ( a INT AUTO_INCREMENT, b VARCHAR(10), INDEX (a), INDEX (b) ) ENGINE=MERGE UNION (t1) INSERT_METHOD=FIRST;
INSERT INTO t2 (b) VALUES (1) ON DUPLICATE KEY UPDATE b=2;
INSERT INTO t2 (b) VALUES (1) ON DUPLICATE KEY UPDATE b=3;
SELECT b FROM t2;
DROP TABLE t1, t2;
create table t1(a int);
create table t2(a int);
insert into t1 values (1);
insert into t2 values (2);
create table t3 (a int) engine=merge union=(t1, t2) insert_method=first;
select * from t3;
insert t2 select * from t2;
select * from t2;
insert t3 select * from t1;
select * from t3;
insert t1 select * from t3;
select * from t1;
select * from t2;
select * from t3;
check table t1, t2;
drop table t1, t2, t3;
CREATE TABLE t1(a INT);
INSERT INTO t1 VALUES(2),(1);
CREATE TABLE t2(a INT, KEY(a)) ENGINE=MERGE UNION=(t1);
SELECT * FROM t2 WHERE a=2;
DROP TABLE t1, t2;
CREATE TABLE t1(a INT) ENGINE=MEMORY;
CREATE TABLE t2(a INT) ENGINE=MERGE UNION=(t1);
SELECT * FROM t2;
DROP TABLE t1, t2;
CREATE TABLE t2(a INT) ENGINE=MERGE UNION=(t3);
SELECT * FROM t2;
DROP TABLE t2;
CREATE TABLE t1(a INT, b TEXT);
CREATE TABLE tm1(a TEXT, b INT) ENGINE=MERGE UNION=(t1);
SELECT * FROM tm1;
DROP TABLE t1, tm1;
CREATE TABLE t1(a SMALLINT, b SMALLINT);
CREATE TABLE tm1(a INT) ENGINE=MERGE UNION=(t1);
SELECT * FROM tm1;
DROP TABLE t1, tm1;
CREATE TABLE t1(a SMALLINT, b SMALLINT, KEY(a, b));
CREATE TABLE tm1(a SMALLINT, b SMALLINT, KEY(a)) ENGINE=MERGE UNION=(t1);
SELECT * FROM tm1;
DROP TABLE t1, tm1;
CREATE TABLE t1(a SMALLINT, b SMALLINT, KEY(b));
CREATE TABLE tm1(a SMALLINT, b SMALLINT, KEY(a)) ENGINE=MERGE UNION=(t1);
SELECT * FROM tm1;
DROP TABLE t1, tm1;
CREATE TABLE t1(c1 VARCHAR(1));
CREATE TABLE m1 LIKE t1;
ALTER TABLE m1 ENGINE=MERGE UNION=(t1);
SELECT * FROM m1;
DROP TABLE t1, m1;
CREATE TABLE t1(c1 VARCHAR(4), c2 TINYINT, c3 TINYINT, c4 TINYINT, c5 TINYINT, c6 TINYINT, c7 TINYINT, c8 TINYINT, c9 TINYINT);
CREATE TABLE m1 LIKE t1;
ALTER TABLE m1 ENGINE=MERGE UNION=(t1);
SELECT * FROM m1;
DROP TABLE t1, m1;
CREATE TABLE t1 (a VARCHAR(255) CHARACTER SET latin1 COLLATE latin1_german2_ci, b INT, INDEX(a,b));
CREATE TABLE t2 LIKE t1;
CREATE TABLE t3 LIKE t1;
ALTER TABLE t3 ENGINE=MERGE UNION=(t1,t2);
INSERT INTO t1 VALUES ('ss',1);
INSERT INTO t2 VALUES ('ss',2),(0xDF,2);
SELECT COUNT(*) FROM t3 WHERE a=0xDF AND b=2;
DROP TABLE t1,t2,t3;
create table t1 (b bit(1));
create table t2 (b bit(1));
create table tm (b bit(1)) engine = merge union = (t1,t2);
select * from tm;
drop table tm, t1, t2;
create table t1 (a int) insert_method = last engine = merge;
insert into t1 values (1);
create table t2 (a int) engine = myisam;
alter table t1 union (t2);
insert into t1 values (1);
alter table t1 insert_method = no;
insert into t1 values (1);
drop table t2;
drop table t1;
CREATE TABLE tm1(a INT) ENGINE=MERGE UNION=(t1, t2);
SELECT * FROM tm1;
CHECK TABLE tm1;
CREATE TABLE t1(a INT);
SELECT * FROM tm1;
CHECK TABLE tm1;
CREATE TABLE t2(a BLOB);
SELECT * FROM tm1;
CHECK TABLE tm1;
ALTER TABLE t2 MODIFY a INT;
SELECT * FROM tm1;
CHECK TABLE tm1;
DROP TABLE tm1, t1, t2;
CREATE TABLE t1(c1 INT);
CREATE TABLE t2 (c1 INT) ENGINE=MERGE UNION=(t1) INSERT_METHOD=FIRST;
CREATE TABLE IF NOT EXISTS t1 SELECT * FROM t2;
DROP TABLE t1, t2;
CREATE TABLE t1 (id INT NOT NULL, ref INT NOT NULL, INDEX (id)) ENGINE=MyISAM;
CREATE TABLE t2 LIKE t1;
INSERT INTO t2 (id, ref) VALUES (1,3), (2,1), (3,2), (4,5), (4,4);
INSERT INTO t1 SELECT * FROM t2;
INSERT INTO t1 SELECT * FROM t2;
CREATE TABLE t3 (id INT NOT NULL, ref INT NOT NULL, INDEX (id)) ENGINE=MERGE UNION(t1);
SELECT * FROM t3 AS a INNER JOIN t3 AS b USING (id) WHERE a.ref < b.ref;
SELECT * FROM t3;
DELETE FROM a USING t3 AS a INNER JOIN t3 AS b USING (id) WHERE a.ref < b.ref;
SELECT * FROM t3;
DROP TABLE t1, t2, t3;
CREATE TABLE t1(a INT);
CREATE TABLE m1(a INT) ENGINE=MERGE;
SHOW CREATE TABLE m1;
DROP TABLE m1;
CREATE TABLE m1(a INT) ENGINE=MERGE UNION=();
SHOW CREATE TABLE m1;
ALTER TABLE m1 UNION=(t1);
ALTER TABLE m1 UNION=();
SHOW CREATE TABLE m1;
DROP TABLE t1, m1;
CREATE TABLE t1(a INT, KEY(a)) ENGINE=merge;
SELECT MAX(a) FROM t1;
DROP TABLE t1;
CREATE TABLE t1(a INT);
CREATE TABLE t2(a VARCHAR(10));
CREATE TABLE m1(a INT) ENGINE=MERGE UNION=(t1, t2);
CREATE TABLE m2(a INT) ENGINE=MERGE UNION=(t1);
SELECT * FROM t1;
SELECT * FROM m1;
SELECT * FROM m2;
DROP TABLE t1, t2, m1, m2;
create table t1 (c1 int, index(c1));
create table t2 (c1 int, index(c1)) engine=merge union=(t1);
insert into t1 values (1);
flush tables;
select * from t2;
flush tables;
truncate table t1;
insert into t1 values (1);
flush tables;
select * from t2;
truncate table t1;
insert into t1 values (1);
drop table t1,t2;
CREATE TABLE t1 (c1 INT, INDEX(c1));
CREATE TABLE t2 (c1 INT, INDEX(c1));
CREATE TABLE t3 (c1 INT, INDEX(c1)) ENGINE=MRG_MYISAM UNION=(t1,t2);
INSERT INTO t1 VALUES (1);
INSERT INTO t2 VALUES (2);
SELECT * FROM t3;
TRUNCATE TABLE t3;
SELECT * FROM t3;
INSERT INTO t1 VALUES (1);
INSERT INTO t2 VALUES (2);
TRUNCATE TABLE t1;
SELECT * FROM t3;
LOCK TABLE t1 WRITE, t2 WRITE, t3 WRITE;
INSERT INTO t1 VALUES (1);
TRUNCATE TABLE t3;
SELECT * FROM t3;
UNLOCK TABLES;
SELECT * FROM t1;
SELECT * FROM t2;
LOCK TABLE t1 WRITE, t2 WRITE, t3 WRITE;
INSERT INTO t1 VALUES (1);
INSERT INTO t2 VALUES (2);
TRUNCATE TABLE t1;
SELECT * FROM t3;
UNLOCK TABLES;
DROP TABLE t1, t2, t3;
CREATE TEMPORARY TABLE t1 (c1 INT, INDEX(c1)) ENGINE=MyISAM;
CREATE TEMPORARY TABLE t2 (c1 INT, INDEX(c1)) ENGINE=MyISAM;
CREATE TEMPORARY TABLE t3 (c1 INT, INDEX(c1)) ENGINE=MRG_MYISAM UNION=(t1,t2);
INSERT INTO t1 VALUES (1);
INSERT INTO t2 VALUES (2);
SELECT * FROM t3;
TRUNCATE TABLE t3;
SELECT * FROM t3;
INSERT INTO t1 VALUES (1);
INSERT INTO t2 VALUES (2);
TRUNCATE TABLE t1;
SELECT * FROM t3;
INSERT INTO t1 VALUES (1);
CREATE TABLE t4 (c1 INT, INDEX(c1));
LOCK TABLE t4 WRITE;
TRUNCATE TABLE t3;
SELECT * FROM t3;
SELECT * FROM t1;
SELECT * FROM t2;
INSERT INTO t1 VALUES (1);
INSERT INTO t2 VALUES (2);
TRUNCATE TABLE t1;
SELECT * FROM t3;
SELECT * FROM t1;
SELECT * FROM t2;
UNLOCK TABLES;
DROP TABLE t1, t2, t3, t4;
CREATE TABLE t1 (c1 INT) ENGINE= MyISAM;
CREATE TABLE t2 (c1 INT) ENGINE= MRG_MYISAM UNION= (t1) INSERT_METHOD= LAST;
REPAIR TABLE t1;
INSERT INTO t2 VALUES (1);
reap;
DROP TABLE t1, t2;
CREATE TABLE t1 (c1 INT) ENGINE= MyISAM;
CREATE TABLE t2 (c1 INT) ENGINE= MRG_MYISAM UNION= (t1) INSERT_METHOD= LAST;
LOCK TABLE t1 WRITE;
INSERT INTO t2 VALUES (1);
REPAIR TABLE t1;
UNLOCK TABLES;
reap;
DROP TABLE t1, t2;
CREATE TABLE t1 (c1 INT) ENGINE= MyISAM;
LOCK TABLE t1 WRITE;
INSERT INTO t1 VALUES (1);
FLUSH TABLES;
FLUSH TABLES;
SELECT * FROM t1;
UNLOCK TABLES;
reap;
DROP TABLE t1;
CREATE TABLE t1(c1 INT);
INSERT INTO t1 VALUES (1);
CREATE TABLE t2 (c1 INT) ENGINE=MRG_MYISAM UNION=(t1) INSERT_METHOD=LAST;
CREATE TABLE t3 ENGINE=MRG_MYISAM INSERT_METHOD=LAST SELECT * FROM t2;
SHOW CREATE TABLE t3;
CREATE TABLE t3 ENGINE=MRG_MYISAM UNION=(t1) INSERT_METHOD=LAST SELECT * FROM t2;
SHOW CREATE TABLE t3;
DROP TABLE t1, t2;
CREATE TABLE t1 (c1 INT);
CREATE TABLE t2 (c1 INT);
CREATE TABLE t3 (c1 INT) ENGINE=MRG_MYISAM UNION=(t1,t2) INSERT_METHOD=LAST;
INSERT INTO t1 VALUES (1);
INSERT INTO t2 VALUES (2);
INSERT INTO t3 VALUES (3);
CREATE TABLE t4 LIKE t3;
SHOW CREATE TABLE t4;
INSERT INTO t4 VALUES (4);
DROP TABLE t4;
LOCK TABLES t3 WRITE, t2 WRITE, t1 WRITE;
CREATE TABLE t4 LIKE t3;
SHOW CREATE TABLE t4;
INSERT INTO t4 VALUES (4);
CREATE TEMPORARY TABLE t4 LIKE t3;
SHOW CREATE TABLE t4;
INSERT INTO t4 VALUES (4);
UNLOCK TABLES;
INSERT INTO t4 VALUES (4);
DROP TABLE t4;
CREATE TABLE t4 (c1 INT);
INSERT INTO t4 VALUES (4);
SELECT * FROM t4 ORDER BY c1;
RENAME TABLE t4 TO t5;
SELECT * FROM t5 ORDER BY c1;
RENAME TABLE t5 TO t4;
SELECT * FROM t4 ORDER BY c1;
DROP TABLE t4;
SELECT * FROM t3 ORDER BY c1;
RENAME TABLE t2 TO t5;
SELECT * FROM t3 ORDER BY c1;
RENAME TABLE t5 TO t2;
SELECT * FROM t3 ORDER BY c1;
LOCK TABLES t1 WRITE, t2 WRITE, t3 WRITE;
SELECT * FROM t3 ORDER BY c1;
RENAME TABLE t2 TO t5;
SELECT * FROM t3 ORDER BY c1;
RENAME TABLE t5 TO t2;
SELECT * FROM t3 ORDER BY c1;
UNLOCK TABLES;
ALTER TABLE t2 RENAME TO t5;
SELECT * FROM t3 ORDER BY c1;
ALTER TABLE t5 RENAME TO t2;
SELECT * FROM t3 ORDER BY c1;
LOCK TABLES t1 WRITE, t2 WRITE, t3 WRITE;
ALTER TABLE t2 RENAME TO t5;
SELECT * FROM t3 ORDER BY c1;
ALTER TABLE t5 RENAME TO t2;
SELECT * FROM t3 ORDER BY c1;
UNLOCK TABLES;
LOCK TABLES t1 WRITE, t2 WRITE, t3 WRITE;
SELECT * FROM t3 ORDER BY c1;
RENAME TABLE t3 TO t5;
SELECT * FROM t5 ORDER BY c1;
RENAME TABLE t5 TO t3;
SELECT * FROM t3 ORDER BY c1;
ALTER TABLE t3 RENAME TO t5;
SELECT * FROM t5 ORDER BY c1;
UNLOCK TABLES;
DROP TABLE t1, t2, t5;
CREATE TABLE t1 (c1 INT, INDEX(c1));
CREATE TABLE t2 (c1 INT, INDEX(c1)) ENGINE=MRG_MYISAM UNION=(t1) INSERT_METHOD=LAST;
LOCK TABLES t1 WRITE, t2 WRITE;
INSERT INTO t1 VALUES (1);
DROP TABLE t2;
SELECT * FROM t2;
SELECT * FROM t1;
UNLOCK TABLES;
CREATE TABLE t2 (c1 INT, INDEX(c1)) ENGINE=MRG_MYISAM UNION=(t1) INSERT_METHOD=LAST;
LOCK TABLES t1 WRITE, t2 WRITE;
INSERT INTO t1 VALUES (1);
DROP TABLE t1;
SELECT * FROM t2;
SELECT * FROM t1;
UNLOCK TABLES;
DROP TABLE t2;
CREATE TABLE t1 (c1 INT, INDEX(c1));
CREATE TABLE t2 (c1 INT, INDEX(c1));
CREATE TABLE t3 (c1 INT, INDEX(c1));
INSERT INTO t1 VALUES (1);
INSERT INTO t2 VALUES (2);
INSERT INTO t3 VALUES (3);
CREATE TABLE t4 (c1 INT, INDEX(c1)) ENGINE=MRG_MYISAM UNION=(t3,t2) INSERT_METHOD=LAST;
ALTER TABLE t4 UNION=(t3);
SHOW CREATE TABLE t4;
SELECT * FROM t4 ORDER BY c1;
ALTER TABLE t4 UNION=(t3,t2);
SHOW CREATE TABLE t4;
SELECT * FROM t4 ORDER BY c1;
LOCK TABLES t4 WRITE, t3 WRITE, t2 WRITE;
ALTER TABLE t4 UNION=(t3);
ALTER TABLE t4 UNION=(t3,t2);
ALTER TABLE t4 UNION=(t3,t2,t1);
SHOW CREATE TABLE t4;
SELECT * FROM t4 ORDER BY c1;
UNLOCK TABLES;
DROP TABLE t4;
CREATE TABLE t4 (c1 INT, INDEX(c1)) ENGINE=MRG_MYISAM UNION=(t1,t2,t3) INSERT_METHOD=LAST;
LOCK TABLES t4 WRITE, t3 WRITE, t2 WRITE, t1 WRITE;
ALTER TABLE t4 DROP INDEX c1, ADD UNIQUE INDEX (c1);
SELECT * FROM t4 ORDER BY c1;
ALTER TABLE t2 DROP INDEX c1, ADD UNIQUE INDEX (c1);
SELECT * FROM t4 ORDER BY c1;
UNLOCK TABLES;
LOCK TABLES t1 WRITE, t2 WRITE, t3 WRITE, t4 WRITE;
ALTER TABLE t4 DROP INDEX c1, ADD UNIQUE INDEX (c1);
SELECT * FROM t4 ORDER BY c1;
ALTER TABLE t2 DROP INDEX c1, ADD UNIQUE INDEX (c1);
SELECT * FROM t4 ORDER BY c1;
UNLOCK TABLES;
LOCK TABLES t3 WRITE, t2 WRITE, t4 WRITE, t1 WRITE;
ALTER TABLE t4 DROP INDEX c1, ADD UNIQUE INDEX (c1);
SELECT * FROM t4 ORDER BY c1;
ALTER TABLE t2 DROP INDEX c1, ADD UNIQUE INDEX (c1);
SELECT * FROM t4 ORDER BY c1;
UNLOCK TABLES;
DROP TABLE t1, t2, t3, t4;
CREATE TABLE t1 (c1 INT);
CREATE TABLE t2 (c1 INT);
CREATE TABLE t3 (c1 INT);
CREATE TABLE t4 (c1 INT) ENGINE=MRG_MYISAM UNION=(t1,t2,t3) INSERT_METHOD=LAST;
INSERT INTO t1 VALUES (1);
INSERT INTO t2 VALUES (2);
INSERT INTO t3 VALUES (3);
LOCK TABLES t4 WRITE, t3 WRITE, t2 WRITE, t1 WRITE;
ALTER TABLE t4 ALTER COLUMN c1 SET DEFAULT 44;
SELECT * FROM t4 ORDER BY c1;
ALTER TABLE t2 ALTER COLUMN c1 SET DEFAULT 22;
SELECT * FROM t4 ORDER BY c1;
UNLOCK TABLES;
LOCK TABLES t1 WRITE, t2 WRITE, t3 WRITE, t4 WRITE;
ALTER TABLE t4 ALTER COLUMN c1 SET DEFAULT 44;
SELECT * FROM t4 ORDER BY c1;
ALTER TABLE t2 ALTER COLUMN c1 SET DEFAULT 22;
SELECT * FROM t4 ORDER BY c1;
UNLOCK TABLES;
LOCK TABLES t3 WRITE, t2 WRITE, t4 WRITE, t1 WRITE;
ALTER TABLE t4 ALTER COLUMN c1 SET DEFAULT 44;
SELECT * FROM t4 ORDER BY c1;
ALTER TABLE t2 ALTER COLUMN c1 SET DEFAULT 22;
SELECT * FROM t4 ORDER BY c1;
UNLOCK TABLES;
LOCK TABLES t4 WRITE, t3 WRITE, t2 WRITE, t1 WRITE;
FLUSH TABLE t4;
SELECT * FROM t4 ORDER BY c1;
FLUSH TABLE t2;
SELECT * FROM t4 ORDER BY c1;
FLUSH TABLES;
SELECT * FROM t4 ORDER BY c1;
UNLOCK TABLES;
LOCK TABLES t1 WRITE, t2 WRITE, t3 WRITE, t4 WRITE;
FLUSH TABLE t4;
SELECT * FROM t4 ORDER BY c1;
FLUSH TABLE t2;
SELECT * FROM t4 ORDER BY c1;
FLUSH TABLES;
SELECT * FROM t4 ORDER BY c1;
UNLOCK TABLES;
LOCK TABLES t3 WRITE, t2 WRITE, t4 WRITE, t1 WRITE;
FLUSH TABLE t4;
SELECT * FROM t4 ORDER BY c1;
FLUSH TABLE t2;
SELECT * FROM t4 ORDER BY c1;
FLUSH TABLES;
SELECT * FROM t4 ORDER BY c1;
UNLOCK TABLES;
DELETE FROM t4 WHERE c1 = 4;
CREATE TRIGGER t4_ai AFTER INSERT ON t4 FOR EACH ROW SET @a=1;
SET @a=0;
INSERT INTO t4 VALUES (4);
SELECT @a;
SELECT * FROM t4 ORDER BY c1;
DROP TRIGGER t4_ai;
LOCK TABLES t3 WRITE, t2 WRITE, t4 WRITE, t1 WRITE;
CREATE TRIGGER t4_ai AFTER INSERT ON t4 FOR EACH ROW SET @a=1;
SET @a=0;
INSERT INTO t4 VALUES (4);
SELECT @a;
SELECT * FROM t4 ORDER BY c1;
DROP TRIGGER t4_ai;
UNLOCK TABLES;
DELETE FROM t4 WHERE c1 = 4;
CREATE TRIGGER t3_ai AFTER INSERT ON t3 FOR EACH ROW SET @a=1;
SET @a=0;
INSERT INTO t4 VALUES (4);
SELECT @a;
INSERT INTO t3 VALUES (33);
SELECT @a;
SELECT * FROM t4 ORDER BY c1;
DROP TRIGGER t3_ai;
LOCK TABLES t3 WRITE, t2 WRITE, t4 WRITE, t1 WRITE;
CREATE TRIGGER t3_ai AFTER INSERT ON t3 FOR EACH ROW SET @a=1;
SET @a=0;
INSERT INTO t4 VALUES (4);
SELECT @a;
INSERT INTO t3 VALUES (33);
SELECT @a;
SELECT * FROM t4 ORDER BY c1;
DELETE FROM t4 WHERE c1 = 33;
DROP TRIGGER t3_ai;
UNLOCK TABLES;
DELETE FROM t4 WHERE c1 = 4;
CREATE TRIGGER t3_ai AFTER INSERT ON t3 FOR EACH ROW INSERT INTO t2 VALUES(22);
INSERT INTO t4 VALUES (4);
SELECT * FROM t4 ORDER BY c1;
INSERT INTO t3 VALUES (33);
SELECT * FROM t4 ORDER BY c1;
DELETE FROM t4 WHERE c1 = 22;
DELETE FROM t4 WHERE c1 = 33;
DROP TRIGGER t3_ai;
LOCK TABLES t3 WRITE, t2 WRITE, t4 WRITE, t1 WRITE;
CREATE TRIGGER t3_ai AFTER INSERT ON t3 FOR EACH ROW INSERT INTO t2 VALUES(22);
INSERT INTO t4 VALUES (4);
SELECT * FROM t4 ORDER BY c1;
INSERT INTO t3 VALUES (33);
SELECT * FROM t4 ORDER BY c1;
DROP TRIGGER t3_ai;
DELETE FROM t4 WHERE c1 = 22;
DELETE FROM t4 WHERE c1 = 33;
UNLOCK TABLES;
REPAIR TABLE t4;
REPAIR TABLE t2;
SELECT * FROM t4 ORDER BY c1;
LOCK TABLES t3 WRITE, t2 WRITE, t4 WRITE, t1 WRITE;
REPAIR TABLE t4;
REPAIR TABLE t2;
SELECT * FROM t4 ORDER BY c1;
UNLOCK TABLES;
OPTIMIZE TABLE t4;
OPTIMIZE TABLE t2;
SELECT * FROM t4 ORDER BY c1;
LOCK TABLES t3 WRITE, t2 WRITE, t4 WRITE, t1 WRITE;
OPTIMIZE TABLE t4;
OPTIMIZE TABLE t2;
SELECT * FROM t4 ORDER BY c1;
UNLOCK TABLES;
CHECKSUM TABLE t4;
CHECKSUM TABLE t2;
SELECT * FROM t4 ORDER BY c1;
LOCK TABLES t3 WRITE, t2 WRITE, t4 WRITE, t1 WRITE;
CHECKSUM TABLE t4;
CHECKSUM TABLE t2;
SELECT * FROM t4 ORDER BY c1;
UNLOCK TABLES;
DROP TABLE t1, t2, t3, t4;
CREATE TABLE t1 (c1 INT, INDEX(c1));
CREATE TABLE t2 (c1 INT, INDEX(c1)) ENGINE=MRG_MYISAM UNION=(t1) INSERT_METHOD=LAST;
CREATE TABLE t3 (c1 INT, INDEX(c1)) ENGINE=MRG_MYISAM UNION=(t2,t1) INSERT_METHOD=LAST;
ALTER TABLE t2 UNION=(t3,t1);
SELECT * FROM t2;
DROP TABLE t1, t2, t3;
CREATE TABLE t1 (c1 INT) ENGINE=MyISAM;
CREATE TABLE t2 (c1 INT) ENGINE=MyISAM;
CREATE TABLE t3 (c1 INT) ENGINE=MRG_MYISAM UNION=(t1,t2);
INSERT INTO t1 VALUES (1);
INSERT INTO t2 VALUES (2);
SELECT * FROM t3;
TRUNCATE TABLE t1;
SELECT * FROM t3;
DROP TABLE t1, t2, t3;
CREATE TABLE t1 (id INTEGER, grp TINYINT, id_rev INTEGER);
SET @rnd_max= 2147483647;
SET @rnd= RAND();
SET @id = CAST(@rnd * @rnd_max AS UNSIGNED);
SET @id_rev= @rnd_max - @id;
SET @grp= CAST(127.0 * @rnd AS UNSIGNED);
INSERT INTO t1 (id, grp, id_rev) VALUES (@id, @grp, @id_rev);
SET @rnd= RAND();
SET @id = CAST(@rnd * @rnd_max AS UNSIGNED);
SET @id_rev= @rnd_max - @id;
SET @grp= CAST(127.0 * @rnd AS UNSIGNED);
INSERT INTO t1 (id, grp, id_rev) VALUES (@id, @grp, @id_rev);
SET @rnd= RAND();
SET @id = CAST(@rnd * @rnd_max AS UNSIGNED);
SET @id_rev= @rnd_max - @id;
SET @grp= CAST(127.0 * @rnd AS UNSIGNED);
INSERT INTO t1 (id, grp, id_rev) VALUES (@id, @grp, @id_rev);
SET @rnd= RAND();
SET @id = CAST(@rnd * @rnd_max AS UNSIGNED);
SET @id_rev= @rnd_max - @id;
SET @grp= CAST(127.0 * @rnd AS UNSIGNED);
INSERT INTO t1 (id, grp, id_rev) VALUES (@id, @grp, @id_rev);
SET @rnd= RAND();
SET @id = CAST(@rnd * @rnd_max AS UNSIGNED);
SET @id_rev= @rnd_max - @id;
SET @grp= CAST(127.0 * @rnd AS UNSIGNED);
INSERT INTO t1 (id, grp, id_rev) VALUES (@id, @grp, @id_rev);
SET @rnd= RAND();
SET @id = CAST(@rnd * @rnd_max AS UNSIGNED);
SET @id_rev= @rnd_max - @id;
SET @grp= CAST(127.0 * @rnd AS UNSIGNED);
INSERT INTO t1 (id, grp, id_rev) VALUES (@id, @grp, @id_rev);
SET @rnd= RAND();
SET @id = CAST(@rnd * @rnd_max AS UNSIGNED);
SET @id_rev= @rnd_max - @id;
SET @grp= CAST(127.0 * @rnd AS UNSIGNED);
INSERT INTO t1 (id, grp, id_rev) VALUES (@id, @grp, @id_rev);
SET @rnd= RAND();
SET @id = CAST(@rnd * @rnd_max AS UNSIGNED);
SET @id_rev= @rnd_max - @id;
SET @grp= CAST(127.0 * @rnd AS UNSIGNED);
INSERT INTO t1 (id, grp, id_rev) VALUES (@id, @grp, @id_rev);
SET @rnd= RAND();
SET @id = CAST(@rnd * @rnd_max AS UNSIGNED);
SET @id_rev= @rnd_max - @id;
SET @grp= CAST(127.0 * @rnd AS UNSIGNED);
INSERT INTO t1 (id, grp, id_rev) VALUES (@id, @grp, @id_rev);
SET @rnd= RAND();
SET @id = CAST(@rnd * @rnd_max AS UNSIGNED);
SET @id_rev= @rnd_max - @id;
SET @grp= CAST(127.0 * @rnd AS UNSIGNED);
INSERT INTO t1 (id, grp, id_rev) VALUES (@id, @grp, @id_rev);
set @@read_buffer_size=2*1024*1024;
CREATE TABLE t2 SELECT * FROM t1;
INSERT INTO t1 (id, grp, id_rev) SELECT id, grp, id_rev FROM t2;
INSERT INTO t2 (id, grp, id_rev) SELECT id, grp, id_rev FROM t1;
INSERT INTO t1 (id, grp, id_rev) SELECT id, grp, id_rev FROM t2;
INSERT INTO t2 (id, grp, id_rev) SELECT id, grp, id_rev FROM t1;
INSERT INTO t1 (id, grp, id_rev) SELECT id, grp, id_rev FROM t2;
CREATE TABLE t3 (id INTEGER, grp TINYINT, id_rev INTEGER) ENGINE= MRG_MYISAM UNION= (t1, t2);
SELECT COUNT(*) FROM t1;
SELECT COUNT(*) FROM t2;
SELECT COUNT(*) FROM t3;
SELECT COUNT(DISTINCT a1.id) FROM t3 AS a1, t3 AS a2 WHERE a1.id = a2.id GROUP BY a2.grp;
TRUNCATE TABLE t1;
reap;
SELECT COUNT(*) FROM t1;
SELECT COUNT(*) FROM t2;
SELECT COUNT(*) FROM t3;
DROP TABLE t1, t2, t3;
CREATE TABLE t1 (c1 INT) ENGINE=MyISAM;
CREATE TABLE t2 (c1 INT) ENGINE=MRG_MYISAM UNION=(t1) INSERT_METHOD=LAST;
INSERT INTO t2 VALUES (1);
SELECT * FROM t2;
LOCK TABLES t2 WRITE, t1 WRITE;
FLUSH TABLES;
REPAIR TABLE t1;
CHECK TABLE t1;
REPAIR TABLE t1;
UNLOCK TABLES;
CHECK TABLE t1 EXTENDED;
LOCK TABLES t2 WRITE, t1 WRITE;
REPAIR TABLE t1;
CHECK TABLE t1;
REPAIR TABLE t1;
UNLOCK TABLES;
CHECK TABLE t1 EXTENDED;
DROP TABLE t1, t2;
CREATE TABLE t1 ( a INT ) ENGINE=MyISAM;
CREATE TABLE m1 ( a INT ) ENGINE=MRG_MYISAM UNION=(t1);
LOCK TABLES t1 WRITE, m1 WRITE;
FLUSH TABLE t1;
UNLOCK TABLES;
DROP TABLE m1, t1;
CREATE TABLE t1 ( a INT ) ENGINE=MyISAM;
CREATE TABLE m1 ( a INT ) ENGINE=MRG_MYISAM UNION=(t1);
LOCK TABLES m1 WRITE, t1 WRITE;
FLUSH TABLE t1;
UNLOCK TABLES;
DROP TABLE m1, t1;
CREATE TABLE t1 (c1 INT, c2 INT) ENGINE= MyISAM;
CREATE TABLE t2 (c1 INT, c2 INT) ENGINE= MyISAM;
CREATE TABLE t3 (c1 INT, c2 INT) ENGINE= MRG_MYISAM UNION(t1, t2);
INSERT INTO t1 VALUES (1, 1);
INSERT INTO t2 VALUES (2, 2);
SELECT * FROM t3;
ALTER TABLE t1 ENGINE= MEMORY;
INSERT INTO t1 VALUES (0, 0);
SELECT * FROM t3;
DROP TABLE t1, t2, t3;
CREATE TABLE t1 (c1 INT, KEY(c1));
CREATE TABLE t2 (c1 INT, KEY(c1)) ENGINE=MRG_MYISAM UNION=(t1) INSERT_METHOD=FIRST;
LOCK TABLE t1 WRITE, t2 WRITE;
FLUSH TABLES t2, t1;
OPTIMIZE TABLE t1;
FLUSH TABLES t1;
UNLOCK TABLES;
FLUSH TABLES;
INSERT INTO t1 VALUES (1);
LOCK TABLE t1 WRITE, t2 WRITE;
FLUSH TABLES t2, t1;
OPTIMIZE TABLE t1;
FLUSH TABLES t1;
UNLOCK TABLES;
DROP TABLE t1, t2;
CREATE TABLE t1 (ID INT) ENGINE=MYISAM;
CREATE TABLE m1 (ID INT) ENGINE=MRG_MYISAM UNION=(t1) INSERT_METHOD=FIRST;
INSERT INTO t1 VALUES ();
INSERT INTO m1 VALUES ();
LOCK TABLE t1 WRITE, m1 WRITE;
FLUSH TABLES m1, t1;
OPTIMIZE TABLE t1;
FLUSH TABLES m1, t1;
UNLOCK TABLES;
DROP TABLE t1, m1;
SET SESSION information_schema_stats_expiry=0;
CREATE TABLE tm1 (c1 INT) ENGINE=MRG_MYISAM UNION=(t1) INSERT_METHOD=FIRST;
SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'test' and TABLE_NAME='tm1';
DROP TABLE tm1;
SET SESSION information_schema_stats_expiry=default;
CREATE TABLE t1(C1 INT, C2 INT, KEY C1(C1), KEY C2(C2)) ENGINE=MYISAM;
CREATE TABLE t2(C1 INT, C2 INT, KEY C1(C1), KEY C2(C2)) ENGINE=MYISAM;
CREATE TABLE t3(C1 INT, C2 INT, KEY C1(C1), KEY C2(C2)) ENGINE=MYISAM;
CREATE TABLE t4(C1 INT, C2 INT, KEY C1(C1), KEY C2(C2)) ENGINE=MRG_MYISAM UNION=(t1, t2, t3);
INSERT INTO t1 VALUES (1,1), (1,2),(1,3), (1,4);
INSERT INTO t2 VALUES (2,1), (2,2),(2,3), (2,4);
INSERT INTO t3 VALUES (3,1), (3,2),(3,3), (3,4);
EXPLAIN SELECT COUNT(*) FROM t1;
EXPLAIN SELECT COUNT(*) FROM t4;
DROP TABLE t1, t2, t3, t4;
CREATE TABLE t1(a INT, KEY(a));
INSERT INTO t1 VALUES(0),(1),(2),(3),(4);
ANALYZE TABLE t1;
CREATE TABLE m1(a INT, KEY(a)) ENGINE=MERGE UNION=(t1);
ANALYZE TABLE m1;
SELECT CARDINALITY FROM INFORMATION_SCHEMA.STATISTICS WHERE TABLE_SCHEMA='test' AND TABLE_NAME='m1';
SELECT CARDINALITY FROM INFORMATION_SCHEMA.STATISTICS WHERE TABLE_SCHEMA='test' AND TABLE_NAME='m1';
SELECT CARDINALITY FROM INFORMATION_SCHEMA.STATISTICS WHERE TABLE_SCHEMA='test' AND TABLE_NAME='m1';
SELECT CARDINALITY FROM INFORMATION_SCHEMA.STATISTICS WHERE TABLE_SCHEMA='test' AND TABLE_NAME='m1';
DROP TABLE t1, m1;
CREATE TABLE t1(a INT);
INSERT INTO t1 VALUES(1);
CREATE TABLE t2(a INT, b INT, dummy CHAR(16) DEFAULT '', KEY(a), KEY(b));
CREATE TABLE t3(a INT, b INT, dummy CHAR(16) DEFAULT '', KEY(a), KEY(b)) ENGINE=MERGE UNION=(t2) INSERT_METHOD=FIRST;
LOCK TABLES t1 WRITE, t3 WRITE;
INSERT INTO t3(a,b) VALUES(1,2);
SELECT t3.a FROM t1,t3 WHERE t3.b=2 AND t3.a=1;
UNLOCK TABLES;
DROP TABLE t1, t2, t3;
create table t1 ( col1 int(10), primary key (col1) ) ENGINE=MyISAM DEFAULT CHARSET=latin1;
CREATE TABLE m1 ( col1 int(10) NOT NULL ) ENGINE=MRG_MyISAM DEFAULT CHARSET=latin1 INSERT_METHOD=LAST UNION=(t1);
insert into m1 (col1) values (1);
insert into m1 (col1) values (1);
drop table m1, t1;
CREATE TABLE t1 (c1 INT PRIMARY KEY) ENGINE=MyISAM;
CREATE TABLE m1 (c1 INT NOT NULL) ENGINE=MRG_MyISAM INSERT_METHOD=LAST UNION=(t1);
INSERT INTO m1  VALUES (666);
SELECT * FROM m1;
REPLACE INTO m1 VALUES (666);
SELECT * FROM m1;
DROP TABLE m1, t1;
CREATE TABLE t1 (c1 INT PRIMARY KEY) ENGINE=MyISAM;
CREATE TABLE m1 (c1 INT NOT NULL) ENGINE=MRG_MyISAM INSERT_METHOD=LAST UNION=(t1);
INSERT INTO m1  VALUES (666);
SELECT * FROM m1;
INSERT INTO m1 VALUES (666) ON DUPLICATE KEY UPDATE c1=c1+1;
SELECT * FROM m1;
DROP TABLE m1, t1;
CREATE TABLE t1 (c1 INT, c2 INT, UNIQUE (c1), UNIQUE (c2));
CREATE TABLE m1 (c1 INT, c2 INT, UNIQUE (c1)) ENGINE=MRG_MyISAM INSERT_METHOD=LAST UNION=(t1);
INSERT INTO m1 VALUES (1,2);
INSERT INTO m1 VALUES (3,2);
DROP TABLE m1,t1;
CREATE TABLE t1 (c1 INT, c2 INT, UNIQUE (c1));
CREATE TABLE m1 (c1 INT, c2 INT, UNIQUE (c2)) ENGINE=MRG_MyISAM INSERT_METHOD=LAST UNION=(t1);
INSERT INTO m1 VALUES (1,2);
INSERT INTO m1 VALUES (1,4);
DROP TABLE m1,t1;
CREATE TABLE t1 ( col1 INT(10) ) ENGINE=MyISAM  DEFAULT CHARSET=latin1;
CREATE VIEW v1 as SELECT * FROM t1;
CREATE TABLE m1 ( col1 INT(10) )ENGINE=MRG_MyISAM DEFAULT CHARSET=latin1 INSERT_METHOD=LAST UNION=(v1);
SELECT * FROM m1;
DROP VIEW v1;
DROP TABLE m1, t1;
CREATE TABLE t1(c1 INT) ENGINE=MyISAM;
CREATE TABLE m1(c1 INT) ENGINE=MERGE UNION=(t1);
ALTER TABLE m1 ADD INDEX idx_c1(c1);
SELECT * FROM m1;
ALTER TABLE t1 ADD INDEX idx_c1(c1);
SELECT * FROM m1;
DROP TABLE m1;
DROP TABLE t1;
DROP TABLE IF EXISTS m1,t1;
CREATE TABLE t1(a int)engine=myisam;
CREATE TABLE t2(a int)engine=myisam;
CREATE TABLE t3(a int)engine=myisam;
CREATE TABLE t4(a int)engine=myisam;
CREATE TABLE t5(a int)engine=myisam;
CREATE TABLE t6(a int)engine=myisam;
CREATE TABLE t7(a int)engine=myisam;
CREATE TABLE m1(a int)engine=merge union=(t1,t2,t3,t4,t5,t6,t7);
SELECT 1 FROM m1;
HANDLER m1 OPEN;
DROP TABLE m1,t1,t2,t3,t4,t5,t6,t7;
SELECT 1 FROM m1;
CREATE TABLE t1(a int);
CREATE TABLE t2(a int);
CREATE TABLE t3(a int) ENGINE = MERGE UNION(t1, t2);
CREATE TRIGGER tr1 AFTER INSERT ON t3 FOR EACH ROW CALL foo();
SHOW CREATE TRIGGER tr1;
DROP TRIGGER tr1;
DROP TABLE t1, t2, t3;
CREATE DATABASE `test/1`;
CREATE TABLE `test/1`.`t/1`(a INT);
CREATE TABLE m1(a INT) ENGINE=MERGE UNION=(`test/1`.`t/1`);
SELECT * FROM m1;
SHOW CREATE TABLE m1;
DROP TABLE m1;
CREATE TABLE `test/1`.m1(a INT) ENGINE=MERGE UNION=(`test/1`.`t/1`);
SELECT * FROM `test/1`.m1;
SHOW CREATE TABLE `test/1`.m1;
DROP TABLE `test/1`.m1;
DROP TABLE `test/1`.`t/1`;
CREATE TEMPORARY TABLE `test/1`.`t/1`(a INT) ENGINE=MyISAM;
CREATE TEMPORARY TABLE m1(a INT) ENGINE=MERGE UNION=(`test/1`.`t/1`);
SELECT * FROM m1;
SHOW CREATE TABLE m1;
DROP TABLE m1;
CREATE TEMPORARY TABLE `test/1`.m1(a INT) ENGINE=MERGE UNION=(`test/1`.`t/1`);
SELECT * FROM `test/1`.m1;
SHOW CREATE TABLE `test/1`.m1;
DROP TABLE `test/1`.m1;
DROP TABLE `test/1`.`t/1`;
DROP DATABASE `test/1`;
CREATE TABLE t1 (a INT) ENGINE=MYISAM;
INSERT INTO t1 VALUES(1);
CREATE TABLE t2 (b INT NOT NULL,c INT,d INT,e BLOB NOT NULL, KEY idx0 (d, c)) ENGINE=MERGE;
EXPLAIN SELECT * FROM t1 NATURAL RIGHT JOIN t2 WHERE b SOUNDS LIKE e AND d = 1;
DROP TABLE t2, t1;
DROP TABLE IF EXISTS m1, t1;
CREATE TABLE t1 (c1 INT) ENGINE=MYISAM;
CREATE TABLE m1 (c1 INT) ENGINE=MRG_MyISAM UNION=(t1) INSERT_METHOD=LAST;
LOCK TABLE m1 READ;
REPAIR TABLE m1 USE_FRM;
UNLOCK TABLES;
REPAIR TABLE m1 USE_FRM;
DROP TABLE m1,t1;
CREATE TABLE m1 (f1 BIGINT) ENGINE=MRG_MyISAM UNION(t1);
REPAIR TABLE m1 USE_FRM;
CREATE TABLE t1 (f1 BIGINT) ENGINE = MyISAM;
REPAIR TABLE m1 USE_FRM;
REPAIR TABLE m1;
DROP TABLE m1, t1;
CREATE TEMPORARY TABLE m1 (f1 BIGINT) ENGINE=MRG_MyISAM UNION(t1);
REPAIR TABLE m1 USE_FRM;
CREATE TEMPORARY TABLE t1 (f1 BIGINT) ENGINE=MyISAM;
REPAIR TABLE m1 USE_FRM;
REPAIR TABLE m1;
DROP TABLE m1, t1;
drop table if exists t_parent;
set @save_table_definition_cache=@@global.table_definition_cache;
set @save_table_open_cache=@@global.table_open_cache;
set @@global.table_open_cache=400;
set @@global.table_definition_cache=400;
set @a=null;
drop table if exists t400;
create table t400 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t400"), "t400");
drop table if exists t399;
create table t399 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t399"), "t399");
drop table if exists t398;
create table t398 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t398"), "t398");
drop table if exists t397;
create table t397 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t397"), "t397");
drop table if exists t396;
create table t396 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t396"), "t396");
drop table if exists t395;
create table t395 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t395"), "t395");
drop table if exists t394;
create table t394 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t394"), "t394");
drop table if exists t393;
create table t393 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t393"), "t393");
drop table if exists t392;
create table t392 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t392"), "t392");
drop table if exists t391;
create table t391 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t391"), "t391");
drop table if exists t390;
create table t390 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t390"), "t390");
drop table if exists t389;
create table t389 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t389"), "t389");
drop table if exists t388;
create table t388 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t388"), "t388");
drop table if exists t387;
create table t387 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t387"), "t387");
drop table if exists t386;
create table t386 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t386"), "t386");
drop table if exists t385;
create table t385 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t385"), "t385");
drop table if exists t384;
create table t384 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t384"), "t384");
drop table if exists t383;
create table t383 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t383"), "t383");
drop table if exists t382;
create table t382 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t382"), "t382");
drop table if exists t381;
create table t381 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t381"), "t381");
drop table if exists t380;
create table t380 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t380"), "t380");
drop table if exists t379;
create table t379 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t379"), "t379");
drop table if exists t378;
create table t378 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t378"), "t378");
drop table if exists t377;
create table t377 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t377"), "t377");
drop table if exists t376;
create table t376 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t376"), "t376");
drop table if exists t375;
create table t375 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t375"), "t375");
drop table if exists t374;
create table t374 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t374"), "t374");
drop table if exists t373;
create table t373 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t373"), "t373");
drop table if exists t372;
create table t372 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t372"), "t372");
drop table if exists t371;
create table t371 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t371"), "t371");
drop table if exists t370;
create table t370 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t370"), "t370");
drop table if exists t369;
create table t369 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t369"), "t369");
drop table if exists t368;
create table t368 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t368"), "t368");
drop table if exists t367;
create table t367 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t367"), "t367");
drop table if exists t366;
create table t366 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t366"), "t366");
drop table if exists t365;
create table t365 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t365"), "t365");
drop table if exists t364;
create table t364 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t364"), "t364");
drop table if exists t363;
create table t363 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t363"), "t363");
drop table if exists t362;
create table t362 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t362"), "t362");
drop table if exists t361;
create table t361 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t361"), "t361");
drop table if exists t360;
create table t360 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t360"), "t360");
drop table if exists t359;
create table t359 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t359"), "t359");
drop table if exists t358;
create table t358 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t358"), "t358");
drop table if exists t357;
create table t357 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t357"), "t357");
drop table if exists t356;
create table t356 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t356"), "t356");
drop table if exists t355;
create table t355 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t355"), "t355");
drop table if exists t354;
create table t354 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t354"), "t354");
drop table if exists t353;
create table t353 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t353"), "t353");
drop table if exists t352;
create table t352 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t352"), "t352");
drop table if exists t351;
create table t351 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t351"), "t351");
drop table if exists t350;
create table t350 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t350"), "t350");
drop table if exists t349;
create table t349 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t349"), "t349");
drop table if exists t348;
create table t348 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t348"), "t348");
drop table if exists t347;
create table t347 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t347"), "t347");
drop table if exists t346;
create table t346 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t346"), "t346");
drop table if exists t345;
create table t345 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t345"), "t345");
drop table if exists t344;
create table t344 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t344"), "t344");
drop table if exists t343;
create table t343 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t343"), "t343");
drop table if exists t342;
create table t342 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t342"), "t342");
drop table if exists t341;
create table t341 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t341"), "t341");
drop table if exists t340;
create table t340 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t340"), "t340");
drop table if exists t339;
create table t339 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t339"), "t339");
drop table if exists t338;
create table t338 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t338"), "t338");
drop table if exists t337;
create table t337 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t337"), "t337");
drop table if exists t336;
create table t336 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t336"), "t336");
drop table if exists t335;
create table t335 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t335"), "t335");
drop table if exists t334;
create table t334 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t334"), "t334");
drop table if exists t333;
create table t333 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t333"), "t333");
drop table if exists t332;
create table t332 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t332"), "t332");
drop table if exists t331;
create table t331 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t331"), "t331");
drop table if exists t330;
create table t330 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t330"), "t330");
drop table if exists t329;
create table t329 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t329"), "t329");
drop table if exists t328;
create table t328 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t328"), "t328");
drop table if exists t327;
create table t327 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t327"), "t327");
drop table if exists t326;
create table t326 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t326"), "t326");
drop table if exists t325;
create table t325 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t325"), "t325");
drop table if exists t324;
create table t324 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t324"), "t324");
drop table if exists t323;
create table t323 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t323"), "t323");
drop table if exists t322;
create table t322 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t322"), "t322");
drop table if exists t321;
create table t321 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t321"), "t321");
drop table if exists t320;
create table t320 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t320"), "t320");
drop table if exists t319;
create table t319 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t319"), "t319");
drop table if exists t318;
create table t318 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t318"), "t318");
drop table if exists t317;
create table t317 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t317"), "t317");
drop table if exists t316;
create table t316 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t316"), "t316");
drop table if exists t315;
create table t315 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t315"), "t315");
drop table if exists t314;
create table t314 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t314"), "t314");
drop table if exists t313;
create table t313 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t313"), "t313");
drop table if exists t312;
create table t312 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t312"), "t312");
drop table if exists t311;
create table t311 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t311"), "t311");
drop table if exists t310;
create table t310 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t310"), "t310");
drop table if exists t309;
create table t309 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t309"), "t309");
drop table if exists t308;
create table t308 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t308"), "t308");
drop table if exists t307;
create table t307 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t307"), "t307");
drop table if exists t306;
create table t306 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t306"), "t306");
drop table if exists t305;
create table t305 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t305"), "t305");
drop table if exists t304;
create table t304 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t304"), "t304");
drop table if exists t303;
create table t303 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t303"), "t303");
drop table if exists t302;
create table t302 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t302"), "t302");
drop table if exists t301;
create table t301 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t301"), "t301");
drop table if exists t300;
create table t300 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t300"), "t300");
drop table if exists t299;
create table t299 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t299"), "t299");
drop table if exists t298;
create table t298 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t298"), "t298");
drop table if exists t297;
create table t297 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t297"), "t297");
drop table if exists t296;
create table t296 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t296"), "t296");
drop table if exists t295;
create table t295 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t295"), "t295");
drop table if exists t294;
create table t294 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t294"), "t294");
drop table if exists t293;
create table t293 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t293"), "t293");
drop table if exists t292;
create table t292 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t292"), "t292");
drop table if exists t291;
create table t291 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t291"), "t291");
drop table if exists t290;
create table t290 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t290"), "t290");
drop table if exists t289;
create table t289 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t289"), "t289");
drop table if exists t288;
create table t288 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t288"), "t288");
drop table if exists t287;
create table t287 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t287"), "t287");
drop table if exists t286;
create table t286 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t286"), "t286");
drop table if exists t285;
create table t285 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t285"), "t285");
drop table if exists t284;
create table t284 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t284"), "t284");
drop table if exists t283;
create table t283 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t283"), "t283");
drop table if exists t282;
create table t282 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t282"), "t282");
drop table if exists t281;
create table t281 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t281"), "t281");
drop table if exists t280;
create table t280 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t280"), "t280");
drop table if exists t279;
create table t279 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t279"), "t279");
drop table if exists t278;
create table t278 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t278"), "t278");
drop table if exists t277;
create table t277 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t277"), "t277");
drop table if exists t276;
create table t276 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t276"), "t276");
drop table if exists t275;
create table t275 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t275"), "t275");
drop table if exists t274;
create table t274 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t274"), "t274");
drop table if exists t273;
create table t273 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t273"), "t273");
drop table if exists t272;
create table t272 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t272"), "t272");
drop table if exists t271;
create table t271 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t271"), "t271");
drop table if exists t270;
create table t270 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t270"), "t270");
drop table if exists t269;
create table t269 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t269"), "t269");
drop table if exists t268;
create table t268 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t268"), "t268");
drop table if exists t267;
create table t267 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t267"), "t267");
drop table if exists t266;
create table t266 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t266"), "t266");
drop table if exists t265;
create table t265 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t265"), "t265");
drop table if exists t264;
create table t264 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t264"), "t264");
drop table if exists t263;
create table t263 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t263"), "t263");
drop table if exists t262;
create table t262 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t262"), "t262");
drop table if exists t261;
create table t261 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t261"), "t261");
drop table if exists t260;
create table t260 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t260"), "t260");
drop table if exists t259;
create table t259 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t259"), "t259");
drop table if exists t258;
create table t258 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t258"), "t258");
drop table if exists t257;
create table t257 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t257"), "t257");
drop table if exists t256;
create table t256 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t256"), "t256");
drop table if exists t255;
create table t255 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t255"), "t255");
drop table if exists t254;
create table t254 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t254"), "t254");
drop table if exists t253;
create table t253 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t253"), "t253");
drop table if exists t252;
create table t252 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t252"), "t252");
drop table if exists t251;
create table t251 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t251"), "t251");
drop table if exists t250;
create table t250 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t250"), "t250");
drop table if exists t249;
create table t249 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t249"), "t249");
drop table if exists t248;
create table t248 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t248"), "t248");
drop table if exists t247;
create table t247 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t247"), "t247");
drop table if exists t246;
create table t246 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t246"), "t246");
drop table if exists t245;
create table t245 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t245"), "t245");
drop table if exists t244;
create table t244 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t244"), "t244");
drop table if exists t243;
create table t243 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t243"), "t243");
drop table if exists t242;
create table t242 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t242"), "t242");
drop table if exists t241;
create table t241 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t241"), "t241");
drop table if exists t240;
create table t240 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t240"), "t240");
drop table if exists t239;
create table t239 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t239"), "t239");
drop table if exists t238;
create table t238 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t238"), "t238");
drop table if exists t237;
create table t237 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t237"), "t237");
drop table if exists t236;
create table t236 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t236"), "t236");
drop table if exists t235;
create table t235 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t235"), "t235");
drop table if exists t234;
create table t234 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t234"), "t234");
drop table if exists t233;
create table t233 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t233"), "t233");
drop table if exists t232;
create table t232 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t232"), "t232");
drop table if exists t231;
create table t231 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t231"), "t231");
drop table if exists t230;
create table t230 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t230"), "t230");
drop table if exists t229;
create table t229 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t229"), "t229");
drop table if exists t228;
create table t228 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t228"), "t228");
drop table if exists t227;
create table t227 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t227"), "t227");
drop table if exists t226;
create table t226 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t226"), "t226");
drop table if exists t225;
create table t225 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t225"), "t225");
drop table if exists t224;
create table t224 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t224"), "t224");
drop table if exists t223;
create table t223 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t223"), "t223");
drop table if exists t222;
create table t222 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t222"), "t222");
drop table if exists t221;
create table t221 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t221"), "t221");
drop table if exists t220;
create table t220 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t220"), "t220");
drop table if exists t219;
create table t219 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t219"), "t219");
drop table if exists t218;
create table t218 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t218"), "t218");
drop table if exists t217;
create table t217 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t217"), "t217");
drop table if exists t216;
create table t216 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t216"), "t216");
drop table if exists t215;
create table t215 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t215"), "t215");
drop table if exists t214;
create table t214 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t214"), "t214");
drop table if exists t213;
create table t213 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t213"), "t213");
drop table if exists t212;
create table t212 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t212"), "t212");
drop table if exists t211;
create table t211 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t211"), "t211");
drop table if exists t210;
create table t210 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t210"), "t210");
drop table if exists t209;
create table t209 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t209"), "t209");
drop table if exists t208;
create table t208 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t208"), "t208");
drop table if exists t207;
create table t207 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t207"), "t207");
drop table if exists t206;
create table t206 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t206"), "t206");
drop table if exists t205;
create table t205 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t205"), "t205");
drop table if exists t204;
create table t204 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t204"), "t204");
drop table if exists t203;
create table t203 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t203"), "t203");
drop table if exists t202;
create table t202 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t202"), "t202");
drop table if exists t201;
create table t201 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t201"), "t201");
drop table if exists t200;
create table t200 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t200"), "t200");
drop table if exists t199;
create table t199 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t199"), "t199");
drop table if exists t198;
create table t198 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t198"), "t198");
drop table if exists t197;
create table t197 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t197"), "t197");
drop table if exists t196;
create table t196 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t196"), "t196");
drop table if exists t195;
create table t195 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t195"), "t195");
drop table if exists t194;
create table t194 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t194"), "t194");
drop table if exists t193;
create table t193 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t193"), "t193");
drop table if exists t192;
create table t192 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t192"), "t192");
drop table if exists t191;
create table t191 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t191"), "t191");
drop table if exists t190;
create table t190 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t190"), "t190");
drop table if exists t189;
create table t189 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t189"), "t189");
drop table if exists t188;
create table t188 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t188"), "t188");
drop table if exists t187;
create table t187 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t187"), "t187");
drop table if exists t186;
create table t186 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t186"), "t186");
drop table if exists t185;
create table t185 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t185"), "t185");
drop table if exists t184;
create table t184 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t184"), "t184");
drop table if exists t183;
create table t183 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t183"), "t183");
drop table if exists t182;
create table t182 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t182"), "t182");
drop table if exists t181;
create table t181 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t181"), "t181");
drop table if exists t180;
create table t180 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t180"), "t180");
drop table if exists t179;
create table t179 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t179"), "t179");
drop table if exists t178;
create table t178 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t178"), "t178");
drop table if exists t177;
create table t177 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t177"), "t177");
drop table if exists t176;
create table t176 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t176"), "t176");
drop table if exists t175;
create table t175 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t175"), "t175");
drop table if exists t174;
create table t174 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t174"), "t174");
drop table if exists t173;
create table t173 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t173"), "t173");
drop table if exists t172;
create table t172 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t172"), "t172");
drop table if exists t171;
create table t171 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t171"), "t171");
drop table if exists t170;
create table t170 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t170"), "t170");
drop table if exists t169;
create table t169 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t169"), "t169");
drop table if exists t168;
create table t168 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t168"), "t168");
drop table if exists t167;
create table t167 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t167"), "t167");
drop table if exists t166;
create table t166 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t166"), "t166");
drop table if exists t165;
create table t165 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t165"), "t165");
drop table if exists t164;
create table t164 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t164"), "t164");
drop table if exists t163;
create table t163 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t163"), "t163");
drop table if exists t162;
create table t162 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t162"), "t162");
drop table if exists t161;
create table t161 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t161"), "t161");
drop table if exists t160;
create table t160 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t160"), "t160");
drop table if exists t159;
create table t159 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t159"), "t159");
drop table if exists t158;
create table t158 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t158"), "t158");
drop table if exists t157;
create table t157 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t157"), "t157");
drop table if exists t156;
create table t156 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t156"), "t156");
drop table if exists t155;
create table t155 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t155"), "t155");
drop table if exists t154;
create table t154 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t154"), "t154");
drop table if exists t153;
create table t153 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t153"), "t153");
drop table if exists t152;
create table t152 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t152"), "t152");
drop table if exists t151;
create table t151 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t151"), "t151");
drop table if exists t150;
create table t150 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t150"), "t150");
drop table if exists t149;
create table t149 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t149"), "t149");
drop table if exists t148;
create table t148 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t148"), "t148");
drop table if exists t147;
create table t147 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t147"), "t147");
drop table if exists t146;
create table t146 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t146"), "t146");
drop table if exists t145;
create table t145 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t145"), "t145");
drop table if exists t144;
create table t144 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t144"), "t144");
drop table if exists t143;
create table t143 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t143"), "t143");
drop table if exists t142;
create table t142 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t142"), "t142");
drop table if exists t141;
create table t141 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t141"), "t141");
drop table if exists t140;
create table t140 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t140"), "t140");
drop table if exists t139;
create table t139 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t139"), "t139");
drop table if exists t138;
create table t138 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t138"), "t138");
drop table if exists t137;
create table t137 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t137"), "t137");
drop table if exists t136;
create table t136 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t136"), "t136");
drop table if exists t135;
create table t135 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t135"), "t135");
drop table if exists t134;
create table t134 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t134"), "t134");
drop table if exists t133;
create table t133 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t133"), "t133");
drop table if exists t132;
create table t132 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t132"), "t132");
drop table if exists t131;
create table t131 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t131"), "t131");
drop table if exists t130;
create table t130 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t130"), "t130");
drop table if exists t129;
create table t129 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t129"), "t129");
drop table if exists t128;
create table t128 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t128"), "t128");
drop table if exists t127;
create table t127 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t127"), "t127");
drop table if exists t126;
create table t126 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t126"), "t126");
drop table if exists t125;
create table t125 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t125"), "t125");
drop table if exists t124;
create table t124 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t124"), "t124");
drop table if exists t123;
create table t123 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t123"), "t123");
drop table if exists t122;
create table t122 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t122"), "t122");
drop table if exists t121;
create table t121 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t121"), "t121");
drop table if exists t120;
create table t120 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t120"), "t120");
drop table if exists t119;
create table t119 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t119"), "t119");
drop table if exists t118;
create table t118 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t118"), "t118");
drop table if exists t117;
create table t117 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t117"), "t117");
drop table if exists t116;
create table t116 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t116"), "t116");
drop table if exists t115;
create table t115 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t115"), "t115");
drop table if exists t114;
create table t114 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t114"), "t114");
drop table if exists t113;
create table t113 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t113"), "t113");
drop table if exists t112;
create table t112 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t112"), "t112");
drop table if exists t111;
create table t111 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t111"), "t111");
drop table if exists t110;
create table t110 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t110"), "t110");
drop table if exists t109;
create table t109 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t109"), "t109");
drop table if exists t108;
create table t108 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t108"), "t108");
drop table if exists t107;
create table t107 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t107"), "t107");
drop table if exists t106;
create table t106 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t106"), "t106");
drop table if exists t105;
create table t105 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t105"), "t105");
drop table if exists t104;
create table t104 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t104"), "t104");
drop table if exists t103;
create table t103 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t103"), "t103");
drop table if exists t102;
create table t102 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t102"), "t102");
drop table if exists t101;
create table t101 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t101"), "t101");
drop table if exists t100;
create table t100 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t100"), "t100");
drop table if exists t99;
create table t99 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t99"), "t99");
drop table if exists t98;
create table t98 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t98"), "t98");
drop table if exists t97;
create table t97 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t97"), "t97");
drop table if exists t96;
create table t96 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t96"), "t96");
drop table if exists t95;
create table t95 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t95"), "t95");
drop table if exists t94;
create table t94 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t94"), "t94");
drop table if exists t93;
create table t93 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t93"), "t93");
drop table if exists t92;
create table t92 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t92"), "t92");
drop table if exists t91;
create table t91 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t91"), "t91");
drop table if exists t90;
create table t90 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t90"), "t90");
drop table if exists t89;
create table t89 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t89"), "t89");
drop table if exists t88;
create table t88 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t88"), "t88");
drop table if exists t87;
create table t87 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t87"), "t87");
drop table if exists t86;
create table t86 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t86"), "t86");
drop table if exists t85;
create table t85 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t85"), "t85");
drop table if exists t84;
create table t84 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t84"), "t84");
drop table if exists t83;
create table t83 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t83"), "t83");
drop table if exists t82;
create table t82 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t82"), "t82");
drop table if exists t81;
create table t81 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t81"), "t81");
drop table if exists t80;
create table t80 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t80"), "t80");
drop table if exists t79;
create table t79 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t79"), "t79");
drop table if exists t78;
create table t78 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t78"), "t78");
drop table if exists t77;
create table t77 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t77"), "t77");
drop table if exists t76;
create table t76 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t76"), "t76");
drop table if exists t75;
create table t75 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t75"), "t75");
drop table if exists t74;
create table t74 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t74"), "t74");
drop table if exists t73;
create table t73 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t73"), "t73");
drop table if exists t72;
create table t72 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t72"), "t72");
drop table if exists t71;
create table t71 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t71"), "t71");
drop table if exists t70;
create table t70 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t70"), "t70");
drop table if exists t69;
create table t69 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t69"), "t69");
drop table if exists t68;
create table t68 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t68"), "t68");
drop table if exists t67;
create table t67 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t67"), "t67");
drop table if exists t66;
create table t66 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t66"), "t66");
drop table if exists t65;
create table t65 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t65"), "t65");
drop table if exists t64;
create table t64 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t64"), "t64");
drop table if exists t63;
create table t63 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t63"), "t63");
drop table if exists t62;
create table t62 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t62"), "t62");
drop table if exists t61;
create table t61 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t61"), "t61");
drop table if exists t60;
create table t60 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t60"), "t60");
drop table if exists t59;
create table t59 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t59"), "t59");
drop table if exists t58;
create table t58 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t58"), "t58");
drop table if exists t57;
create table t57 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t57"), "t57");
drop table if exists t56;
create table t56 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t56"), "t56");
drop table if exists t55;
create table t55 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t55"), "t55");
drop table if exists t54;
create table t54 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t54"), "t54");
drop table if exists t53;
create table t53 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t53"), "t53");
drop table if exists t52;
create table t52 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t52"), "t52");
drop table if exists t51;
create table t51 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t51"), "t51");
drop table if exists t50;
create table t50 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t50"), "t50");
drop table if exists t49;
create table t49 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t49"), "t49");
drop table if exists t48;
create table t48 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t48"), "t48");
drop table if exists t47;
create table t47 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t47"), "t47");
drop table if exists t46;
create table t46 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t46"), "t46");
drop table if exists t45;
create table t45 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t45"), "t45");
drop table if exists t44;
create table t44 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t44"), "t44");
drop table if exists t43;
create table t43 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t43"), "t43");
drop table if exists t42;
create table t42 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t42"), "t42");
drop table if exists t41;
create table t41 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t41"), "t41");
drop table if exists t40;
create table t40 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t40"), "t40");
drop table if exists t39;
create table t39 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t39"), "t39");
drop table if exists t38;
create table t38 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t38"), "t38");
drop table if exists t37;
create table t37 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t37"), "t37");
drop table if exists t36;
create table t36 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t36"), "t36");
drop table if exists t35;
create table t35 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t35"), "t35");
drop table if exists t34;
create table t34 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t34"), "t34");
drop table if exists t33;
create table t33 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t33"), "t33");
drop table if exists t32;
create table t32 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t32"), "t32");
drop table if exists t31;
create table t31 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t31"), "t31");
drop table if exists t30;
create table t30 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t30"), "t30");
drop table if exists t29;
create table t29 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t29"), "t29");
drop table if exists t28;
create table t28 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t28"), "t28");
drop table if exists t27;
create table t27 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t27"), "t27");
drop table if exists t26;
create table t26 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t26"), "t26");
drop table if exists t25;
create table t25 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t25"), "t25");
drop table if exists t24;
create table t24 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t24"), "t24");
drop table if exists t23;
create table t23 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t23"), "t23");
drop table if exists t22;
create table t22 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t22"), "t22");
drop table if exists t21;
create table t21 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t21"), "t21");
drop table if exists t20;
create table t20 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t20"), "t20");
drop table if exists t19;
create table t19 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t19"), "t19");
drop table if exists t18;
create table t18 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t18"), "t18");
drop table if exists t17;
create table t17 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t17"), "t17");
drop table if exists t16;
create table t16 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t16"), "t16");
drop table if exists t15;
create table t15 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t15"), "t15");
drop table if exists t14;
create table t14 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t14"), "t14");
drop table if exists t13;
create table t13 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t13"), "t13");
drop table if exists t12;
create table t12 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t12"), "t12");
drop table if exists t11;
create table t11 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t11"), "t11");
drop table if exists t10;
create table t10 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t10"), "t10");
drop table if exists t9;
create table t9 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t9"), "t9");
drop table if exists t8;
create table t8 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t8"), "t8");
drop table if exists t7;
create table t7 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t7"), "t7");
drop table if exists t6;
create table t6 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t6"), "t6");
drop table if exists t5;
create table t5 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t5"), "t5");
drop table if exists t4;
create table t4 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t4"), "t4");
drop table if exists t3;
create table t3 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t3"), "t3");
drop table if exists t2;
create table t2 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t2"), "t2");
drop table if exists t1;
create table t1 (a int) engine=myisam;
set @a=ifnull(concat(@a, ", ", "t1"), "t1");
set @a=concat("create table t_parent (a int) union(", @a, ") insert_method=first engine=mrg_myisam");
prepare stmt from @a;
execute stmt;
prepare stmt from "select * from t_parent";
execute stmt;
execute stmt;
execute stmt;
deallocate prepare stmt;
drop table t400;
drop table t399;
drop table t398;
drop table t397;
drop table t396;
drop table t395;
drop table t394;
drop table t393;
drop table t392;
drop table t391;
drop table t390;
drop table t389;
drop table t388;
drop table t387;
drop table t386;
drop table t385;
drop table t384;
drop table t383;
drop table t382;
drop table t381;
drop table t380;
drop table t379;
drop table t378;
drop table t377;
drop table t376;
drop table t375;
drop table t374;
drop table t373;
drop table t372;
drop table t371;
drop table t370;
drop table t369;
drop table t368;
drop table t367;
drop table t366;
drop table t365;
drop table t364;
drop table t363;
drop table t362;
drop table t361;
drop table t360;
drop table t359;
drop table t358;
drop table t357;
drop table t356;
drop table t355;
drop table t354;
drop table t353;
drop table t352;
drop table t351;
drop table t350;
drop table t349;
drop table t348;
drop table t347;
drop table t346;
drop table t345;
drop table t344;
drop table t343;
drop table t342;
drop table t341;
drop table t340;
drop table t339;
drop table t338;
drop table t337;
drop table t336;
drop table t335;
drop table t334;
drop table t333;
drop table t332;
drop table t331;
drop table t330;
drop table t329;
drop table t328;
drop table t327;
drop table t326;
drop table t325;
drop table t324;
drop table t323;
drop table t322;
drop table t321;
drop table t320;
drop table t319;
drop table t318;
drop table t317;
drop table t316;
drop table t315;
drop table t314;
drop table t313;
drop table t312;
drop table t311;
drop table t310;
drop table t309;
drop table t308;
drop table t307;
drop table t306;
drop table t305;
drop table t304;
drop table t303;
drop table t302;
drop table t301;
drop table t300;
drop table t299;
drop table t298;
drop table t297;
drop table t296;
drop table t295;
drop table t294;
drop table t293;
drop table t292;
drop table t291;
drop table t290;
drop table t289;
drop table t288;
drop table t287;
drop table t286;
drop table t285;
drop table t284;
drop table t283;
drop table t282;
drop table t281;
drop table t280;
drop table t279;
drop table t278;
drop table t277;
drop table t276;
drop table t275;
drop table t274;
drop table t273;
drop table t272;
drop table t271;
drop table t270;
drop table t269;
drop table t268;
drop table t267;
drop table t266;
drop table t265;
drop table t264;
drop table t263;
drop table t262;
drop table t261;
drop table t260;
drop table t259;
drop table t258;
drop table t257;
drop table t256;
drop table t255;
drop table t254;
drop table t253;
drop table t252;
drop table t251;
drop table t250;
drop table t249;
drop table t248;
drop table t247;
drop table t246;
drop table t245;
drop table t244;
drop table t243;
drop table t242;
drop table t241;
drop table t240;
drop table t239;
drop table t238;
drop table t237;
drop table t236;
drop table t235;
drop table t234;
drop table t233;
drop table t232;
drop table t231;
drop table t230;
drop table t229;
drop table t228;
drop table t227;
drop table t226;
drop table t225;
drop table t224;
drop table t223;
drop table t222;
drop table t221;
drop table t220;
drop table t219;
drop table t218;
drop table t217;
drop table t216;
drop table t215;
drop table t214;
drop table t213;
drop table t212;
drop table t211;
drop table t210;
drop table t209;
drop table t208;
drop table t207;
drop table t206;
drop table t205;
drop table t204;
drop table t203;
drop table t202;
drop table t201;
drop table t200;
drop table t199;
drop table t198;
drop table t197;
drop table t196;
drop table t195;
drop table t194;
drop table t193;
drop table t192;
drop table t191;
drop table t190;
drop table t189;
drop table t188;
drop table t187;
drop table t186;
drop table t185;
drop table t184;
drop table t183;
drop table t182;
drop table t181;
drop table t180;
drop table t179;
drop table t178;
drop table t177;
drop table t176;
drop table t175;
drop table t174;
drop table t173;
drop table t172;
drop table t171;
drop table t170;
drop table t169;
drop table t168;
drop table t167;
drop table t166;
drop table t165;
drop table t164;
drop table t163;
drop table t162;
drop table t161;
drop table t160;
drop table t159;
drop table t158;
drop table t157;
drop table t156;
drop table t155;
drop table t154;
drop table t153;
drop table t152;
drop table t151;
drop table t150;
drop table t149;
drop table t148;
drop table t147;
drop table t146;
drop table t145;
drop table t144;
drop table t143;
drop table t142;
drop table t141;
drop table t140;
drop table t139;
drop table t138;
drop table t137;
drop table t136;
drop table t135;
drop table t134;
drop table t133;
drop table t132;
drop table t131;
drop table t130;
drop table t129;
drop table t128;
drop table t127;
drop table t126;
drop table t125;
drop table t124;
drop table t123;
drop table t122;
drop table t121;
drop table t120;
drop table t119;
drop table t118;
drop table t117;
drop table t116;
drop table t115;
drop table t114;
drop table t113;
drop table t112;
drop table t111;
drop table t110;
drop table t109;
drop table t108;
drop table t107;
drop table t106;
drop table t105;
drop table t104;
drop table t103;
drop table t102;
drop table t101;
drop table t100;
drop table t99;
drop table t98;
drop table t97;
drop table t96;
drop table t95;
drop table t94;
drop table t93;
drop table t92;
drop table t91;
drop table t90;
drop table t89;
drop table t88;
drop table t87;
drop table t86;
drop table t85;
drop table t84;
drop table t83;
drop table t82;
drop table t81;
drop table t80;
drop table t79;
drop table t78;
drop table t77;
drop table t76;
drop table t75;
drop table t74;
drop table t73;
drop table t72;
drop table t71;
drop table t70;
drop table t69;
drop table t68;
drop table t67;
drop table t66;
drop table t65;
drop table t64;
drop table t63;
drop table t62;
drop table t61;
drop table t60;
drop table t59;
drop table t58;
drop table t57;
drop table t56;
drop table t55;
drop table t54;
drop table t53;
drop table t52;
drop table t51;
drop table t50;
drop table t49;
drop table t48;
drop table t47;
drop table t46;
drop table t45;
drop table t44;
drop table t43;
drop table t42;
drop table t41;
drop table t40;
drop table t39;
drop table t38;
drop table t37;
drop table t36;
drop table t35;
drop table t34;
drop table t33;
drop table t32;
drop table t31;
drop table t30;
drop table t29;
drop table t28;
drop table t27;
drop table t26;
drop table t25;
drop table t24;
drop table t23;
drop table t22;
drop table t21;
drop table t20;
drop table t19;
drop table t18;
drop table t17;
drop table t16;
drop table t15;
drop table t14;
drop table t13;
drop table t12;
drop table t11;
drop table t10;
drop table t9;
drop table t8;
drop table t7;
drop table t6;
drop table t5;
drop table t4;
drop table t3;
drop table t2;
drop table t1;
drop table t_parent;
set @@global.table_definition_cache=@save_table_definition_cache;
set @@global.table_open_cache=@save_table_open_cache;
DROP DATABASE IF EXISTS mysql_test1;
CREATE DATABASE mysql_test1;
CREATE TABLE t1 (c1 INT) DATA DIRECTORY='/data/yu/Squirrel_DBMS_Fuzzing/MySQL_source/mysql-server-inst/bld/mysql-test/var/tmp'   INDEX DIRECTORY='/data/yu/Squirrel_DBMS_Fuzzing/MySQL_source/mysql-server-inst/bld/mysql-test/var/tmp';
CREATE TABLE mysql_test1.t2 (c1 INT) DATA DIRECTORY='/data/yu/Squirrel_DBMS_Fuzzing/MySQL_source/mysql-server-inst/bld/mysql-test/var/tmp'   INDEX DIRECTORY='/data/yu/Squirrel_DBMS_Fuzzing/MySQL_source/mysql-server-inst/bld/mysql-test/var/tmp';
CREATE TABLE m1 (c1 INT) ENGINE=MRG_MYISAM UNION=(t1,mysql_test1.t2) INSERT_METHOD=LAST;
INSERT INTO t1 VALUES (1);
INSERT INTO mysql_test1.t2 VALUES (2);
SELECT * FROM m1;
DROP TABLE t1, mysql_test1.t2, m1;
DROP DATABASE mysql_test1;
CREATE TABLE t1 (c1 INT);
CREATE TABLE t2 (c1 INT);
INSERT INTO t1 (c1) VALUES (1);
CREATE TABLE tm1 (c1 INT) ENGINE=MRG_MYISAM UNION=(t1,t2) INSERT_METHOD=FIRST;
CREATE TABLE t3 (c1 INT);
INSERT INTO t3 (c1) VALUES (1);
CREATE FUNCTION f1() RETURNS INT RETURN (SELECT MAX(c1) FROM t3);
CREATE VIEW v1 AS SELECT foo.c1 c1, f1() c2, bar.c1 c3, f1() c4 FROM tm1 foo, tm1 bar, t3;
SELECT * FROM v1;
DROP FUNCTION f1;
DROP VIEW v1;
DROP TABLE tm1, t1, t2, t3;
CREATE TEMPORARY TABLE t1 (c1 INT) ENGINE=MyISAM;
CREATE TEMPORARY TABLE t2 (c1 INT) ENGINE=MyISAM;
CREATE TEMPORARY TABLE tm1 (c1 INT) ENGINE=MRG_MYISAM UNION=(t1,t2) INSERT_METHOD=FIRST;
CREATE FUNCTION f1() RETURNS INT RETURN (SELECT MAX(c1) FROM tm1);
INSERT INTO tm1 (c1) VALUES (1);
SELECT f1() FROM (SELECT 1) AS c1;
DROP FUNCTION f1;
DROP TABLE tm1, t1, t2;
CREATE FUNCTION f1() RETURNS INT BEGIN CREATE TEMPORARY TABLE t1 (c1 INT) ENGINE=MyISAM; CREATE TEMPORARY TABLE t2 (c1 INT) ENGINE=MyISAM; CREATE TEMPORARY TABLE tm1 (c1 INT) ENGINE=MRG_MYISAM UNION=(t1,t2); INSERT INTO t1 (c1) VALUES (1); RETURN (SELECT MAX(c1) FROM tm1); END;
SELECT f1() FROM (SELECT 1 UNION SELECT 1) c1;
DROP FUNCTION f1;
DROP TABLE tm1, t1, t2;
CREATE TEMPORARY TABLE t1 (c1 INT);
INSERT INTO t1 (c1) VALUES (1);
CREATE TEMPORARY TABLE tm1 (c1 INT) ENGINE=MRG_MYISAM UNION=(t1);
CREATE FUNCTION f1() RETURNS INT BEGIN CREATE TEMPORARY TABLE t2 (c1 INT); ALTER TEMPORARY TABLE tm1 UNION=(t1,t2); INSERT INTO t2 (c1) VALUES (2); RETURN (SELECT MAX(c1) FROM tm1); END;
DROP TABLE tm1, t1;
CREATE TABLE t1 (c1 INT) ENGINE=MyISAM;
CREATE TABLE tm1 (c1 INT) ENGINE=MRG_MYISAM UNION=(t1) INSERT_METHOD=LAST;
INSERT INTO tm1 VALUES (1);
SELECT * FROM tm1;
DROP TABLE tm1, t1;
CREATE FUNCTION f1() RETURNS INT BEGIN INSERT INTO tm1 VALUES (1); RETURN (SELECT MAX(c1) FROM tm1); END;
CREATE TABLE t1 (c1 INT) ENGINE=MyISAM;
CREATE TABLE tm1 (c1 INT) ENGINE=MRG_MYISAM UNION=(t1) INSERT_METHOD=LAST;
SELECT f1();
DROP FUNCTION f1;
DROP TABLE tm1, t1;
CREATE TABLE t1 (c1 INT) ENGINE=MyISAM;
CREATE TABLE tm1 (c1 INT) ENGINE=MRG_MYISAM UNION=(t1) INSERT_METHOD=LAST;
LOCK TABLE tm1 WRITE;
INSERT INTO tm1 VALUES (1);
SELECT * FROM tm1;
UNLOCK TABLES;
DROP TABLE tm1, t1;
CREATE FUNCTION f1() RETURNS INT BEGIN INSERT INTO tm1 VALUES (1); RETURN (SELECT MAX(c1) FROM tm1); END;
CREATE TABLE t1 (c1 INT) ENGINE=MyISAM;
CREATE TABLE tm1 (c1 INT) ENGINE=MRG_MYISAM UNION=(t1) INSERT_METHOD=LAST;
LOCK TABLE tm1 WRITE;
SELECT f1();
UNLOCK TABLES;
DROP FUNCTION f1;
DROP TABLE tm1, t1;
CREATE TABLE t1 (c1 INT) ENGINE=MyISAM;
CREATE TABLE t2 (c1 INT) ENGINE=MyISAM;
CREATE TABLE tm1 (c1 INT) ENGINE=MRG_MYISAM UNION=(t1) INSERT_METHOD=LAST;
CREATE TRIGGER t2_ai AFTER INSERT ON t2 FOR EACH ROW INSERT INTO tm1 VALUES(11);
LOCK TABLE t2 WRITE;
INSERT INTO t2 VALUES (2);
SELECT * FROM tm1;
SELECT * FROM t2;
UNLOCK TABLES;
DROP TRIGGER t2_ai;
DROP TABLE tm1, t1, t2;
CREATE TEMPORARY TABLE t1 (c1 INT) ENGINE=MyISAM;
CREATE TEMPORARY TABLE tm1 (c1 INT) ENGINE=MRG_MYISAM UNION=(t1) INSERT_METHOD=LAST;
INSERT INTO tm1 VALUES (1);
SELECT * FROM tm1;
DROP TABLE tm1, t1;
CREATE FUNCTION f1() RETURNS INT BEGIN INSERT INTO tm1 VALUES (1); RETURN (SELECT MAX(c1) FROM tm1); END;
CREATE TEMPORARY TABLE t1 (c1 INT) ENGINE=MyISAM;
CREATE TEMPORARY TABLE tm1 (c1 INT) ENGINE=MRG_MYISAM UNION=(t1) INSERT_METHOD=LAST;
SELECT f1();
DROP FUNCTION f1;
DROP TABLE tm1, t1;
CREATE TEMPORARY TABLE t1 (c1 INT) ENGINE=MyISAM;
CREATE TEMPORARY TABLE tm1 (c1 INT) ENGINE=MRG_MYISAM UNION=(t1) INSERT_METHOD=LAST;
CREATE TABLE t9 (c1 INT) ENGINE=MyISAM;
LOCK TABLE t9 WRITE;
INSERT INTO tm1 VALUES (1);
SELECT * FROM tm1;
UNLOCK TABLES;
DROP TABLE tm1, t1, t9;
CREATE FUNCTION f1() RETURNS INT BEGIN INSERT INTO tm1 VALUES (1); RETURN (SELECT MAX(c1) FROM tm1); END;
CREATE TEMPORARY TABLE t1 (c1 INT) ENGINE=MyISAM;
CREATE TEMPORARY TABLE tm1 (c1 INT) ENGINE=MRG_MYISAM UNION=(t1) INSERT_METHOD=LAST;
CREATE TABLE t9 (c1 INT) ENGINE=MyISAM;
LOCK TABLE t9 WRITE;
SELECT f1();
UNLOCK TABLES;
DROP FUNCTION f1;
DROP TABLE tm1, t1, t9;
CREATE TEMPORARY TABLE t1 (c1 INT) ENGINE=MyISAM;
CREATE TEMPORARY TABLE tm1 (c1 INT) ENGINE=MRG_MYISAM UNION=(t1) INSERT_METHOD=LAST;
CREATE TABLE t2 (c1 INT) ENGINE=MyISAM;
CREATE TRIGGER t2_ai AFTER INSERT ON t2 FOR EACH ROW INSERT INTO tm1 VALUES(11);
LOCK TABLE t2 WRITE;
INSERT INTO t2 VALUES (2);
SELECT * FROM tm1;
SELECT * FROM t2;
UNLOCK TABLES;
DROP TRIGGER t2_ai;
DROP TABLE tm1, t1, t2;
CREATE TABLE t1 (c1 INT) ENGINE=MyISAM;
CREATE TABLE tm1 (c1 INT) ENGINE=MRG_MYISAM UNION=(t1) INSERT_METHOD=LAST;
CREATE TRIGGER tm1_ai AFTER INSERT ON tm1 FOR EACH ROW INSERT INTO t1 VALUES(11);
LOCK TABLE tm1 WRITE, t1 WRITE;
INSERT INTO tm1 VALUES (1);
SELECT * FROM tm1;
UNLOCK TABLES;
LOCK TABLE t1 WRITE, tm1 WRITE;
INSERT INTO tm1 VALUES (1);
SELECT * FROM tm1;
UNLOCK TABLES;
DROP TRIGGER tm1_ai;
DROP TABLE tm1, t1;
CREATE TABLE t1 (c1 INT) ENGINE=MyISAM;
CREATE TABLE tm1 (c1 INT) ENGINE=MRG_MYISAM UNION=(t1) INSERT_METHOD=LAST;
CREATE TRIGGER tm1_ai AFTER INSERT ON tm1 FOR EACH ROW SELECT max(c1) FROM t1 INTO @var;
LOCK TABLE tm1 WRITE, t1 WRITE;
INSERT INTO tm1 VALUES (1);
SELECT * FROM tm1;
UNLOCK TABLES;
LOCK TABLE t1 WRITE, tm1 WRITE;
INSERT INTO tm1 VALUES (1);
SELECT * FROM tm1;
UNLOCK TABLES;
DROP TRIGGER tm1_ai;
DROP TABLE tm1, t1;
CREATE TABLE t1 (c1 INT) ENGINE=MyISAM;
CREATE TABLE t2 (c1 INT) ENGINE=MyISAM;
CREATE TABLE t3 (c1 INT) ENGINE=MyISAM;
CREATE TABLE t4 (c1 INT) ENGINE=MyISAM;
CREATE TABLE t5 (c1 INT) ENGINE=MyISAM;
CREATE TABLE tm1 (c1 INT) ENGINE=MRG_MYISAM UNION=(t1,t2,t3,t4,t5) INSERT_METHOD=LAST;
CREATE TRIGGER t2_au AFTER UPDATE ON t2 FOR EACH ROW SELECT MAX(c1) FROM t1 INTO @var;
CREATE FUNCTION f1() RETURNS INT RETURN (SELECT MAX(c1) FROM t4);
LOCK TABLE tm1 WRITE, t1 WRITE, t2 WRITE, t3 WRITE, t4 WRITE, t5 WRITE;
INSERT INTO t1 VALUES(1);
INSERT INTO t2 VALUES(2);
INSERT INTO t3 VALUES(3);
INSERT INTO t4 VALUES(4);
INSERT INTO t5 VALUES(5);
UPDATE t2, tm1 SET t2.c1=f1();
FLUSH TABLES;
FLUSH TABLES;
UNLOCK TABLES;
reap;
SELECT * FROM tm1;
DROP TRIGGER t2_au;
DROP FUNCTION f1;
DROP TABLE tm1, t1, t2, t3, t4, t5;
CREATE TEMPORARY TABLE t1 (c1 INT);
CREATE TEMPORARY TABLE t2 (c1 INT);
ALTER TABLE t1 ENGINE=MERGE UNION(t_not_exists, t2);
OPTIMIZE TABLE t1;
DROP TABLE t1, t2;
DROP TABLE IF EXISTS t1, t2, t3, t4, m1, m2;
CREATE TABLE t1 (c1 INT, c2 INT) ENGINE=MyISAM;
CREATE TABLE t2 (c1 INT, c2 INT) ENGINE=MyISAM;
CREATE TEMPORARY TABLE m1 (c1 INT, c2 INT) ENGINE=MRG_MyISAM UNION=(t1,t2) INSERT_METHOD=LAST;
SHOW CREATE TABLE t1;
SHOW CREATE TABLE m1;
SELECT * FROM m1;
INSERT INTO t1 VALUES (111, 121);
INSERT INTO m1 VALUES (211, 221);
SELECT * FROM m1;
SELECT * FROM t1;
SELECT * FROM t2;
ALTER TABLE m1 RENAME m2;
SHOW CREATE TABLE m2;
SELECT * FROM m2;
CREATE TEMPORARY TABLE m1 (c1 INT, c2 INT) ENGINE=MRG_MyISAM UNION=(t1,t2) INSERT_METHOD=LAST;
ALTER TABLE m2 RENAME m1;
DROP TABLE m1;
ALTER TABLE m2 RENAME m1;
SHOW CREATE TABLE m1;
SELECT * FROM m1;
ALTER TABLE m1 ADD COLUMN c3 INT;
INSERT INTO m1 VALUES (212, 222, 232);
SELECT * FROM m1;
ALTER TABLE t1 ADD COLUMN c3 INT;
ALTER TABLE t2 ADD COLUMN c3 INT;
INSERT INTO m1 VALUES (212, 222, 232);
SELECT * FROM m1;
ALTER TABLE m1 DROP COLUMN c3;
INSERT INTO m1 VALUES (213, 223);
SELECT * FROM m1;
ALTER TABLE t1 DROP COLUMN c3;
ALTER TABLE t2 DROP COLUMN c3;
INSERT INTO m1 VALUES (213, 223);
SELECT * FROM m1;
CREATE TABLE t3 (c1 INT, c2 INT) ENGINE=MyISAM;
ALTER TABLE m1 UNION=(t1,t2,t3);
INSERT INTO m1 VALUES (311, 321);
SELECT * FROM m1;
SELECT * FROM t1;
SELECT * FROM t2;
SELECT * FROM t3;
CREATE TEMPORARY TABLE t4 (c1 INT, c2 INT) ENGINE=MyISAM;
ALTER TABLE m1 UNION=(t1,t2,t3,t4);
INSERT INTO m1 VALUES (411, 421);
SELECT * FROM m1;
SELECT * FROM t1;
SELECT * FROM t2;
SELECT * FROM t3;
SELECT * FROM t4;
ALTER TABLE m1 ENGINE=MyISAM;
SHOW CREATE TABLE m1;
INSERT INTO m1 VALUES (511, 521);
SELECT * FROM m1;
ALTER TABLE m1 ENGINE=MRG_MyISAM UNION=(t1,t2) INSERT_METHOD=LAST;
SELECT * FROM m1;
SELECT * FROM t1;
SELECT * FROM t2;
CREATE TEMPORARY TABLE t1 (c1 INT, c2 INT) ENGINE=MyISAM;
INSERT INTO t1 VALUES (611, 621);
SELECT * FROM m1;
DROP TABLE t1;
SELECT * FROM m1;
SHOW CREATE TABLE m1;
CREATE TABLE m2 SELECT * FROM m1;
SHOW CREATE TABLE m2;
SELECT * FROM m2;
DROP TABLE m2;
CREATE TEMPORARY TABLE m2 ENGINE=MyISAM SELECT * FROM m1;
SHOW CREATE TABLE m2;
SELECT * FROM m2;
DROP TABLE m2;
CREATE TABLE m2 (c1 INT, c2 INT) ENGINE=MRG_MyISAM UNION=(t3,t4) INSERT_METHOD=LAST;
SELECT * FROM m2;
DROP TABLE m2;
CREATE TABLE m2 (c1 INT, c2 INT) ENGINE=MRG_MyISAM UNION=(t3,t4) INSERT_METHOD=LAST SELECT * FROM m1;
CREATE TEMPORARY TABLE m2 (c1 INT, c2 INT) ENGINE=MRG_MyISAM UNION=(t3,t4) INSERT_METHOD=LAST SELECT * FROM m1;
CREATE TABLE m2 LIKE m1;
SHOW CREATE TABLE m2;
SELECT * FROM m2;
INSERT INTO m2 SELECT * FROM m1;
SELECT * FROM m2;
DROP TABLE m2;
CREATE TEMPORARY TABLE m2 LIKE m1;
SHOW CREATE TABLE m2;
SELECT * FROM m2;
INSERT INTO m2 SELECT * FROM m1;
SELECT * FROM m2;
DROP TABLE m2;
CREATE TEMPORARY TABLE m2 (c1 INT, c2 INT) ENGINE=MRG_MyISAM UNION=(t3,t4) INSERT_METHOD=LAST;
INSERT INTO m2 SELECT * FROM m1;
SELECT * FROM m2;
LOCK TABLE m1 WRITE, m2 WRITE;
SELECT * FROM m1,m2 WHERE m1.c1=m2.c1;
UNLOCK TABLES;
DROP TABLE t1, t2, t3, t4, m1, m2;
CREATE TABLE t1 (c1 INT, c2 INT) ENGINE=MyISAM;
CREATE TABLE t2 (c1 INT, c2 INT) ENGINE=MyISAM;
CREATE TEMPORARY TABLE m1 (c1 INT, c2 INT) ENGINE=MRG_MyISAM UNION=(t1,t2) INSERT_METHOD=LAST;
SHOW CREATE TABLE t1;
SHOW CREATE TABLE m1;
SELECT * FROM m1;
INSERT INTO t1 VALUES (111, 121);
INSERT INTO m1 VALUES (211, 221);
SELECT * FROM m1;
SELECT * FROM t1;
SELECT * FROM t2;
LOCK TABLE m1 WRITE, t1 WRITE, t2 WRITE;
ALTER TABLE m1 RENAME m2;
SHOW CREATE TABLE m2;
SELECT * FROM m2;
CREATE TEMPORARY TABLE m1 (c1 INT, c2 INT) ENGINE=MRG_MyISAM UNION=(t1,t2) INSERT_METHOD=LAST;
ALTER TABLE m2 RENAME m1;
DROP TABLE m1;
ALTER TABLE m2 RENAME m1;
SHOW CREATE TABLE m1;
SELECT * FROM m1;
ALTER TABLE m1 ADD COLUMN c3 INT;
INSERT INTO m1 VALUES (212, 222, 232);
SELECT * FROM m1;
ALTER TABLE t1 ADD COLUMN c3 INT;
ALTER TABLE t2 ADD COLUMN c3 INT;
INSERT INTO m1 VALUES (212, 222, 232);
SELECT * FROM m1;
ALTER TABLE m1 DROP COLUMN c3;
INSERT INTO m1 VALUES (213, 223);
SELECT * FROM m1;
ALTER TABLE t1 DROP COLUMN c3;
ALTER TABLE t2 DROP COLUMN c3;
INSERT INTO m1 VALUES (213, 223);
SELECT * FROM m1;
UNLOCK TABLES;
CREATE TABLE t3 (c1 INT, c2 INT) ENGINE=MyISAM;
ALTER TABLE m1 UNION=(t1,t2,t3);
LOCK TABLE m1 WRITE;
INSERT INTO m1 VALUES (311, 321);
SELECT * FROM m1;
SELECT * FROM t1;
SELECT * FROM t2;
SELECT * FROM t3;
CREATE TEMPORARY TABLE t4 (c1 INT, c2 INT) ENGINE=MyISAM;
ALTER TABLE m1 UNION=(t1,t2,t3,t4);
INSERT INTO m1 VALUES (411, 421);
SELECT * FROM m1;
SELECT * FROM t1;
SELECT * FROM t2;
SELECT * FROM t3;
SELECT * FROM t4;
ALTER TABLE m1 ENGINE=MyISAM;
SHOW CREATE TABLE m1;
INSERT INTO m1 VALUES (511, 521);
SELECT * FROM m1;
ALTER TABLE m1 ENGINE=MRG_MyISAM UNION=(t1,t2) INSERT_METHOD=LAST;
SELECT * FROM m1;
SELECT * FROM t1;
SELECT * FROM t2;
CREATE TEMPORARY TABLE t1 (c1 INT, c2 INT) ENGINE=MyISAM;
INSERT INTO t1 VALUES (611, 621);
SELECT * FROM m1;
DROP TABLE t1;
SELECT * FROM m1;
SHOW CREATE TABLE m1;
CREATE TABLE m2 SELECT * FROM m1;
CREATE TEMPORARY TABLE m2 ENGINE=MyISAM SELECT * FROM m1;
SHOW CREATE TABLE m2;
SELECT * FROM m2;
DROP TABLE m2;
CREATE TEMPORARY TABLE m2 (c1 INT, c2 INT) ENGINE=MRG_MyISAM UNION=(t3,t4) INSERT_METHOD=LAST;
SELECT * FROM m2;
LOCK TABLE m1 WRITE, m2 WRITE;
UNLOCK TABLES;
DROP TABLE m2;
LOCK TABLE m1 WRITE;
CREATE TABLE m2 (c1 INT, c2 INT) ENGINE=MRG_MyISAM UNION=(t3,t4) INSERT_METHOD=LAST SELECT * FROM m1;
CREATE TEMPORARY TABLE m2 (c1 INT, c2 INT) ENGINE=MRG_MyISAM UNION=(t3,t4) INSERT_METHOD=LAST SELECT * FROM m1;
CREATE TEMPORARY TABLE m2 LIKE m1;
SHOW CREATE TABLE m2;
LOCK TABLE m1 WRITE, m2 WRITE;
SHOW CREATE TABLE m2;
SELECT * FROM m2;
INSERT INTO m2 SELECT * FROM m1;
SELECT * FROM m2;
DROP TABLE m2;
CREATE TEMPORARY TABLE m2 (c1 INT, c2 INT) ENGINE=MRG_MyISAM UNION=(t3,t4) INSERT_METHOD=LAST;
LOCK TABLE m1 WRITE, m2 WRITE;
INSERT INTO m2 SELECT * FROM m1;
SELECT * FROM m2;
UNLOCK TABLES;
DROP TABLE t1, t2, t3, t4, m1, m2;
DROP TABLE IF EXISTS t1, t2, t3;
CREATE TABLE t1 (c1 int);
CREATE TABLE t2 (c1 int);
CREATE TABLE t3 (c1 int) ENGINE = MERGE UNION (t1,t2);
START TRANSACTION;
HANDLER t3 OPEN;
DROP TABLE t1, t2, t3;
CREATE TABLE t1 (c1 int);
CREATE TABLE t2 (c1 int);
CREATE TABLE t3 (c1 int) ENGINE = MERGE UNION (t1,t2);
DROP TABLE t2;
START TRANSACTION;
HANDLER t3 OPEN;
DROP TABLE t1, t3;
create table t1 (c1 int not null);
create table t2 (c1 int not null);
create table t3 (c1 int not null);
create function f1 () returns int return (select max(c1) from t3);
create table t4 (c1 int not null) engine=merge union=(t1,t2) insert_method=last ;
select * from t4 where c1 < f1();
prepare stmt from "select * from t4 where c1 < f1()";
execute stmt;
execute stmt;
execute stmt;
drop function f1;
execute stmt;
execute stmt;
drop table t4, t3, t2, t1;
DROP TABLE IF EXISTS m1, t1;
CREATE TABLE t1 (c1 INT);
CREATE TABLE m1 (c1 INT) ENGINE=MRG_MyISAM UNION=(t1);
LOCK TABLE m1 WRITE;
ALTER TABLE m1 ADD INDEX (c1);
UNLOCK TABLES;
DROP TABLE m1, t1;
CREATE TABLE t1 (c1 INT);
CREATE TABLE m1 (c1 INT) ENGINE=MRG_MyISAM UNION=(t1);
LOCK TABLE m1 WRITE;
ALTER TABLE t1 ADD INDEX (c1);
LOCK TABLE m1 WRITE, t1 WRITE;
ALTER TABLE t1 ADD INDEX (c1);
UNLOCK TABLES;
DROP TABLE m1, t1;
drop tables if exists t1, m1, m2;
create table t1 (i int) engine=myisam;
create table m1 (i int) engine=mrg_myisam union=(t1) insert_method=first;
create table m2 like m1;
show create table m1;
show create table m2;
drop tables m1, m2, t1;
drop table if exists t1, t2, t3, m1, m2;
create table t1 (a int);
create table t2 (a int);
create table t3 (b int);
create view v1 as select * from t3,t1;
create table m1 (a int) engine=merge union (t1, t2) insert_method=last;
create table m2 (a int) engine=merge union (t1, t2) insert_method=first;
create temporary table tmp (b int);
insert into tmp (b) values (1);
insert into t1 (a) values (1);
insert into t3 (b) values (1);
insert into m1 (a) values ((select max(a) from m1));
insert into m1 (a) values ((select max(a) from m2));
insert into m1 (a) values ((select max(a) from t1));
insert into m1 (a) values ((select max(a) from t2));
insert into m1 (a) values ((select max(a) from t3, m1));
insert into m1 (a) values ((select max(a) from t3, m2));
insert into m1 (a) values ((select max(a) from t3, t1));
insert into m1 (a) values ((select max(a) from t3, t2));
insert into m1 (a) values ((select max(a) from tmp, m1));
insert into m1 (a) values ((select max(a) from tmp, m2));
insert into m1 (a) values ((select max(a) from tmp, t1));
insert into m1 (a) values ((select max(a) from tmp, t2));
insert into m1 (a) values ((select max(a) from v1));
insert into m1 (a) values ((select max(a) from tmp, v1));
update m1 set a = ((select max(a) from m1));
update m1 set a = ((select max(a) from m2));
update m1 set a = ((select max(a) from t1));
update m1 set a = ((select max(a) from t2));
update m1 set a = ((select max(a) from t3, m1));
update m1 set a = ((select max(a) from t3, m2));
update m1 set a = ((select max(a) from t3, t1));
update m1 set a = ((select max(a) from t3, t2));
update m1 set a = ((select max(a) from tmp, m1));
update m1 set a = ((select max(a) from tmp, m2));
update m1 set a = ((select max(a) from tmp, t1));
update m1 set a = ((select max(a) from tmp, t2));
update m1 set a = ((select max(a) from v1));
update m1 set a = ((select max(a) from tmp, v1));
delete from m1 where a = (select max(a) from m1);
delete from m1 where a = (select max(a) from m2);
delete from m1 where a = (select max(a) from t1);
delete from m1 where a = (select max(a) from t2);
delete from m1 where a = (select max(a) from t3, m1);
delete from m1 where a = (select max(a) from t3, m2);
delete from m1 where a = (select max(a) from t3, t1);
delete from m1 where a = (select max(a) from t3, t2);
delete from m1 where a = (select max(a) from tmp, m1);
delete from m1 where a = (select max(a) from tmp, m2);
delete from m1 where a = (select max(a) from tmp, t1);
delete from m1 where a = (select max(a) from tmp, t2);
delete from m1 where a = (select max(a) from v1);
delete from m1 where a = (select max(a) from tmp, v1);
drop view v1;
drop temporary table tmp;
drop table t1, t2, t3, m1, m2;
DROP TABLE IF EXISTS t1, t2, t_not_exists;
CREATE TABLE t1(a INT);
ALTER TABLE t1 engine= MERGE UNION (t_not_exists);
ANALYZE TABLE t1;
CHECK TABLE t1;
CHECKSUM TABLE t1;
OPTIMIZE TABLE t1;
REPAIR TABLE t1;
REPAIR TABLE t1 USE_FRM;
DROP TABLE t1;
CREATE TABLE t1(a INT);
CREATE TABLE t2(a INT) engine= MERGE UNION (t1);
REPAIR TABLE t2 USE_FRM;
DROP TABLE t1, t2;
DROP TABLE IF EXISTS t1, m1;
CREATE TABLE t1(a INT) engine=myisam;
CREATE TABLE m1(a INT) engine=merge UNION(t1);
LOCK TABLES t1 READ, m1 WRITE;
ALTER TABLE t1 engine=myisam;
UNLOCK TABLES;
DROP TABLE m1, t1;
drop tables if exists t1, t2, t3, t4, m1;
create table t1(id int) engine=myisam;
create view t3 as select 1 as id;
create table t4(id int) engine=memory;
create table m1(id int) engine=merge union=(t1,t2,t3,t4);
select * from m1;
check table m1;
repair table m1;
drop tables m1, t1, t4;
drop view t3;
drop table if exists t1, t2, m1;
drop function if exists f1;
create table t1 (j int);
insert into t1 values (1);
create function f1() returns int return (select count(*) from m1);
create temporary table t2 (a int) engine=myisam;
insert into t2 values (1);
create temporary table m1 (a int) engine=merge union=(t2);
select f1() from t1;
drop tables t2, m1;
create table t2 (a int) engine=myisam;
insert into t2 values (1);
create table m1 (a int) engine=merge union=(t2);
select f1() from t1;
drop table m1;
create temporary table m1 (a int) engine=merge union=(t2);
select f1() from t1;
drop tables t1, t2, m1;
drop function f1;
create table t1 (a int) engine=myisam;
insert into t1 values (1);
create table m1 (a int) engine=merge union=(t1);
check table m1;
repair table m1;
checksum table m1;
drop tables t1, m1;
create temporary table t1 (a int) engine=myisam;
insert into t1 values (1);
create temporary table m1 (a int) engine=merge union=(t1);
check table m1;
repair table m1;
checksum table m1;
drop tables t1, m1;
create table t1 (a int) engine=myisam;
insert into t1 values (1);
create temporary table m1 (a int) engine=merge union=(t1);
check table m1;
repair table m1;
checksum table m1;
drop tables t1, m1;
DROP TABLE IF EXISTS t1;
DROP TABLE IF EXISTS m1;
DROP TRIGGER IF EXISTS trg1;
DROP TABLE IF EXISTS q1;
DROP TABLE IF EXISTS q2;
CREATE TABLE t1(a INT);
CREATE TABLE m1(a INT) ENGINE = MERGE UNION (q1, q2);
CREATE TRIGGER trg1 BEFORE DELETE ON t1 FOR EACH ROW INSERT INTO m1 VALUES (1);
DELETE FROM t1;
DROP TRIGGER trg1;
DROP TABLE t1;
DROP TABLE m1;
DROP TABLES IF EXISTS t1, t2, t3, t4;
CREATE TEMPORARY TABLE t1(i INT) ENGINE= MyISAM;
CREATE TEMPORARY TABLE t2(i INT) ENGINE= MERGE UNION= (t1) INSERT_METHOD= LAST;
ALTER TABLE t2 INSERT_METHOD= FIRST;
CHECK TABLE t2;
CREATE TABLE t3(i INT) ENGINE= MyISAM;
CREATE TABLE t4(i int) ENGINE= MERGE UNION= (t3) INSERT_METHOD= LAST;
ALTER TABLE t4 INSERT_METHOD= FIRST;
CHECK TABLE t4;
DROP TABLES t1, t2, t3, t4;
