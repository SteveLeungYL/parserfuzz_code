create procedure syntaxerror(t int);
create procedure syntaxerror(t int);
create procedure syntaxerror(t int);
create table t3 ( x int );
insert into t3 values (2), (3);
create procedure bad_into(out param int) select x from t3 into param;
call bad_into(@x);
drop procedure bad_into;
drop table t3;
create procedure proc1() set @x = 42;
create function func1() returns int return 42;
create procedure foo() create procedure bar() set @x=3;
create procedure foo() create function bar() returns double return 2.3;
create procedure proc1() set @x = 42;
create function func1() returns int return 42;
drop procedure proc1;
drop function func1;
alter procedure foo;
alter function foo;
drop procedure foo;
drop function foo;
call foo();
drop procedure if exists foo;
show create procedure foo;
show create function foo;
create procedure foo() foo: loop leave bar; end loop;
create procedure foo() foo: loop iterate bar; end loop;
create procedure foo() foo: begin iterate foo; end;
create procedure foo() foo: loop foo: loop set @x=2; end loop foo; end loop foo;
create procedure foo() foo: loop set @x=2; end loop bar;
create procedure foo() return 42;
create procedure p(x int) set @x = x;
create function f(x int) returns int return x+42;
call p();
call p(1, 2);
drop procedure p;
drop function f;
create procedure p(val int, out res int) begin declare x int default 0; declare continue handler for foo set x = 1; insert into test.t1 values (val); if (x) then set res = 0; else set res = 1; end if; end;
create procedure p(val int, out res int) begin declare x int default 0; declare foo condition for 1146; declare continue handler for bar set x = 1; insert into test.t1 values (val); if (x) then set res = 0; else set res = 1; end if; end;
create function f(val int) returns int begin declare x int; set x = val+3; end;
create function f(val int) returns int begin declare x int; set x = val+3; if x < 4 then return x; end if; end;
drop function f;
create procedure p() begin declare c cursor for insert into test.t1 values ("foo", 42); open c; close c; end;
create procedure p() begin declare x int; declare c cursor for select * into x from test.t limit 1; open c; close c; end;
create procedure p() begin declare c cursor for select * from test.t; open cc; close c; end;
create table t1 (val int);
create procedure p() begin declare c cursor for select * from test.t1; open c; open c; close c; end;
call p();
drop procedure p;
create procedure p() begin declare c cursor for select * from test.t1; open c; close c; close c; end;
call p();
drop procedure p;
alter procedure bar3 sql security invoker;
drop table t1;
create table t1 (val int, x float);
insert into t1 values (42, 3.1), (19, 1.2);
create procedure p() begin declare x int; declare c cursor for select * from t1; open c; fetch c into x, y; close c; end;
create procedure p() begin declare x int; declare c cursor for select * from t1; open c; fetch c into x; close c; end;
call p();
drop procedure p;
create procedure p() begin declare x int; declare y float; declare z int; declare c cursor for select * from t1; open c; fetch c into x, y, z; close c; end;
call p();
