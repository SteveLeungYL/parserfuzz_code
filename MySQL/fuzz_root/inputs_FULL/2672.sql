SET @previous_binlog_format__htnt542nh=@@GLOBAL.binlog_format;
SET @@GLOBAL.binlog_format=STATEMENT;
SET binlog_format=STATEMENT;
CALL mtr.add_suppression("Unsafe statement written to the binary log using statement format since BINLOG_FORMAT = STATEMENT");
select @@session.transaction_isolation;
drop table if exists t0, t1, t2, t3, t4, t5;
drop view if exists v1, v2;
drop procedure if exists p1;
drop procedure if exists p2;
drop function if exists f1;
drop function if exists f2;
drop function if exists f3;
drop function if exists f4;
drop function if exists f5;
drop function if exists f6;
drop function if exists f7;
drop function if exists f8;
drop function if exists f9;
drop function if exists f10;
drop function if exists f11;
drop function if exists f12;
drop function if exists f13;
drop function if exists f14;
drop function if exists f15;
create table t1 (i int primary key) engine=innodb;
insert into t1 values (1), (2), (3), (4), (5);
create table t2 (j int primary key) engine=innodb;
insert into t2 values (1), (2), (3), (4), (5);
create table t3 (k int primary key) engine=innodb;
insert into t3 values (1), (2), (3);
create table t4 (l int primary key) engine=innodb;
insert into t4 values (1);
create table t5 (l int primary key) engine=innodb;
insert into t5 values (1);
create view v1 as select i from t1;
create view v2 as select j from t2 where j in (select i from t1);
create procedure p1(k int) insert into t2 values (k);
create function f1() returns int begin declare j int; select i from t1 where i = 1 into j; return j; end;
create function f2() returns int begin declare k int; select i from t1 where i = 1 into k; insert into t2 values (k + 5); return 0; end;
create function f3() returns int begin return (select i from t1 where i = 3); end;
create function f4() returns int begin if (select i from t1 where i = 3) then return 1; else return 0; end if; end;
create function f5() returns int begin insert into t2 values ((select i from t1 where i = 1) + 5); return 0; end;
create function f6() returns int begin declare k int; select i from v1 where i = 1 into k; return k; end;
create function f7() returns int begin declare k int; select j from v2 where j = 1 into k; return k; end;
create function f8() returns int begin declare k int; select i from v1 where i = 1 into k; insert into t2 values (k+5); return k; end;
create function f9() returns int begin update v2 set j=j+10 where j=1; return 1; end;
create function f10() returns int begin return f1(); end;
create function f11() returns int begin declare k int; set k= f1(); insert into t2 values (k+5); return k; end;
create function f12(p int) returns int begin insert into t2 values (p); return p; end;
create function f13(p int) returns int begin return p; end;
create procedure p2(inout p int) begin select i from t1 where i = 1 into p; end;
create function f14() returns int begin declare k int; call p2(k); insert into t2 values (k+5); return k; end;
create function f15() returns int begin declare k int; call p2(k); return k; end;
create trigger t4_bi before insert on t4 for each row begin declare k int; select i from t1 where i=1 into k; set new.l= k+1; end;
create trigger t4_bu before update on t4 for each row begin if (select i from t1 where i=1) then set new.l= 2; end if; end;
create trigger t4_bd before delete on t4 for each row begin if !(select i from v1 where i=1) then signal sqlstate '45000'; end if; end;
create trigger t5_bi before insert on t5 for each row begin set new.l= f1()+1; end;
create trigger t5_bu before update on t5 for each row begin declare j int; call p2(j); set new.l= j + 1; end;
begin;
select * from t1 for update;;
begin;
select * from t1;;
reap;
rollback;
rollback;
begin;
select * from t1 for update;;
begin;
update t2, t1 set j= j - 1 where i = j;;
rollback;
reap;
rollback;
begin;
select * from t1 for update;;
begin;
delete t2 from t1, t2 where i = j;;
rollback;
reap;
rollback;
begin;
select * from t1 for update;;
begin;
describe t1;;
reap;
rollback;
rollback;
begin;
select * from t1 for update;;
begin;
show create table t1;;
reap;
rollback;
rollback;
begin;
select * from t1 for update;;
begin;
show keys from t1;;
reap;
rollback;
rollback;
begin;
select * from t1 for update;;
begin;
call p1((select i + 5 from t1 where i = 1));;
rollback;
reap;
rollback;
begin;
select * from t1 for update;;
begin;
create table t0 engine=innodb select * from t1;;
rollback;
reap;
rollback;
drop table t0;
begin;
select * from t1 for update;;
begin;
create table t0 engine=innodb select j from t2 where j in (select i from t1);;
rollback;
reap;
rollback;
drop table t0;
begin;
select * from t1 for update;;
begin;
delete from t2 where j in (select i from t1);;
rollback;
reap;
rollback;
begin;
select * from t1 for update;;
begin;
delete t2 from t3, t2 where k = j and j in (select i from t1);;
rollback;
reap;
rollback;
begin;
select * from t1 for update;;
begin;
do (select i from t1 where i = 1);;
rollback;
reap;
rollback;
begin;
select * from t1 for update;;
begin;
insert into t2 select i+5 from t1;;
rollback;
reap;
rollback;
begin;
select * from t1 for update;;
begin;
insert into t2 values ((select i+5 from t1 where i = 4));;
rollback;
reap;
rollback;
begin;
select * from t1 for update;;
begin;
load data infile '../../std_data/rpl_loaddata.dat' into table t2 (@a, @b) set j= @b + (select i from t1 where i = 1);;
rollback;
reap;
rollback;
begin;
select * from t1 for update;;
begin;
replace into t2 select i+5 from t1;;
rollback;
reap;
rollback;
begin;
select * from t1 for update;;
begin;
replace into t2 values ((select i+5 from t1 where i = 4));;
rollback;
reap;
rollback;
begin;
select * from t1 for update;;
begin;
select * from t2 where j in (select i from t1);;
reap;
rollback;
rollback;
begin;
select * from t1 for update;;
begin;
set @a:= (select i from t1 where i = 1);;
rollback;
reap;
rollback;
begin;
select * from t1 for update;;
begin;
show tables from test where Tables_in_test = 't2' and (select i from t1 where i = 1);;
rollback;
reap;
rollback;
begin;
select * from t1 for update;;
begin;
show columns from t2 where (select i from t1 where i = 1);;
rollback;
reap;
rollback;
begin;
select * from t1 for update;;
begin;
update t2 set j= j-10 where j in (select i from t1);;
rollback;
reap;
rollback;
begin;
select * from t1 for update;;
begin;
update t2, t3 set j= j -10 where j=k and j in (select i from t1);;
rollback;
reap;
rollback;
begin;
select * from t1 for update;;
begin;
select * from v1;;
reap;
rollback;
rollback;
begin;
select * from t1 for update;;
begin;
select * from v2;;
reap;
rollback;
rollback;
begin;
select * from t1 for update;;
begin;
select * from t2 where j in (select i from v1);;
reap;
rollback;
rollback;
begin;
select * from t1 for update;;
begin;
select * from t3 where k in (select j from v2);;
reap;
rollback;
rollback;
begin;
select * from t1 for update;;
begin;
update t2 set j= j-10 where j in (select i from v1);;
rollback;
reap;
rollback;
begin;
select * from t1 for update;;
begin;
update t3 set k= k-10 where k in (select j from v2);;
rollback;
reap;
rollback;
begin;
select * from t1 for update;;
begin;
update t2, v1 set j= j-10 where j = i;;
rollback;
reap;
rollback;
begin;
select * from t1 for update;;
begin;
update v2 set j= j-10 where j = 3;;
rollback;
reap;
rollback;
begin;
select * from t1 for update;;
begin;
select f1();;
reap;
rollback;
rollback;
begin;
select * from t1 for update;;
begin;
set @a:= f1();;
rollback;
reap;
rollback;
begin;
select * from t1 for update;;
begin;
insert into t2 values (f1() + 5);;
rollback;
reap;
rollback;
begin;
select * from t1 for update;;
begin;
select f2();;
rollback;
reap;
rollback;
begin;
select * from t1 for update;;
begin;
set @a:= f2();;
rollback;
reap;
rollback;
begin;
select * from t1 for update;;
begin;
select f3();;
reap;
rollback;
rollback;
begin;
select * from t1 for update;;
begin;
set @a:= f3();;
rollback;
reap;
rollback;
begin;
select * from t1 for update;;
begin;
select f4();;
reap;
rollback;
rollback;
begin;
select * from t1 for update;;
begin;
set @a:= f4();;
rollback;
reap;
rollback;
begin;
select * from t1 for update;;
begin;
insert into t2 values (f3() + 5);;
rollback;
reap;
rollback;
begin;
select * from t1 for update;;
begin;
insert into t2 values (f4() + 6);;
rollback;
reap;
rollback;
begin;
select * from t1 for update;;
begin;
select f5();;
rollback;
reap;
rollback;
begin;
select * from t1 for update;;
begin;
set @a:= f5();;
rollback;
reap;
rollback;
begin;
select * from t1 for update;;
begin;
select f6();;
reap;
rollback;
rollback;
begin;
select * from t1 for update;;
begin;
set @a:= f6();;
rollback;
reap;
rollback;
begin;
select * from t1 for update;;
begin;
select f7();;
reap;
rollback;
rollback;
begin;
select * from t1 for update;;
begin;
set @a:= f7();;
rollback;
reap;
rollback;
begin;
select * from t1 for update;;
begin;
insert into t3 values (f6() + 5);;
rollback;
reap;
rollback;
begin;
select * from t1 for update;;
begin;
insert into t3 values (f7() + 5);;
rollback;
reap;
rollback;
begin;
select * from t1 for update;;
begin;
select f8();;
rollback;
reap;
rollback;
begin;
select * from t1 for update;;
begin;
select f9();;
rollback;
reap;
rollback;
begin;
select * from t1 for update;;
begin;
select f10();;
reap;
rollback;
rollback;
begin;
select * from t1 for update;;
begin;
insert into t2 values (f10() + 5);;
rollback;
reap;
rollback;
begin;
select * from t1 for update;;
begin;
select f11();;
rollback;
reap;
rollback;
begin;
select * from t1 for update;;
begin;
select f12((select i+10 from t1 where i=1));;
reap;
rollback;
rollback;
begin;
select * from t1 for update;;
begin;
insert into t2 values (f13((select i+10 from t1 where i=1)));;
rollback;
reap;
rollback;
begin;
select * from t1 for update;;
begin;
call p2(@a);;
reap;
rollback;
rollback;
begin;
select * from t1 for update;;
begin;
select f14();;
rollback;
reap;
rollback;
begin;
select * from t1 for update;;
begin;
select f15();;
reap;
rollback;
rollback;
begin;
select * from t1 for update;;
begin;
insert into t2 values (f15()+5);;
rollback;
reap;
rollback;
begin;
select * from t1 for update;;
begin;
insert into t4 values (2);;
rollback;
reap;
rollback;
begin;
select * from t1 for update;;
begin;
update t4 set l= 2 where l = 1;;
rollback;
reap;
rollback;
begin;
select * from t1 for update;;
begin;
delete from t4 where l = 1;;
rollback;
reap;
rollback;
begin;
select * from t1 for update;;
begin;
insert into t5 values (2);;
rollback;
reap;
rollback;
begin;
select * from t1 for update;;
begin;
update t5 set l= 2 where l = 1;;
rollback;
reap;
rollback;
drop function f1;
drop function f2;
drop function f3;
drop function f4;
drop function f5;
drop function f6;
drop function f7;
drop function f8;
drop function f9;
drop function f10;
drop function f11;
drop function f12;
drop function f13;
drop function f14;
drop function f15;
drop view v1, v2;
drop procedure p1;
drop procedure p2;
drop table t1, t2, t3, t4, t5;
drop table if exists t1, t2;
create table t1 (i int auto_increment not null primary key) engine=innodb;
create table t2 (i int) engine=innodb;
insert into t1 values (1), (2), (3), (4), (5);
begin;
insert into t2 select count(*) from t1;
alter table t1 add column j int;
insert into t1 values (6);
commit;
reap;
drop tables t1, t2;
create table t1 (i int auto_increment not null primary key) engine=innodb partition by hash (i) partitions 4;
create table t2 (i int) engine=innodb;
insert into t1 values (1), (2), (3), (4), (5);
begin;
select * from t1;
alter table t1 rebuild partition p0;
insert into t2 select count(*) from t1;
commit;
reap;
drop tables t1, t2;
SET @@GLOBAL.binlog_format=@previous_binlog_format__htnt542nh;
