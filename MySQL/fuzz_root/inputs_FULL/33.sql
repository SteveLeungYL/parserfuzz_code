set @start_read_only= @@global.read_only;
DROP TABLE IF EXISTS t1,t2,t3;
set @orig_sql_mode= @@sql_mode;
create user test@localhost;
grant CREATE, SELECT, DROP on *.* to test@localhost;
set global read_only=0;
create table t1 (a int);
insert into t1 values(1);
create table t2 select * from t1;
set global read_only=1;
create table t3 (a int);
drop table t3;
select @@global.read_only;
create table t3 (a int);
insert into t1 values(1);
update t1 set a=1 where 1=0;
update t1,t2 set t1.a=t2.a+1 where t1.a=t2.a;
delete t1,t2 from t1,t2 where t1.a=t2.a;
create temporary table t3 (a int);
create temporary table t4 (a int) select * from t3;
insert into t3 values(1);
insert into t4 select * from t3;
update t1,t3 set t1.a=t3.a+1 where t1.a=t3.a;
update t1,t3 set t3.a=t1.a+1 where t1.a=t3.a;
update t4,t3 set t4.a=t3.a+1 where t4.a=t3.a;
delete t1 from t1,t3 where t1.a=t3.a;
delete t3 from t1,t3 where t1.a=t3.a;
delete t4 from t3,t4 where t4.a=t3.a;
create temporary table t1 (a int);
insert into t1 values(1);
update t1,t3 set t1.a=t3.a+1 where t1.a=t3.a;
delete t1 from t1,t3 where t1.a=t3.a;
drop table t1;
insert into t1 values(1);
set global read_only=0;
lock table t1 write;
lock table t2 write;
set global read_only=1;
unlock tables ;
set global read_only=1;
select @@global.read_only;
unlock tables ;
select @@global.read_only;
reap;
set global read_only=0;
lock table t1 read;
lock table t2 read;
set global read_only=1;
unlock tables ;
set global read_only=1;
select @@global.read_only;
select @@global.read_only;
unlock tables ;
set global read_only=0;
BEGIN;
BEGIN;
set global read_only=1;
ROLLBACK;
set global read_only=1;
select @@global.read_only;
ROLLBACK;
set global read_only=0;
flush tables with read lock;
set global read_only=1;
unlock tables;
set global read_only=0;
flush tables with read lock;
set global read_only=1;
select @@global.read_only;
unlock tables;
drop temporary table ttt;
drop temporary table if exists ttt;
set global read_only=0;
drop table t1,t2;
drop user test@localhost;
set global read_only= 1;
drop database if exists mysqltest_db1;
drop database if exists mysqltest_db2;
delete from mysql.user where User like 'mysqltest_%';
delete from mysql.db where User like 'mysqltest_%';
delete from mysql.tables_priv where User like 'mysqltest_%';
delete from mysql.columns_priv where User like 'mysqltest_%';
flush privileges;
create user `mysqltest_u1`@`%`;
grant all on mysqltest_db2.* to `mysqltest_u1`@`%`;
create database mysqltest_db1;
grant all on mysqltest_db1.* to `mysqltest_u1`@`%`;
flush privileges;
create database mysqltest_db2;
show databases like '%mysqltest_db2%';
drop database mysqltest_db1;
delete from mysql.user where User like 'mysqltest_%';
delete from mysql.db where User like 'mysqltest_%';
delete from mysql.tables_priv where User like 'mysqltest_%';
delete from mysql.columns_priv where User like 'mysqltest_%';
flush privileges;
drop database mysqltest_db1;
set global read_only= @start_read_only;
DROP TABLE IF EXISTS t1;
CREATE TABLE t1(a INT);
INSERT INTO t1 VALUES (1), (2);
CREATE USER user1;
SET GLOBAL read_only= 1;
START TRANSACTION;
COMMIT;
START TRANSACTION READ ONLY;
COMMIT;
START TRANSACTION READ WRITE;
COMMIT;
START TRANSACTION;
INSERT INTO t1 VALUES (3);
UPDATE t1 SET a= 1;
DELETE FROM t1;
COMMIT;
START TRANSACTION READ ONLY;
COMMIT;
START TRANSACTION READ WRITE;
COMMIT;
show session status;
DROP USER user1;
SET GLOBAL read_only= 0;
DROP TABLE t1;
set sql_mode= @orig_sql_mode;
CREATE TABLE t1(f1 INT);
CREATE TEMPORARY TABLE t1(a1 INT);
CREATE TEMPORARY TABLE t3(a3 INT);
SET @@global.super_read_only=TRUE;
RENAME TABLE t1 to t3;
SET @@global.read_only=default;
DROP TABLE t1;
DROP TABLE t1;
DROP TABLE t3;
SET @save_read_only= @@global.read_only;
CREATE USER test@localhost;
GRANT CREATE, DROP, INSERT, CREATE TABLESPACE, ALTER ROUTINE, FILE, RELOAD ON *.* TO test@localhost;
FLUSH TABLES WITH READ LOCK;
CREATE DATABASE new;
SET GLOBAL READ_ONLY= 1;
UNLOCK TABLES;
reap;
SET GLOBAL READ_ONLY= 0;
FLUSH TABLES WITH READ LOCK;
ALTER DATABASE test CHARACTER SET utf8;;
SET GLOBAL READ_ONLY= 1;
UNLOCK TABLES;
reap;
SET GLOBAL READ_ONLY= 0;
CREATE DATABASE new;
FLUSH TABLES WITH READ LOCK;
CREATE DATABASE IF NOT EXISTS new;;
SET GLOBAL READ_ONLY= 1;
UNLOCK TABLES;
reap;
SET GLOBAL READ_ONLY= 0;
FLUSH TABLES WITH READ LOCK;
DROP DATABASE new;
SET GLOBAL READ_ONLY= 1;
UNLOCK TABLES;
reap;
SET GLOBAL READ_ONLY= 0;
DROP DATABASE new;
FLUSH TABLES WITH READ LOCK;
CREATE TABLE t1(fld1 INT);
SET GLOBAL READ_ONLY= 1;
UNLOCK TABLES;
reap;
SET GLOBAL READ_ONLY= 0;
CREATE TABLE t1(fld1 INT);
FLUSH TABLES WITH READ LOCK;
CREATE TABLE IF NOT EXISTS t1(fld1 INT);
SET GLOBAL READ_ONLY= 1;
UNLOCK TABLES;
reap;
SET GLOBAL READ_ONLY= 0;
FLUSH TABLES WITH READ LOCK;
ALTER TABLE t1 ADD fld2 INT;
SET GLOBAL READ_ONLY= 1;
UNLOCK TABLES;
reap;
SET GLOBAL READ_ONLY= 0;
ALTER TABLE t1 RENAME COLUMN fld1 TO fld1;
FLUSH TABLES WITH READ LOCK;
ALTER TABLE t1 ADD fld2 INT;
SET GLOBAL READ_ONLY= 1;
UNLOCK TABLES;
reap;
SET GLOBAL READ_ONLY= 0;
FLUSH TABLES WITH READ LOCK;
DROP TABLE t1;
SET GLOBAL READ_ONLY= 1;
UNLOCK TABLES;
reap;
SET GLOBAL READ_ONLY= 0;
FLUSH TABLES WITH READ LOCK;
DROP TABLE IF EXISTS no_such_table;
SET GLOBAL READ_ONLY= 1;
UNLOCK TABLES;
reap;
SET GLOBAL READ_ONLY= 0;
FLUSH TABLES WITH READ LOCK;
CREATE INDEX idx1 ON t1 (fld1) USING BTREE;
SET GLOBAL READ_ONLY= 1;
UNLOCK TABLES;
reap;
SET GLOBAL READ_ONLY= 0;
CREATE INDEX idx1 ON t1 (fld1) USING BTREE;
FLUSH TABLES WITH READ LOCK;
DROP INDEX idx1 ON t1;
SET GLOBAL READ_ONLY= 1;
UNLOCK TABLES;
reap;
SET GLOBAL READ_ONLY= 0;
DROP INDEX idx1 ON t1;
CREATE TABLE t2(fld1 INT) ENGINE=MYISAM;
FLUSH TABLES WITH READ LOCK;
UNLOCK TABLES;
DROP TABLE t2;
FLUSH TABLES WITH READ LOCK;
IMPORT TABLE FROM 'test/t2*.sdi';
SET GLOBAL READ_ONLY= 1;
UNLOCK TABLES;
reap;
SET GLOBAL READ_ONLY= 0;
FLUSH TABLES WITH READ LOCK;
CREATE TRIGGER trg1 BEFORE INSERT ON t1 FOR EACH ROW BEGIN END;
SET GLOBAL READ_ONLY= 1;
UNLOCK TABLES;
reap;
SET GLOBAL READ_ONLY= 0;
CREATE TRIGGER trg1 BEFORE INSERT ON t1 FOR EACH ROW BEGIN END;
FLUSH TABLES WITH READ LOCK;
DROP TRIGGER trg1;
SET GLOBAL READ_ONLY= 1;
UNLOCK TABLES;
reap;
SET GLOBAL READ_ONLY= 0;
DROP TRIGGER trg1;
FLUSH TABLES WITH READ LOCK;
TRUNCATE TABLE t1;
SET GLOBAL READ_ONLY= 1;
UNLOCK TABLES;
reap;
SET GLOBAL READ_ONLY= 0;
FLUSH TABLES WITH READ LOCK;
CREATE VIEW v1 AS SELECT * FROM t1;
SET GLOBAL READ_ONLY= 1;
UNLOCK TABLES;
reap;
SET GLOBAL READ_ONLY= 0;
CREATE VIEW v1 AS SELECT * FROM t1;
FLUSH TABLES WITH READ LOCK;
ALTER VIEW v1 AS SELECT 1;
SET GLOBAL READ_ONLY= 1;
UNLOCK TABLES;
reap;
SET GLOBAL READ_ONLY= 0;
FLUSH TABLES WITH READ LOCK;
DROP VIEW v1;
SET GLOBAL READ_ONLY= 1;
UNLOCK TABLES;
reap;
SET GLOBAL READ_ONLY= 0;
FLUSH TABLES WITH READ LOCK;
DROP VIEW IF EXISTS no_such_view;
SET GLOBAL READ_ONLY= 1;
UNLOCK TABLES;
reap;
SET GLOBAL READ_ONLY= 0;
DROP VIEW v1;
DROP TABLE t1;
FLUSH TABLES WITH READ LOCK;
CREATE TABLESPACE ts1 ADD DATAFILE 'ts1.ibd' ENGINE=INNODB;
SET GLOBAL READ_ONLY= 1;
UNLOCK TABLES;
reap;
SET GLOBAL READ_ONLY= 0;
CREATE TABLESPACE ts1 ADD DATAFILE 'ts1.ibd' ENGINE=INNODB;
FLUSH TABLES WITH READ LOCK;
DROP TABLESPACE ts1;
SET GLOBAL READ_ONLY= 1;
UNLOCK TABLES;
reap;
SET GLOBAL READ_ONLY= 0;
DROP TABLESPACE ts1;
FLUSH TABLES WITH READ LOCK;
CREATE FUNCTION f1() RETURNS INT RETURN 5;
SET GLOBAL READ_ONLY= 1;
UNLOCK TABLES;
reap;
SET GLOBAL READ_ONLY= 0;
CREATE FUNCTION f1() RETURNS INT RETURN 5;
FLUSH TABLES WITH READ LOCK;
ALTER FUNCTION f1 COMMENT 'test';
SET GLOBAL READ_ONLY= 1;
UNLOCK TABLES;
reap;
SET GLOBAL READ_ONLY= 0;
FLUSH TABLES WITH READ LOCK;
DROP FUNCTION f1;
SET GLOBAL READ_ONLY= 1;
UNLOCK TABLES;
reap;
SET GLOBAL READ_ONLY= 0;
FLUSH TABLES WITH READ LOCK;
DROP FUNCTION IF EXISTS f1;
SET GLOBAL READ_ONLY= 1;
UNLOCK TABLES;
reap;
SET GLOBAL READ_ONLY= 0;
DROP FUNCTION f1;
FLUSH TABLES WITH READ LOCK;
CREATE PROCEDURE p1() select 1;
SET GLOBAL READ_ONLY= 1;
UNLOCK TABLES;
reap;
SET GLOBAL READ_ONLY= 0;
CREATE PROCEDURE p1() select 1;
FLUSH TABLES WITH READ LOCK;
ALTER PROCEDURE p1 comment 'test';
SET GLOBAL READ_ONLY= 1;
UNLOCK TABLES;
reap;
SET GLOBAL READ_ONLY= 0;
FLUSH TABLES WITH READ LOCK;
DROP PROCEDURE p1;
SET GLOBAL READ_ONLY= 1;
UNLOCK TABLES;
reap;
SET GLOBAL READ_ONLY= 0;
FLUSH TABLES WITH READ LOCK;
DROP PROCEDURE IF EXISTS no_such_procedure;
SET GLOBAL READ_ONLY= 1;
UNLOCK TABLES;
reap;
SET GLOBAL READ_ONLY= 0;
DROP PROCEDURE p1;
SET @saved_event_scheduler= @@global.event_scheduler;
SET GLOBAL event_scheduler= OFF;
FLUSH TABLES WITH READ LOCK;
CREATE EVENT event1 ON SCHEDULE EVERY 10 HOUR DO SELECT 1;
SET GLOBAL READ_ONLY= 1;
UNLOCK TABLES;
reap;
SET GLOBAL READ_ONLY= 0;
CREATE EVENT event1 ON SCHEDULE EVERY 10 HOUR DO SELECT 1;
FLUSH TABLES WITH READ LOCK;
CREATE EVENT IF NOT EXISTS event1 ON SCHEDULE EVERY 10 HOUR DO SELECT 1;
SET GLOBAL READ_ONLY= 1;
UNLOCK TABLES;
reap;
SET GLOBAL READ_ONLY= 0;
FLUSH TABLES WITH READ LOCK;
ALTER EVENT event1 DISABLE;
SET GLOBAL READ_ONLY= 1;
UNLOCK TABLES;
reap;
SET GLOBAL READ_ONLY= 0;
FLUSH TABLES WITH READ LOCK;
DROP EVENT event1;
SET GLOBAL READ_ONLY= 1;
UNLOCK TABLES;
reap;
SET GLOBAL READ_ONLY= 0;
DROP EVENT event1;
FLUSH TABLES WITH READ LOCK;
DROP EVENT IF EXISTS no_such_event;
SET GLOBAL READ_ONLY= 1;
UNLOCK TABLES;
reap;
SET GLOBAL READ_ONLY= 0;
SET GLOBAL event_scheduler= @saved_event_scheduler;
CREATE TABLE t1(fld1 INT);
FLUSH TABLES t1 WITH READ LOCK;
UNLOCK TABLES;
FLUSH TABLES t1 FOR EXPORT;
UNLOCK TABLES;
DROP TABLE t1;
DROP USER test@localhost;
SET GLOBAL read_only= @save_read_only;
SET @save_read_only= @@global.read_only;
SET @save_super_read_only= @@global.super_read_only;
CREATE USER user1@localhost;
GRANT ENCRYPTION_KEY_ADMIN ON *.* TO user1@localhost;
FLUSH TABLES WITH READ LOCK;
ALTER INSTANCE ROTATE INNODB MASTER KEY;
SET GLOBAL READ_ONLY= 1;
UNLOCK TABLES;
reap;
SET GLOBAL READ_ONLY= 0;
SET GLOBAL SUPER_READ_ONLY= ON;
ALTER INSTANCE ROTATE INNODB MASTER KEY;
SET GLOBAL read_only= @save_read_only;
SET GLOBAL super_read_only= @save_super_read_only;
DROP USER user1@localhost;
