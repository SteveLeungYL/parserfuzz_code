set optimizer_switch='block_nested_loop=off,batched_key_access=off';
set optimizer_switch='mrr_cost_based=off';
DROP TABLE IF EXISTS t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11;
DROP DATABASE IF EXISTS world;
set names utf8;
CREATE DATABASE world;
use world;
CREATE TABLE country ( Code char(3) NOT NULL default '', Name char(52) NOT NULL default '', SurfaceArea float(10,2) NOT NULL default '0.00', Population int(11) NOT NULL default '0', Capital int(11) default NULL );
CREATE TABLE city ( ID int(11) NOT NULL, Name char(35) NOT NULL default '', Country char(3) NOT NULL default '', Population int(11) NOT NULL default '0' );
CREATE TABLE countrylanguage ( Country char(3) NOT NULL default '', Language char(30) NOT NULL default '', Percentage float NOT NULL default '0.0' );
INSERT INTO countrylanguage VALUES  ('EST','Finnish',0.7), ('USA','Italian',0.6), ('AGO','Chokwe',4.2), ('AUS','Vietnamese',0.8), ('BGD','Santhali',0.1), ('BEL','Turkish',0.9), ('BEN','Somba',6.7), ('BFA','Dyula',2.6), ('ERI','Saho',3.0), ('ZAF','Tswana',8.1), ('ETH','Sidamo',3.2), ('PHL','Waray-waray',3.8), ('GEO','Abhyasi',1.7), ('GHA','Joruba',1.3), ('GIN','Yalunka',2.9), ('GNB','Mandyako',4.9), ('IDN','Batakki',2.2), ('IND','Urdu',5.1), ('IRN','Mazandarani',3.6), ('ITA','Albaniana',0.2), ('AUT','Polish',0.2), ('JPN','Ainu',0.0), ('YUG','Macedonian',0.5), ('CMR','Mandara',5.7), ('CAN','Polish',0.7), ('KAZ','Tatar',2.0), ('KEN','Gusii',6.1), ('CAF','Mbum',6.4), ('CHN','Uighur',0.6), ('KGZ','Kazakh',0.8), ('COG','Sango',2.6), ('COD','Ngala and Bangi',5.8), ('LVA','Lithuanian',1.2), ('LBR','Mano',7.2), ('MYS','Dusun',1.1), ('MLI','Songhai',6.9), ('MRT','Zenaga',1.2), ('MUS','Marathi',0.7), ('MEX','OtomÃ­',0.4), ('FSM','Wolea',3.7), ('MNG','Dariganga',1.4), ('MOZ','Tswa',6.0), ('MMR','Chin',2.2), ('NAM','Caprivi',4.7), ('NPL','Newari',3.7), ('NGA','Kanuri',4.1), ('PAK','Balochi',3.0), ('PAN','Arabic',0.6), ('MNP','Carolinian',4.8), ('FRA','Turkish',0.4), ('ROM','Serbo-Croatian',0.1), ('SWE','Norwegian',0.5), ('DEU','Polish',0.3), ('ZMB','Nsenga',4.3), ('SEN','Soninke',1.3), ('SLE','Ful',3.8), ('SDN','Zande',2.7), ('TWN','Paiwan',0.3), ('TZA','Nyakusa',5.4), ('DNK','Swedish',0.3), ('THA','Kuy',1.1), ('TGO','Moba',5.4), ('TCD','Hadjarai',6.7), ('CZE','Silesiana',0.4), ('UGA','Lango',5.9), ('UKR','Belorussian',0.3), ('HUN','Slovak',0.1), ('UZB','Tatar',1.8), ('RUS','Chechen',0.6), ('VNM','Khmer',1.4), ('USA','Chinese',0.6), ('AGO','Luvale',3.6), ('AUS','Serbo-Croatian',0.6), ('BGD','Tripuri',0.1), ('BEN','Ful',5.6), ('ZAF','Southsotho',7.6), ('ETH','Walaita',2.8), ('PHL','Pampango',3.0), ('GIN','Loma',2.3), ('IDN','Bugi',2.2), ('IND','Gujarati',4.8), ('IRN','Balochi',2.3), ('ITA','Slovene',0.2), ('AUT','Czech',0.2), ('CMR','Maka',4.9), ('CAN','Spanish',0.7), ('KEN','Meru',5.5), ('CHN','Yi',0.6), ('KGZ','Tadzhik',0.8), ('COD','Rundi',3.8), ('LBR','Loma',5.8), ('MOZ','Chuabo',5.7), ('MMR','Kachin',1.4), ('NAM','San',1.9), ('NPL','Hindi',3.0), ('NGA','Edo',3.3), ('PAK','Hindko',2.4), ('SLE','Kuranko',3.4), ('SDN','Bari',2.5), ('TZA','Chaga and Pare',4.9), ('DNK','Norwegian',0.3), ('TGO','Naudemba',4.1), ('TCD','Tandjile',6.5), ('CZE','Romani',0.3), ('UGA','Lugbara',4.7), ('UKR','Polish',0.1), ('RUS','Mordva',0.5), ('VNM','Nung',1.1), ('USA','Tagalog',0.4), ('AGO','Ambo',2.4), ('AUS','German',0.6), ('ZAF','Tsonga',4.3), ('PHL','Pangasinan',1.8), ('IDN','Banja',1.8), ('IND','Kannada',3.9), ('IRN','Arabic',2.2), ('ITA','Romani',0.2), ('AUT','Romanian',0.2), ('CMR','Masana',3.9), ('CAN','Portuguese',0.7), ('KEN','Nyika',4.8), ('CHN','Tujia',0.5), ('COD','Teke',2.7), ('LBR','Malinke',5.1), ('MOZ','Ronga',3.7), ('MMR','Kayah',0.4), ('NAM','German',0.9), ('NGA','Tiv',2.3), ('PAK','Brahui',1.2), ('SLE','Yalunka',3.4), ('SDN','Fur',2.1), ('TZA','Luguru',4.9), ('TGO','Gurma',3.4), ('TCD','Gorane',6.2), ('CZE','Hungarian',0.2), ('UGA','Gisu',4.5), ('RUS','Kazakh',0.4), ('VNM','Miao',0.9), ('USA','Polish',0.3), ('AGO','Luchazi',2.4), ('ZAF','Swazi',2.5), ('PHL','Maguindanao',1.4), ('IDN','Bali',1.7), ('IND','Malajalam',3.6), ('IRN','Bakhtyari',1.7), ('CAN','Punjabi',0.7), ('KEN','Masai',1.6), ('CHN','Mongolian',0.4), ('COD','Boa',2.3), ('MOZ','Marendje',3.5), ('NGA','Ijo',1.8), ('SDN','Chilluk',1.7), ('TZA','Shambala',4.3), ('UGA','Acholi',4.4), ('RUS','Avarian',0.4), ('VNM','Man',0.7), ('USA','Korean',0.3), ('ZAF','Venda',2.2), ('PHL','Maranao',1.3), ('IND','Orija',3.3), ('IRN','Turkmenian',1.6), ('CAN','Ukrainian',0.6), ('KEN','Turkana',1.4), ('CHN','Tibetan',0.4), ('COD','Chokwe',1.8), ('MOZ','Nyanja',3.3), ('NGA','Bura',1.6), ('SDN','Lotuko',1.5), ('TZA','Gogo',3.9), ('UGA','Rwanda',3.2), ('RUS','Mari',0.4), ('USA','Vietnamese',0.2), ('ZAF','Ndebele',1.5), ('IND','Punjabi',2.8), ('CAN','Dutch',0.5), ('CHN','Puyi',0.2), ('TZA','Ha',3.5), ('RUS','Udmur',0.3), ('USA','Japanese',0.2), ('IND','Asami',1.5), ('CAN','Eskimo Languages',0.1), ('CHN','Dong',0.2), ('RUS','Belorussian',0.3), ('USA','Portuguese',0.2);
ANALYZE TABLE country, city, countrylanguage;
ANALYZE TABLE city, country, countrylanguage;
SELECT COUNT(*) FROM country;
SELECT COUNT(*) FROM city;
SELECT COUNT(*) FROM countrylanguage;
show variables like 'join_buffer_size';
EXPLAIN SELECT city.Name, country.Name FROM city,country WHERE city.Country=country.Code AND  country.Name LIKE 'L%' AND city.Population > 100000;
SELECT city.Name, country.Name FROM city,country WHERE city.Country=country.Code AND  country.Name LIKE 'L%' AND city.Population > 100000;
EXPLAIN SELECT city.Name, country.Name, countrylanguage.Language FROM city,country,countrylanguage WHERE city.Country=country.Code AND countrylanguage.Country=country.Code AND city.Name LIKE 'L%' AND country.Population > 3000000 AND countrylanguage.Percentage > 50;
SELECT city.Name, country.Name, countrylanguage.Language FROM city,country,countrylanguage WHERE city.Country=country.Code AND countrylanguage.Country=country.Code AND city.Name LIKE 'L%' AND country.Population > 3000000 AND countrylanguage.Percentage > 50;
set join_buffer_size=2048;
show variables like 'join_buffer_size';
EXPLAIN SELECT city.Name, country.Name FROM city,country WHERE city.Country=country.Code AND  country.Name LIKE 'L%' AND city.Population > 100000;
SELECT city.Name, country.Name FROM city,country WHERE city.Country=country.Code AND  country.Name LIKE 'L%' AND city.Population > 100000;
EXPLAIN SELECT city.Name, country.Name, countrylanguage.Language FROM city,country,countrylanguage WHERE city.Country=country.Code AND countrylanguage.Country=country.Code AND city.Name LIKE 'L%' AND country.Population > 3000000 AND countrylanguage.Percentage > 50;
SELECT city.Name, country.Name, countrylanguage.Language FROM city,country,countrylanguage WHERE city.Country=country.Code AND countrylanguage.Country=country.Code AND city.Name LIKE 'L%' AND country.Population > 3000000 AND countrylanguage.Percentage > 50;
set join_buffer_size=default;
show variables like 'join_buffer_size';
DROP DATABASE world;
CREATE DATABASE world;
use world;
CREATE TABLE country ( Code char(3) NOT NULL default '', Name char(52) NOT NULL default '', SurfaceArea float(10,2) NOT NULL default '0.00', Population int(11) NOT NULL default '0', Capital int(11) default NULL, PRIMARY KEY  (Code), UNIQUE INDEX (Name) );
CREATE TABLE city ( ID int(11) NOT NULL auto_increment, Name char(35) NOT NULL default '', Country char(3) NOT NULL default '', Population int(11) NOT NULL default '0', PRIMARY KEY  (ID), INDEX (Population), INDEX (Country)  );
CREATE TABLE countrylanguage ( Country char(3) NOT NULL default '', Language char(30) NOT NULL default '', Percentage float NOT NULL default '0.0', PRIMARY KEY  (Country, Language), INDEX (Percentage) );
INSERT INTO country VALUES ('AFG','Afghanistan',652090.00,22720000,1), ('NLD','Netherlands',41526.00,15864000,5), ('ANT','Netherlands Antilles',800.00,217000,33), ('ALB','Albania',28748.00,3401200,34), ('DZA','Algeria',2381741.00,31471000,35), ('ASM','American Samoa',199.00,68000,54), ('AND','Andorra',468.00,78000,55), ('AGO','Angola',1246700.00,12878000,56), ('AIA','Anguilla',96.00,8000,62), ('ATG','Antigua and Barbuda',442.00,68000,63), ('ARE','United Arab Emirates',83600.00,2441000,65), ('ARG','Argentina',2780400.00,37032000,69), ('ARM','Armenia',29800.00,3520000,126), ('ABW','Aruba',193.00,103000,129), ('AUS','Australia',7741220.00,18886000,135), ('AZE','Azerbaijan',86600.00,7734000,144), ('BHS','Bahamas',13878.00,307000,148), ('BHR','Bahrain',694.00,617000,149), ('BGD','Bangladesh',143998.00,129155000,150), ('BRB','Barbados',430.00,270000,174), ('BEL','Belgium',30518.00,10239000,179), ('BLZ','Belize',22696.00,241000,185), ('BEN','Benin',112622.00,6097000,187), ('BMU','Bermuda',53.00,65000,191), ('BTN','Bhutan',47000.00,2124000,192), ('BOL','Bolivia',1098581.00,8329000,194), ('BIH','Bosnia and Herzegovina',51197.00,3972000,201), ('BWA','Botswana',581730.00,1622000,204), ('BRA','Brazil',8547403.00,170115000,211), ('GBR','United Kingdom',242900.00,59623400,456), ('VGB','Virgin Islands, British',151.00,21000,537), ('BRN','Brunei',5765.00,328000,538), ('BGR','Bulgaria',110994.00,8190900,539), ('BFA','Burkina Faso',274000.00,11937000,549), ('BDI','Burundi',27834.00,6695000,552), ('CYM','Cayman Islands',264.00,38000,553), ('CHL','Chile',756626.00,15211000,554), ('COK','Cook Islands',236.00,20000,583), ('CRI','Costa Rica',51100.00,4023000,584), ('DJI','Djibouti',23200.00,638000,585), ('DMA','Dominica',751.00,71000,586), ('DOM','Dominican Republic',48511.00,8495000,587), ('ECU','Ecuador',283561.00,12646000,594), ('EGY','Egypt',1001449.00,68470000,608), ('SLV','El Salvador',21041.00,6276000,645), ('ERI','Eritrea',117600.00,3850000,652), ('ESP','Spain',505992.00,39441700,653), ('ZAF','South Africa',1221037.00,40377000,716), ('ETH','Ethiopia',1104300.00,62565000,756), ('FLK','Falkland Islands',12173.00,2000,763), ('FJI','Fiji Islands',18274.00,817000,764), ('PHL','Philippines',300000.00,75967000,766), ('FRO','Faroe Islands',1399.00,43000,901), ('GAB','Gabon',267668.00,1226000,902), ('GMB','Gambia',11295.00,1305000,904), ('GEO','Georgia',69700.00,4968000,905), ('GHA','Ghana',238533.00,20212000,910), ('GIB','Gibraltar',6.00,25000,915), ('GRD','Grenada',344.00,94000,916), ('GRL','Greenland',2166090.00,56000,917), ('GLP','Guadeloupe',1705.00,456000,919), ('GUM','Guam',549.00,168000,921), ('GTM','Guatemala',108889.00,11385000,922), ('GIN','Guinea',245857.00,7430000,926), ('GNB','Guinea-Bissau',36125.00,1213000,927), ('GUY','Guyana',214969.00,861000,928), ('HTI','Haiti',27750.00,8222000,929), ('HND','Honduras',112088.00,6485000,933), ('HKG','Hong Kong',1075.00,6782000,937), ('SJM','Svalbard and Jan Mayen',62422.00,3200,938), ('IDN','Indonesia',1904569.00,212107000,939), ('IND','India',3287263.00,1013662000,1109), ('IRQ','Iraq',438317.00,23115000,1365), ('IRN','Iran',1648195.00,67702000,1380), ('IRL','Ireland',70273.00,3775100,1447), ('ISL','Iceland',103000.00,279000,1449), ('ISR','Israel',21056.00,6217000,1450), ('ITA','Italy',301316.00,57680000,1464), ('TMP','East Timor',14874.00,885000,1522), ('AUT','Austria',83859.00,8091800,1523), ('JAM','Jamaica',10990.00,2583000,1530), ('JPN','Japan',377829.00,126714000,1532), ('YEM','Yemen',527968.00,18112000,1780), ('JOR','Jordan',88946.00,5083000,1786), ('CXR','Christmas Island',135.00,2500,1791), ('YUG','Yugoslavia',102173.00,10640000,1792), ('KHM','Cambodia',181035.00,11168000,1800), ('CMR','Cameroon',475442.00,15085000,1804), ('CAN','Canada',9970610.00,31147000,1822), ('CPV','Cape Verde',4033.00,428000,1859), ('KAZ','Kazakstan',2724900.00,16223000,1864), ('KEN','Kenya',580367.00,30080000,1881), ('CAF','Central African Republic',622984.00,3615000,1889), ('CHN','China',9572900.00,1277558000,1891), ('KGZ','Kyrgyzstan',199900.00,4699000,2253), ('KIR','Kiribati',726.00,83000,2256), ('COL','Colombia',1138914.00,42321000,2257), ('COM','Comoros',1862.00,578000,2295), ('COG','Congo',342000.00,2943000,2296), ('COD','Congo, The Democratic Republic of the',2344858.00,51654000,2298), ('CCK','Cocos (Keeling) Islands',14.00,600,2317), ('PRK','North Korea',120538.00,24039000,2318), ('KOR','South Korea',99434.00,46844000,2331), ('GRC','Greece',131626.00,10545700,2401), ('HRV','Croatia',56538.00,4473000,2409), ('CUB','Cuba',110861.00,11201000,2413), ('KWT','Kuwait',17818.00,1972000,2429), ('CYP','Cyprus',9251.00,754700,2430), ('LAO','Laos',236800.00,5433000,2432), ('LVA','Latvia',64589.00,2424200,2434), ('LSO','Lesotho',30355.00,2153000,2437), ('LBN','Lebanon',10400.00,3282000,2438), ('LBR','Liberia',111369.00,3154000,2440), ('LBY','Libyan Arab Jamahiriya',1759540.00,5605000,2441), ('LIE','Liechtenstein',160.00,32300,2446), ('LTU','Lithuania',65301.00,3698500,2447), ('LUX','Luxembourg',2586.00,435700,2452), ('ESH','Western Sahara',266000.00,293000,2453), ('MAC','Macao',18.00,473000,2454), ('MDG','Madagascar',587041.00,15942000,2455), ('MKD','Macedonia',25713.00,2024000,2460), ('MWI','Malawi',118484.00,10925000,2462), ('MDV','Maldives',298.00,286000,2463), ('MYS','Malaysia',329758.00,22244000,2464), ('MLI','Mali',1240192.00,11234000,2482), ('MLT','Malta',316.00,380200,2484), ('MAR','Morocco',446550.00,28351000,2486), ('MHL','Marshall Islands',181.00,64000,2507), ('MTQ','Martinique',1102.00,395000,2508), ('MRT','Mauritania',1025520.00,2670000,2509), ('MUS','Mauritius',2040.00,1158000,2511), ('MYT','Mayotte',373.00,149000,2514), ('MEX','Mexico',1958201.00,98881000,2515), ('FSM','Micronesia, Federated States of',702.00,119000,2689), ('MDA','Moldova',33851.00,4380000,2690), ('MCO','Monaco',1.50,34000,2695), ('MNG','Mongolia',1566500.00,2662000,2696), ('MSR','Montserrat',102.00,11000,2697), ('MOZ','Mozambique',801590.00,19680000,2698), ('MMR','Myanmar',676578.00,45611000,2710), ('NAM','Namibia',824292.00,1726000,2726), ('NRU','Nauru',21.00,12000,2728), ('NPL','Nepal',147181.00,23930000,2729), ('NIC','Nicaragua',130000.00,5074000,2734), ('NER','Niger',1267000.00,10730000,2738), ('NGA','Nigeria',923768.00,111506000,2754), ('NIU','Niue',260.00,2000,2805), ('NFK','Norfolk Island',36.00,2000,2806), ('NOR','Norway',323877.00,4478500,2807), ('CIV','CÃ´te dâIvoire',322463.00,14786000,2814), ('OMN','Oman',309500.00,2542000,2821), ('PAK','Pakistan',796095.00,156483000,2831), ('PLW','Palau',459.00,19000,2881), ('PAN','Panama',75517.00,2856000,2882), ('PNG','Papua New Guinea',462840.00,4807000,2884), ('PRY','Paraguay',406752.00,5496000,2885), ('PER','Peru',1285216.00,25662000,2890), ('PCN','Pitcairn',49.00,50,2912), ('MNP','Northern Mariana Islands',464.00,78000,2913), ('PRT','Portugal',91982.00,9997600,2914), ('PRI','Puerto Rico',8875.00,3869000,2919), ('POL','Poland',323250.00,38653600,2928), ('GNQ','Equatorial Guinea',28051.00,453000,2972), ('QAT','Qatar',11000.00,599000,2973), ('FRA','France',551500.00,59225700,2974), ('GUF','French Guiana',90000.00,181000,3014), ('PYF','French Polynesia',4000.00,235000,3016), ('REU','RÃ©union',2510.00,699000,3017), ('ROM','Romania',238391.00,22455500,3018), ('RWA','Rwanda',26338.00,7733000,3047), ('SWE','Sweden',449964.00,8861400,3048), ('SHN','Saint Helena',314.00,6000,3063), ('KNA','Saint Kitts and Nevis',261.00,38000,3064), ('LCA','Saint Lucia',622.00,154000,3065), ('VCT','Saint Vincent and the Grenadines',388.00,114000,3066), ('SPM','Saint Pierre and Miquelon',242.00,7000,3067), ('DEU','Germany',357022.00,82164700,3068), ('SLB','Solomon Islands',28896.00,444000,3161), ('ZMB','Zambia',752618.00,9169000,3162), ('WSM','Samoa',2831.00,180000,3169), ('SMR','San Marino',61.00,27000,3171), ('STP','Sao Tome and Principe',964.00,147000,3172), ('SAU','Saudi Arabia',2149690.00,21607000,3173), ('SEN','Senegal',196722.00,9481000,3198), ('SYC','Seychelles',455.00,77000,3206), ('SLE','Sierra Leone',71740.00,4854000,3207), ('SGP','Singapore',618.00,3567000,3208), ('SVK','Slovakia',49012.00,5398700,3209), ('SVN','Slovenia',20256.00,1987800,3212), ('SOM','Somalia',637657.00,10097000,3214), ('LKA','Sri Lanka',65610.00,18827000,3217), ('SDN','Sudan',2505813.00,29490000,3225), ('FIN','Finland',338145.00,5171300,3236), ('SUR','Suriname',163265.00,417000,3243), ('SWZ','Swaziland',17364.00,1008000,3244), ('CHE','Switzerland',41284.00,7160400,3248), ('SYR','Syria',185180.00,16125000,3250), ('TJK','Tajikistan',143100.00,6188000,3261), ('TWN','Taiwan',36188.00,22256000,3263), ('TZA','Tanzania',883749.00,33517000,3306), ('DNK','Denmark',43094.00,5330000,3315), ('THA','Thailand',513115.00,61399000,3320), ('TGO','Togo',56785.00,4629000,3332), ('TKL','Tokelau',12.00,2000,3333), ('TON','Tonga',650.00,99000,3334), ('TTO','Trinidad and Tobago',5130.00,1295000,3336), ('TCD','Chad',1284000.00,7651000,3337), ('CZE','Czech Republic',78866.00,10278100,3339), ('TUN','Tunisia',163610.00,9586000,3349), ('TUR','Turkey',774815.00,66591000,3358), ('TKM','Turkmenistan',488100.00,4459000,3419), ('TCA','Turks and Caicos Islands',430.00,17000,3423), ('TUV','Tuvalu',26.00,12000,3424), ('UGA','Uganda',241038.00,21778000,3425), ('UKR','Ukraine',603700.00,50456000,3426), ('HUN','Hungary',93030.00,10043200,3483), ('URY','Uruguay',175016.00,3337000,3492), ('NCL','New Caledonia',18575.00,214000,3493), ('NZL','New Zealand',270534.00,3862000,3499), ('UZB','Uzbekistan',447400.00,24318000,3503), ('BLR','Belarus',207600.00,10236000,3520), ('WLF','Wallis and Futuna',200.00,15000,3536), ('VUT','Vanuatu',12189.00,190000,3537), ('VAT','Holy See (Vatican City State)',0.40,1000,3538), ('VEN','Venezuela',912050.00,24170000,3539), ('RUS','Russian Federation',17075400.00,146934000,3580), ('VNM','Vietnam',331689.00,79832000,3770), ('EST','Estonia',45227.00,1439200,3791), ('USA','United States',9363520.00,278357000,3813), ('VIR','Virgin Islands, U.S.',347.00,93000,4067), ('ZWE','Zimbabwe',390757.00,11669000,4068), ('PSE','Palestine',6257.00,3101000,4074), ('ATA','Antarctica',13120000.00,0,NULL), ('BVT','Bouvet Island',59.00,0,NULL), ('IOT','British Indian Ocean Territory',78.00,0,NULL), ('SGS','South Georgia and the South Sandwich Islands',3903.00,0,NULL), ('HMD','Heard Island and McDonald Islands',359.00,0,NULL), ('ATF','French Southern territories',7780.00,0,NULL), ('UMI','United States Minor Outlying Islands',16.00,0,NULL);
INSERT INTO city VALUES (2001,'Tengzhou','CHN',315083), (2002,'Chaozhou','CHN',313469), (2003,'Yangzhou','CHN',312892), (2004,'Dongwan','CHN',308669), (2005,'MaÂ´anshan','CHN',305421), (2006,'Foshan','CHN',303160), (2007,'Yueyang','CHN',302800), (2008,'Xingtai','CHN',302789), (2009,'Changde','CHN',301276), (2010,'Shihezi','CHN',299676), (2011,'Yancheng','CHN',296831), (2012,'Jiujiang','CHN',291187), (2013,'Dongying','CHN',281728), (2014,'Shashi','CHN',281352), (2015,'Xintai','CHN',281248), (2016,'Jingdezhen','CHN',281183), (2017,'Tongchuan','CHN',280657), (2018,'Zhongshan','CHN',278829), (2019,'Shiyan','CHN',273786), (2020,'Tieli','CHN',265683), (2021,'Jining','CHN',265248), (2022,'Wuhai','CHN',264081), (2023,'Mianyang','CHN',262947), (2024,'Luzhou','CHN',262892), (2025,'Zunyi','CHN',261862), (2026,'Shizuishan','CHN',257862), (2027,'Neijiang','CHN',256012), (2028,'Tongliao','CHN',255129), (2029,'Tieling','CHN',254842), (2030,'Wafangdian','CHN',251733), (2031,'Anqing','CHN',250718), (2032,'Shaoyang','CHN',247227), (2033,'Laiwu','CHN',246833), (2034,'Chengde','CHN',246799), (2035,'Tianshui','CHN',244974), (2036,'Nanyang','CHN',243303), (2037,'Cangzhou','CHN',242708), (2038,'Yibin','CHN',241019), (2039,'Huaiyin','CHN',239675), (2040,'Dunhua','CHN',235100), (2041,'Yanji','CHN',230892), (2042,'Jiangmen','CHN',230587), (2043,'Tongling','CHN',228017), (2044,'Suihua','CHN',227881), (2045,'Gongziling','CHN',226569), (2046,'Xiantao','CHN',222884), (2047,'Chaoyang','CHN',222394), (2048,'Ganzhou','CHN',220129), (2049,'Huzhou','CHN',218071), (2050,'Baicheng','CHN',217987), (2051,'Shangzi','CHN',215373), (2052,'Yangjiang','CHN',215196), (2053,'Qitaihe','CHN',214957), (2054,'Gejiu','CHN',214294), (2055,'Jiangyin','CHN',213659), (2056,'Hebi','CHN',212976), (2057,'Jiaxing','CHN',211526), (2058,'Wuzhou','CHN',210452), (2059,'Meihekou','CHN',209038), (2060,'Xuchang','CHN',208815), (2061,'Liaocheng','CHN',207844), (2062,'Haicheng','CHN',205560), (2063,'Qianjiang','CHN',205504), (2064,'Baiyin','CHN',204970), (2065,'BeiÂ´an','CHN',204899), (2066,'Yixing','CHN',200824), (2067,'Laizhou','CHN',198664), (2068,'Qaramay','CHN',197602), (2069,'Acheng','CHN',197595), (2070,'Dezhou','CHN',195485), (2071,'Nanping','CHN',195064), (2072,'Zhaoqing','CHN',194784), (2073,'Beipiao','CHN',194301), (2074,'Fengcheng','CHN',193784), (2075,'Fuyu','CHN',192981), (2076,'Xinyang','CHN',192509), (2077,'Dongtai','CHN',192247), (2078,'Yuci','CHN',191356), (2079,'Honghu','CHN',190772), (2080,'Ezhou','CHN',190123), (2081,'Heze','CHN',189293), (2082,'Daxian','CHN',188101), (2083,'Linfen','CHN',187309), (2084,'Tianmen','CHN',186332), (2085,'Yiyang','CHN',185818), (2086,'Quanzhou','CHN',185154), (2087,'Rizhao','CHN',185048), (2088,'Deyang','CHN',182488), (2089,'Guangyuan','CHN',182241), (2090,'Changshu','CHN',181805), (2091,'Zhangzhou','CHN',181424), (2092,'Hailar','CHN',180650), (2093,'Nanchong','CHN',180273), (2094,'Jiutai','CHN',180130), (2095,'Zhaodong','CHN',179976), (2096,'Shaoxing','CHN',179818), (2097,'Fuyang','CHN',179572), (2098,'Maoming','CHN',178683), (2099,'Qujing','CHN',178669), (2100,'Ghulja','CHN',177193), (2101,'Jiaohe','CHN',176367), (2102,'Puyang','CHN',175988), (2103,'Huadian','CHN',175873), (2104,'Jiangyou','CHN',175753), (2105,'Qashqar','CHN',174570), (2106,'Anshun','CHN',174142), (2107,'Fuling','CHN',173878), (2108,'Xinyu','CHN',173524), (2109,'Hanzhong','CHN',169930), (2110,'Danyang','CHN',169603), (2111,'Chenzhou','CHN',169400), (2112,'Xiaogan','CHN',166280), (2113,'Shangqiu','CHN',164880), (2114,'Zhuhai','CHN',164747), (2115,'Qingyuan','CHN',164641), (2116,'Aqsu','CHN',164092), (2117,'Jining','CHN',163552), (2118,'Xiaoshan','CHN',162930), (2119,'Zaoyang','CHN',162198), (2120,'Xinghua','CHN',161910), (2121,'Hami','CHN',161315), (2122,'Huizhou','CHN',161023), (2123,'Jinmen','CHN',160794), (2124,'Sanming','CHN',160691), (2125,'Ulanhot','CHN',159538), (2126,'Korla','CHN',159344), (2127,'Wanxian','CHN',156823), (2128,'RuiÂ´an','CHN',156468), (2129,'Zhoushan','CHN',156317), (2130,'Liangcheng','CHN',156307), (2131,'Jiaozhou','CHN',153364), (2132,'Taizhou','CHN',152442), (2133,'Suzhou','CHN',151862), (2134,'Yichun','CHN',151585), (2135,'Taonan','CHN',150168), (2136,'Pingdu','CHN',150123), (2137,'JiÂ´an','CHN',148583), (2138,'Longkou','CHN',148362), (2139,'Langfang','CHN',148105), (2140,'Zhoukou','CHN',146288), (2141,'Suining','CHN',146086), (2142,'Yulin','CHN',144467), (2143,'Jinhua','CHN',144280), (2144,'LiuÂ´an','CHN',144248), (2145,'Shuangcheng','CHN',142659), (2146,'Suizhou','CHN',142302), (2147,'Ankang','CHN',142170), (2148,'Weinan','CHN',140169), (2149,'Longjing','CHN',139417), (2150,'DaÂ´an','CHN',138963), (2151,'Lengshuijiang','CHN',137994), (2152,'Laiyang','CHN',137080), (2153,'Xianning','CHN',136811), (2154,'Dali','CHN',136554), (2155,'Anda','CHN',136446), (2156,'Jincheng','CHN',136396), (2157,'Longyan','CHN',134481), (2158,'Xichang','CHN',134419), (2159,'Wendeng','CHN',133910), (2160,'Hailun','CHN',133565), (2161,'Binzhou','CHN',133555), (2162,'Linhe','CHN',133183), (2163,'Wuwei','CHN',133101), (2164,'Duyun','CHN',132971), (2165,'Mishan','CHN',132744), (2166,'Shangrao','CHN',132455), (2167,'Changji','CHN',132260), (2168,'Meixian','CHN',132156), (2169,'Yushu','CHN',131861), (2170,'Tiefa','CHN',131807), (2171,'HuaiÂ´an','CHN',131149), (2172,'Leiyang','CHN',130115), (2173,'Zalantun','CHN',130031), (2174,'Weihai','CHN',128888), (2175,'Loudi','CHN',128418), (2176,'Qingzhou','CHN',128258), (2177,'Qidong','CHN',126872), (2178,'Huaihua','CHN',126785), (2179,'Luohe','CHN',126438), (2180,'Chuzhou','CHN',125341), (2181,'Kaiyuan','CHN',124219), (2182,'Linqing','CHN',123958), (2183,'Chaohu','CHN',123676), (2184,'Laohekou','CHN',123366), (2185,'Dujiangyan','CHN',123357), (2186,'Zhumadian','CHN',123232), (2187,'Linchuan','CHN',121949), (2188,'Jiaonan','CHN',121397), (2189,'Sanmenxia','CHN',120523), (2190,'Heyuan','CHN',120101), (2191,'Manzhouli','CHN',120023), (2192,'Lhasa','CHN',120000), (2193,'Lianyuan','CHN',118858), (2194,'Kuytun','CHN',118553), (2195,'Puqi','CHN',117264), (2196,'Hongjiang','CHN',116188), (2197,'Qinzhou','CHN',114586), (2198,'Renqiu','CHN',114256), (2199,'Yuyao','CHN',114065), (2200,'Guigang','CHN',114025);
INSERT INTO countrylanguage VALUES  ('EST','Finnish',0.7), ('USA','Italian',0.6), ('AGO','Chokwe',4.2), ('AUS','Vietnamese',0.8), ('BGD','Santhali',0.1), ('BEL','Turkish',0.9), ('BEN','Somba',6.7), ('BFA','Dyula',2.6), ('ERI','Saho',3.0), ('ZAF','Tswana',8.1), ('ETH','Sidamo',3.2), ('PHL','Waray-waray',3.8), ('GEO','Abhyasi',1.7), ('GHA','Joruba',1.3), ('GIN','Yalunka',2.9), ('GNB','Mandyako',4.9), ('IDN','Batakki',2.2), ('IND','Urdu',5.1), ('IRN','Mazandarani',3.6), ('ITA','Albaniana',0.2), ('AUT','Polish',0.2), ('JPN','Ainu',0.0), ('YUG','Macedonian',0.5), ('CMR','Mandara',5.7), ('CAN','Polish',0.7), ('KAZ','Tatar',2.0), ('KEN','Gusii',6.1), ('CAF','Mbum',6.4), ('CHN','Uighur',0.6), ('KGZ','Kazakh',0.8), ('COG','Sango',2.6), ('COD','Ngala and Bangi',5.8), ('LVA','Lithuanian',1.2), ('LBR','Mano',7.2), ('MYS','Dusun',1.1), ('MLI','Songhai',6.9), ('MRT','Zenaga',1.2), ('MUS','Marathi',0.7), ('MEX','OtomÃ­',0.4), ('FSM','Wolea',3.7), ('MNG','Dariganga',1.4), ('MOZ','Tswa',6.0), ('MMR','Chin',2.2), ('NAM','Caprivi',4.7), ('NPL','Newari',3.7), ('NGA','Kanuri',4.1), ('PAK','Balochi',3.0), ('PAN','Arabic',0.6), ('MNP','Carolinian',4.8), ('FRA','Turkish',0.4), ('ROM','Serbo-Croatian',0.1), ('SWE','Norwegian',0.5), ('DEU','Polish',0.3), ('ZMB','Nsenga',4.3), ('SEN','Soninke',1.3), ('SLE','Ful',3.8), ('SDN','Zande',2.7), ('TWN','Paiwan',0.3), ('TZA','Nyakusa',5.4), ('DNK','Swedish',0.3), ('THA','Kuy',1.1), ('TGO','Moba',5.4), ('TCD','Hadjarai',6.7), ('CZE','Silesiana',0.4), ('UGA','Lango',5.9), ('UKR','Belorussian',0.3), ('HUN','Slovak',0.1), ('UZB','Tatar',1.8), ('RUS','Chechen',0.6), ('VNM','Khmer',1.4), ('USA','Chinese',0.6), ('AGO','Luvale',3.6), ('AUS','Serbo-Croatian',0.6), ('BGD','Tripuri',0.1), ('BEN','Ful',5.6), ('ZAF','Southsotho',7.6), ('ETH','Walaita',2.8), ('PHL','Pampango',3.0), ('GIN','Loma',2.3), ('IDN','Bugi',2.2), ('IND','Gujarati',4.8), ('IRN','Balochi',2.3), ('ITA','Slovene',0.2), ('AUT','Czech',0.2), ('CMR','Maka',4.9), ('CAN','Spanish',0.7), ('KEN','Meru',5.5), ('CHN','Yi',0.6), ('KGZ','Tadzhik',0.8), ('COD','Rundi',3.8), ('LBR','Loma',5.8), ('MOZ','Chuabo',5.7), ('MMR','Kachin',1.4), ('NAM','San',1.9), ('NPL','Hindi',3.0), ('NGA','Edo',3.3), ('PAK','Hindko',2.4), ('SLE','Kuranko',3.4), ('SDN','Bari',2.5), ('TZA','Chaga and Pare',4.9), ('DNK','Norwegian',0.3), ('TGO','Naudemba',4.1), ('TCD','Tandjile',6.5), ('CZE','Romani',0.3), ('UGA','Lugbara',4.7), ('UKR','Polish',0.1), ('RUS','Mordva',0.5), ('VNM','Nung',1.1), ('USA','Tagalog',0.4), ('AGO','Ambo',2.4), ('AUS','German',0.6), ('ZAF','Tsonga',4.3), ('PHL','Pangasinan',1.8), ('IDN','Banja',1.8), ('IND','Kannada',3.9), ('IRN','Arabic',2.2), ('ITA','Romani',0.2), ('AUT','Romanian',0.2), ('CMR','Masana',3.9), ('CAN','Portuguese',0.7), ('KEN','Nyika',4.8), ('CHN','Tujia',0.5), ('COD','Teke',2.7), ('LBR','Malinke',5.1), ('MOZ','Ronga',3.7), ('MMR','Kayah',0.4), ('NAM','German',0.9), ('NGA','Tiv',2.3), ('PAK','Brahui',1.2), ('SLE','Yalunka',3.4), ('SDN','Fur',2.1), ('TZA','Luguru',4.9), ('TGO','Gurma',3.4), ('TCD','Gorane',6.2), ('CZE','Hungarian',0.2), ('UGA','Gisu',4.5), ('RUS','Kazakh',0.4), ('VNM','Miao',0.9), ('USA','Polish',0.3), ('AGO','Luchazi',2.4), ('ZAF','Swazi',2.5), ('PHL','Maguindanao',1.4), ('IDN','Bali',1.7), ('IND','Malajalam',3.6), ('IRN','Bakhtyari',1.7), ('CAN','Punjabi',0.7), ('KEN','Masai',1.6), ('CHN','Mongolian',0.4), ('COD','Boa',2.3), ('MOZ','Marendje',3.5), ('NGA','Ijo',1.8), ('SDN','Chilluk',1.7), ('TZA','Shambala',4.3), ('UGA','Acholi',4.4), ('RUS','Avarian',0.4), ('VNM','Man',0.7), ('USA','Korean',0.3), ('ZAF','Venda',2.2), ('PHL','Maranao',1.3), ('IND','Orija',3.3), ('IRN','Turkmenian',1.6), ('CAN','Ukrainian',0.6), ('KEN','Turkana',1.4), ('CHN','Tibetan',0.4), ('COD','Chokwe',1.8), ('MOZ','Nyanja',3.3), ('NGA','Bura',1.6), ('SDN','Lotuko',1.5), ('TZA','Gogo',3.9), ('UGA','Rwanda',3.2), ('RUS','Mari',0.4), ('USA','Vietnamese',0.2), ('ZAF','Ndebele',1.5), ('IND','Punjabi',2.8), ('CAN','Dutch',0.5), ('CHN','Puyi',0.2), ('TZA','Ha',3.5), ('RUS','Udmur',0.3), ('USA','Japanese',0.2), ('IND','Asami',1.5), ('CAN','Eskimo Languages',0.1), ('CHN','Dong',0.2), ('RUS','Belorussian',0.3), ('USA','Portuguese',0.2);
ANALYZE TABLE country, city, countrylanguage;
ANALYZE TABLE city, country, countrylanguage;
show variables like 'join_buffer_size';
EXPLAIN SELECT city.Name, country.Name FROM city,country WHERE city.country=country.Code AND  country.Name LIKE 'L%' AND city.Population > 100000;
SELECT city.Name, country.Name FROM city,country WHERE city.country=country.Code AND  country.Name LIKE 'L%' AND city.Population > 100000;
EXPLAIN SELECT city.Name, country.Name, countrylanguage.Language FROM city,country,countrylanguage WHERE city.country=country.Code AND countrylanguage.country=country.Code AND city.Name LIKE 'L%' AND country.Population > 3000000 AND countrylanguage.Percentage > 50;
SELECT city.Name, country.Name, countrylanguage.Language FROM city,country,countrylanguage WHERE city.country=country.Code AND countrylanguage.country=country.Code AND city.Name LIKE 'L%' AND country.Population > 3000000 AND countrylanguage.Percentage > 50;
EXPLAIN SELECT Name FROM city WHERE city.country IN (SELECT Code FROM country WHERE country.Name LIKE 'L%') AND city.Population > 100000;
SELECT Name FROM city WHERE city.country IN (SELECT Code FROM country WHERE country.Name LIKE 'L%') AND city.Population > 100000;
EXPLAIN SELECT country.Name, IF(ISNULL(countrylanguage.country), NULL, countrylanguage.Percentage) FROM country LEFT JOIN countrylanguage ON (countrylanguage.country=country.Code AND Language='English') WHERE  country.Population > 10000000;
SELECT country.Name, IF(ISNULL(countrylanguage.country), NULL, countrylanguage.Percentage) FROM country LEFT JOIN countrylanguage ON (countrylanguage.country=country.Code AND Language='English') WHERE  country.Population > 10000000;
set join_buffer_size=256;
show variables like 'join_buffer_size';
EXPLAIN SELECT city.Name, country.Name FROM city,country WHERE city.country=country.Code AND  country.Name LIKE 'L%' AND city.Population > 100000;
SELECT city.Name, country.Name FROM city,country WHERE city.country=country.Code AND  country.Name LIKE 'L%' AND city.Population > 100000;
EXPLAIN SELECT city.Name, country.Name, countrylanguage.Language FROM city,country,countrylanguage WHERE city.country=country.Code AND countrylanguage.country=country.Code AND city.Name LIKE 'L%' AND country.Population > 3000000 AND countrylanguage.Percentage > 50;
SELECT city.Name, country.Name, countrylanguage.Language FROM city,country,countrylanguage WHERE city.country=country.Code AND countrylanguage.country=country.Code AND city.Name LIKE 'L%' AND country.Population > 3000000 AND countrylanguage.Percentage > 50;
EXPLAIN SELECT Name FROM city WHERE city.country IN (SELECT Code FROM country WHERE country.Name LIKE 'L%') AND city.Population > 100000;
SELECT Name FROM city WHERE city.country IN (SELECT Code FROM country WHERE country.Name LIKE 'L%') AND city.Population > 100000;
set join_buffer_size=default;
show variables like 'join_buffer_size';
SELECT city.Name, country.Name FROM city,country WHERE city.country=country.Code AND city.Population > 3000000;
set join_buffer_size=256;
EXPLAIN SELECT city.Name, country.Name FROM city,country WHERE city.country=country.Code AND city.Population > 3000000;
SELECT city.Name, country.Name FROM city,country WHERE city.country=country.Code AND city.Population > 3000000;
set join_buffer_size=default;
ALTER TABLE country MODIFY Name varchar(52) NOT NULL default '';
SELECT city.Name, country.Name FROM city,country WHERE city.country=country.Code AND  country.Name LIKE 'L%' AND city.Population > 100000;
ALTER TABLE country MODIFY Name varchar(250) NOT NULL default '';
SELECT city.Name, country.Name FROM city,country WHERE city.country=country.Code AND  country.Name LIKE 'L%' AND city.Population > 100000;
ALTER TABLE country ADD COLUMN PopulationBar text;
UPDATE country  SET PopulationBar=REPEAT('x', CAST(Population/100000 AS unsigned int));
SELECT city.Name, country.Name, country.PopulationBar FROM city,country WHERE city.country=country.Code AND  country.Name LIKE 'L%' AND city.Population > 100000;
set join_buffer_size=256;
SELECT city.Name, country.Name, country.PopulationBar FROM city,country WHERE city.country=country.Code AND  country.Name LIKE 'L%' AND city.Population > 100000;
set join_buffer_size=default;
DROP DATABASE world;
use test;
CREATE TABLE t1( affiliatetometaid int  NOT NULL default '0', uniquekey int NOT NULL default '0', metaid int  NOT NULL default '0', affiliateid int  NOT NULL default '0', xml text, isactive char(1) NOT NULL default 'Y', PRIMARY KEY  (affiliatetometaid) );
CREATE UNIQUE INDEX t1_uniquekey ON t1(uniquekey);
CREATE INDEX t1_affiliateid ON t1(affiliateid);
CREATE INDEX t1_metaid on t1 (metaid);
INSERT INTO t1 VALUES (1616, 1571693233, 1391, 2, NULL, 'Y'), (1943, 1993216749, 1726, 2, NULL, 'Y');
CREATE TABLE t2( metaid int  NOT NULL default '0', name varchar(80) NOT NULL default '', dateadded timestamp NOT NULL , xml text, status int default NULL, origin int default NULL, gid int NOT NULL default '1', formattypeid int  default NULL, PRIMARY KEY  (metaid) );
CREATE INDEX t2_status ON t2(status);
CREATE INDEX t2_gid ON t2(gid);
CREATE INDEX t2_formattypeid ON t2(formattypeid);
INSERT INTO t2 VALUES (1391, "I Just Died", "2003-10-02 10:07:37", "", 1, NULL, 3, NULL), (1726, "Me, Myself & I", "2003-12-05 11:24:36", " ", 1, NULL, 3, NULL);
CREATE TABLE t3( mediaid int  NOT NULL , metaid int  NOT NULL default '0', formatid int  NOT NULL default '0', status int default NULL, path varchar(100) NOT NULL default '', datemodified timestamp NOT NULL , resourcetype int  NOT NULL default '1', parameters text, signature int  default NULL, quality int  NOT NULL default '255', PRIMARY KEY  (mediaid) );
CREATE INDEX t3_metaid ON t3(metaid);
CREATE INDEX t3_formatid ON t3(formatid);
CREATE INDEX t3_status ON t3(status);
CREATE INDEX t3_metaidformatid ON t3(metaid,formatid);
CREATE INDEX t3_signature ON t3(signature);
CREATE INDEX t3_quality ON t3(quality);
INSERT INTO t3 VALUES (6, 4, 8, 0, "010101_anastacia_spmidi.mid", "2004-03-16 13:40:00", 1, NULL, NULL, 255), (3343, 3, 8, 1, "010102_4VN4bsPwnxRQUJW5Zp1RhG2IL9vvl_8.mid", "2004-03-16 13:40:00", 1, NULL, NULL, 255);
CREATE TABLE t4( formatid int  NOT NULL , name varchar(60) NOT NULL default '', formatclassid int  NOT NULL default '0', mime varchar(60) default NULL, extension varchar(10) default NULL, priority int NOT NULL default '0', canaddtocapability char(1) NOT NULL default 'Y', PRIMARY KEY  (formatid) );
CREATE INDEX t4_formatclassid ON t4(formatclassid);
CREATE INDEX t4_formats_idx ON t4(canaddtocapability);
INSERT INTO t4 VALUES (19, "XHTML", 11, "text/html", "xhtml", 10, 'Y'), (54, "AMR (wide band)", 13, "audio/amr-wb", "awb", 0, 'Y');
CREATE TABLE t5( formatclassid int  NOT NULL , name varchar(60) NOT NULL default '', priority int NOT NULL default '0', formattypeid int  NOT NULL default '0', PRIMARY KEY  (formatclassid) );
CREATE INDEX t5_formattypeid on t5(formattypeid);
INSERT INTO t5 VALUES (11, "Info", 0, 4), (13, "Digital Audio", 0, 2);
CREATE TABLE t6( formattypeid int  NOT NULL , name varchar(60) NOT NULL default '', priority int default NULL, PRIMARY KEY  (formattypeid) );
INSERT INTO t6 VALUES (2, "Ringtones", 0);
CREATE TABLE t7( metaid int  NOT NULL default '0', artistid int  NOT NULL default '0', PRIMARY KEY  (metaid,artistid) );
INSERT INTO t7 VALUES (4, 5), (3, 4);
CREATE TABLE t8( artistid int  NOT NULL , name varchar(80) NOT NULL default '', PRIMARY KEY  (artistid) );
INSERT INTO t8 VALUES (5, "Anastacia"), (4, "John Mayer");
CREATE TABLE t9( subgenreid int  NOT NULL default '0', metaid int  NOT NULL default '0', PRIMARY KEY  (subgenreid,metaid) ) ;
CREATE INDEX t9_subgenreid ON t9(subgenreid);
CREATE INDEX t9_metaid ON t9(metaid);
INSERT INTO t9 VALUES  (138, 4), (31, 3);
CREATE TABLE t10( subgenreid int  NOT NULL , genreid int  NOT NULL default '0', name varchar(80) NOT NULL default '', PRIMARY KEY  (subgenreid) ) ;
CREATE INDEX t10_genreid ON t10(genreid);
INSERT INTO t10 VALUES  (138, 19, ''), (31, 3, '');
CREATE TABLE t11( genreid int  NOT NULL default '0', name char(80) NOT NULL default '', priority int NOT NULL default '0', masterclip char(1) default NULL, PRIMARY KEY  (genreid) ) ;
CREATE INDEX t11_masterclip ON t11( masterclip);
INSERT INTO t11 VALUES (19, "Pop & Dance", 95, 'Y'), (3, "Rock & Alternative", 100, 'Y');
ANALYZE TABLE t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11;
EXPLAIN SELECT t1.uniquekey, t1.xml AS affiliateXml, t8.name AS artistName, t8.artistid,  t11.name AS genreName, t11.genreid, t11.priority AS genrePriority, t10.subgenreid, t10.name AS subgenreName, t2.name AS metaName, t2.metaid, t2.xml AS metaXml, t4.priority + t5.priority + t6.priority AS overallPriority, t3.path AS path, t3.mediaid,  t4.formatid, t4.name AS formatName,  t5.formatclassid, t5.name AS formatclassName,  t6.formattypeid, t6.name AS formattypeName  FROM t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11 WHERE t7.metaid = t2.metaid AND t7.artistid = t8.artistid AND t9.metaid = t2.metaid AND t9.subgenreid = t10.subgenreid AND  t10.genreid = t11.genreid AND  t3.metaid = t2.metaid AND t3.formatid = t4.formatid AND t4.formatclassid = t5.formatclassid AND t4.canaddtocapability =  'Y' AND t5.formattypeid = t6.formattypeid AND t6.formattypeid IN (2) AND (t3.formatid IN (31, 8, 76)) AND t1.metaid = t2.metaid AND t1.affiliateid = '2';
SELECT t1.uniquekey, t1.xml AS affiliateXml, t8.name AS artistName, t8.artistid,  t11.name AS genreName, t11.genreid, t11.priority AS genrePriority, t10.subgenreid, t10.name AS subgenreName, t2.name AS metaName, t2.metaid, t2.xml AS metaXml, t4.priority + t5.priority + t6.priority AS overallPriority, t3.path AS path, t3.mediaid,  t4.formatid, t4.name AS formatName,  t5.formatclassid, t5.name AS formatclassName,  t6.formattypeid, t6.name AS formattypeName  FROM t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11 WHERE t7.metaid = t2.metaid AND t7.artistid = t8.artistid AND t9.metaid = t2.metaid AND t9.subgenreid = t10.subgenreid AND  t10.genreid = t11.genreid AND  t3.metaid = t2.metaid AND t3.formatid = t4.formatid AND t4.formatclassid = t5.formatclassid AND t4.canaddtocapability =  'Y' AND t5.formattypeid = t6.formattypeid AND t6.formattypeid IN (2) AND (t3.formatid IN (31, 8, 76)) AND t1.metaid = t2.metaid AND t1.affiliateid = '2';
DROP TABLE t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11;
CREATE TABLE t1 (a1 int, filler1 char(64) default ' ' );
CREATE TABLE t2 ( a2 int, b2 int, filler2 char(64) default ' ',  PRIMARY KEY idx(a2,b2,filler2) ) ;
CREATE TABLE t3 (b3 int, c3 int, INDEX idx(b3));
INSERT INTO t1(a1) VALUES  (4), (7), (1), (9), (8), (5), (3), (6), (2);
INSERT INTO t2(a2,b2) VALUES (1,30), (3,40), (2,61), (6,73), (8,92), (9,27), (4,18), (5,84), (7,56), (4,14), (6,76), (8,98), (7,55), (1,39), (2,68), (3,45), (9,21), (5,81), (5,88), (2,65), (6,74), (9,23), (1,37), (3,44), (4,17), (8,99), (7,51), (9,28), (7,52), (1,33), (4,13), (5,87), (3,43), (8,91), (2,62), (6,79), (3,49), (8,93), (7,34), (5,82), (6,78), (2,63), (1,32), (9,22), (4,11);
INSERT INTO t3 VALUES (30,302), (92,923), (18,187), (45,459), (30,309),  (39,393), (68,685), (45,458), (21,210), (81,817), (40,405), (61,618), (73,738), (92,929), (27,275), (18,188), (84,846), (56,564), (14,144), (76,763),  (98,982), (55,551), (17,174), (99,998), (51,513), (28,282), (52,527), (33,336), (13,138), (87,878),  (43,431), (91,916), (62,624), (79,797), (49,494), (93,933), (34,347), (82,829), (78,780), (63,634),  (32,329), (22,228), (11,114), (74,749), (23,236);
ANALYZE TABLE t1, t2, t3;
EXPLAIN SELECT a1<>a2, a1, a2, b2, b3, c3, SUBSTR(filler1,1,1) AS s1, SUBSTR(filler2,1,1) AS s2 FROM t1,t2,t3 WHERE a1=a2 AND b2=b3 AND MOD(c3,10)>7;
SELECT a1<>a2, a1, a2, b2, b3, c3, SUBSTR(filler1,1,1) AS s1, SUBSTR(filler2,1,1) AS s2 FROM t1,t2,t3 WHERE a1=a2 AND b2=b3 AND MOD(c3,10)>7;
set join_buffer_size=512;
EXPLAIN SELECT a1<>a2, a1, a2, b2, b3, c3, SUBSTR(filler1,1,1) AS s1, SUBSTR(filler2,1,1) AS s2 FROM t1,t2,t3 WHERE a1=a2 AND b2=b3 AND MOD(c3,10)>7;
SELECT a1<>a2, a1, a2, b2, b3, c3, SUBSTR(filler1,1,1) AS s1, SUBSTR(filler2,1,1) AS s2 FROM t1,t2,t3 WHERE a1=a2 AND b2=b3 AND MOD(c3,10)>7;
DROP TABLE t1,t2,t3;
CREATE TABLE t1 (a int, b int, INDEX idx(b));
CREATE TABLE t2 (a int, b int, INDEX idx(a));
INSERT INTO t1 VALUES (5,30), (3,20), (7,40), (2,10), (8,30), (1,10), (4,20);
INSERT INTO t2 VALUES (7,10), (1,20), (2,20), (8,20), (8,10), (1,20);
INSERT INTO t2 VALUES (1,10), (4,20), (3,20), (7,20), (7,10), (1,20);
set join_buffer_size=32;
ANALYZE TABLE t1, t2;
EXPLAIN SELECT * FROM t1,t2 WHERE t1.a=t2.a AND t1.b >= 30;
SELECT * FROM t1,t2 WHERE t1.a=t2.a AND t1.b >= 30;
DROP TABLE t1,t2;
create table t1(a int PRIMARY KEY, b int);
insert into t1 values (5, 10), (2, 70), (7, 80), (6, 20), (1, 50), (9, 40), (8, 30), (3, 60);
create table t2 (p int, a int, INDEX i_a(a));
insert into t2 values (103, 7), (109, 3), (102, 3), (108, 1), (106, 3), (107, 7), (105, 1), (101, 3), (100, 7), (110, 1);
ANALYZE TABLE t1, t2;
explain select t1.a, count(t2.p) as count from t1 left join t2 on t1.a=t2.a and t2.p % 2 = 1 group by t1.a;
select t1.a, count(t2.p) as count from t1 left join t2 on t1.a=t2.a and t2.p % 2 = 1 group by t1.a order by t1.a;
drop table t1, t2;
set join_buffer_size=default;
CREATE TABLE t1 (a int NOT NULL);
INSERT INTO t1 VALUES (2), (4), (3), (5), (1);
CREATE TABLE t2 (a int NOT NULL, b int NOT NULL, INDEX i_a(a));
INSERT INTO t2 VALUES (4,10), (2,10), (2,30), (2,20), (4,20);
ANALYZE TABLE t1, t2;
EXPLAIN SELECT * FROM t1 LEFT JOIN t2 ON t1.a=t2.a WHERE t2.b IS NULL;
SELECT * FROM t1 LEFT JOIN t2 ON t1.a=t2.a WHERE t2.b IS NULL;
DROP TABLE t1, t2;
CREATE TABLE t2 (a int, b int, c int);
CREATE TABLE t3 (a int, b int, c int);
CREATE TABLE t4 (a int, b int, c int);
INSERT INTO t2 VALUES (3,3,0), (4,2,0), (5,3,0);
INSERT INTO t3 VALUES (1,2,0), (2,2,0);
INSERT INTO t4 VALUES (3,2,0), (4,2,0);
SELECT t2.a,t2.b,t3.a,t3.b,t4.a,t4.b FROM t2 LEFT JOIN (t3, t4) ON t2.b=t4.b WHERE t3.a+2<t2.a OR t3.c IS NULL;
DROP TABLE t2, t3, t4;
create table t1 (a int, b int);
insert into t1 values (2, 20), (3, 30), (1, 10);
create table t2 (a int, c int);
insert into t2 values (1, 101), (3, 102), (1, 100);
ANALYZE TABLE t1, t2;
select * from t1 left join t2 on t1.a=t2.a;
explain select * from t1 left join t2 on t1.a=t2.a where t2.c=102 or t2.c is null;
select * from t1 left join t2 on t1.a=t2.a where t2.c=102 or t2.c is null;
drop table t1, t2;
create table t1 (a int);
insert into t1 values (30), (40), (20);
create table t2 (b int);
insert into t2 values (200), (100);
ANALYZE TABLE t1, t2;
select * from t1 left join t2 on (1=0);
explain select * from t1 left join t2 on (1=0) where a=40;
select * from t1 left join t2 on (1=0) where a=40;
drop table t1, t2;
CREATE TABLE t1 (a int);
INSERT INTO t1 VALUES (0);
INSERT INTO t1(a) SELECT a FROM t1;
INSERT INTO t1(a) SELECT a FROM t1;
INSERT INTO t1(a) SELECT a FROM t1;
INSERT INTO t1(a) SELECT a FROM t1;
INSERT INTO t1(a) SELECT a FROM t1;
INSERT INTO t1(a) SELECT a FROM t1;
INSERT INTO t1(a) SELECT a FROM t1;
INSERT INTO t1(a) SELECT a FROM t1;
INSERT INTO t1(a) SELECT a FROM t1;
INSERT INTO t1(a) SELECT a FROM t1;
INSERT INTO t1(a) SELECT a FROM t1;
INSERT INTO t1 VALUES (20000), (10000);
CREATE TABLE t2 (pk int AUTO_INCREMENT PRIMARY KEY, b int, c int, INDEX idx(b));
INSERT INTO t2(b,c) VALUES (10000, 3), (20000, 7), (20000, 1), (10000, 9), (20000, 5);
INSERT INTO t2(b,c) SELECT b,c FROM t2;
INSERT INTO t2(b,c) SELECT b,c FROM t2;
INSERT INTO t2(b,c) SELECT b,c FROM t2;
INSERT INTO t2(b,c) SELECT b,c FROM t2;
INSERT INTO t2(b,c) SELECT b,c FROM t2;
INSERT INTO t2(b,c) SELECT b,c FROM t2;
INSERT INTO t2(b,c) SELECT b,c FROM t2;
INSERT INTO t2(b,c) SELECT b,c FROM t2;
ANALYZE TABLE t1,t2;
set join_buffer_size=1024;
EXPLAIN SELECT AVG(c) FROM t1,t2 WHERE t1.a=t2.b;
SELECT AVG(c) FROM t1,t2 WHERE t1.a=t2.b;
set join_buffer_size=default;
DROP TABLE t1, t2;
CREATE TABLE t1 (a int NOT NULL AUTO_INCREMENT PRIMARY KEY, b varchar(127) DEFAULT NULL);
INSERT INTO t1(a) VALUES (1);
INSERT INTO t1(b) SELECT b FROM t1;
INSERT INTO t1(b) SELECT b FROM t1;
INSERT INTO t1(b) SELECT b FROM t1;
INSERT INTO t1(b) SELECT b FROM t1;
INSERT INTO t1(b) SELECT b FROM t1;
INSERT INTO t1(b) SELECT b FROM t1;
INSERT INTO t1(b) SELECT b FROM t1;
INSERT INTO t1(b) SELECT b FROM t1;
INSERT INTO t1(b) SELECT b FROM t1;
INSERT INTO t1(b) SELECT b FROM t1;
INSERT INTO t1(b) SELECT b FROM t1;
INSERT INTO t1(b) SELECT b FROM t1;
INSERT INTO t1(b) SELECT b FROM t1;
INSERT INTO t1(b) SELECT b FROM t1;
CREATE TABLE t2 (a int NOT NULL PRIMARY KEY, b varchar(127) DEFAULT NULL);
INSERT INTO t2 SELECT * FROM t1;
CREATE TABLE t3 (a int NOT NULL PRIMARY KEY, b varchar(127) DEFAULT NULL);
INSERT INTO t3 SELECT * FROM t1;
set join_buffer_size=1024*1024;
ANALYZE TABLE t1, t2, t3;
EXPLAIN SELECT COUNT(*) FROM t1,t2,t3 WHERE t1.a=t2.a AND t2.a=t3.a AND t1.b IS NULL AND t2.b IS NULL AND t3.b IS NULL;
SELECT COUNT(*) FROM t1,t2,t3 WHERE t1.a=t2.a AND t2.a=t3.a AND t1.b IS NULL AND t2.b IS NULL AND t3.b IS NULL;
set join_buffer_size=default;
DROP TABLE t1,t2,t3;
CREATE TABLE t1 ( a bigint NOT NULL, PRIMARY KEY (a)  );
INSERT INTO t1 VALUES (2), (1);
CREATE TABLE t2 ( a bigint NOT NULL, b bigint NOT NULL, PRIMARY KEY (a,b) );
INSERT INTO t2 VALUES (2,30), (2,40), (2,50), (2,60), (2,70), (2,80), (1,10), (1, 20), (1,30), (1,40), (1,50);
CREATE TABLE t3 ( pk bigint NOT NULL AUTO_INCREMENT, a bigint NOT NULL, b bigint NOT NULL, val bigint DEFAULT '0', PRIMARY KEY (pk), KEY idx (a,b) );
INSERT INTO t3(a,b) VALUES (2,30), (2,40), (2,50), (2,60), (2,70), (2,80), (4,30), (4,40), (4,50), (4,60), (4,70), (4,80), (5,30), (5,40), (5,50), (5,60), (5,70), (5,80), (7,30), (7,40), (7,50), (7,60), (7,70), (7,80);
SELECT t1.a, t2.a, t3.a, t2.b, t3.b, t3.val  FROM (t1,t2) LEFT JOIN t3 ON (t1.a=t3.a AND t2.b=t3.b)  WHERE t1.a=t2.a;
set join_buffer_size=256;
ANALYZE TABLE t1, t2, t3;
EXPLAIN SELECT t1.a, t2.a, t3.a, t2.b, t3.b, t3.val  FROM (t1,t2) LEFT JOIN t3 ON (t1.a=t3.a AND t2.b=t3.b)  WHERE t1.a=t2.a;
SELECT t1.a, t2.a, t3.a, t2.b, t3.b, t3.val  FROM (t1,t2) LEFT JOIN t3 ON (t1.a=t3.a AND t2.b=t3.b)  WHERE t1.a=t2.a;
DROP INDEX idx ON t3;
ANALYZE TABLE t1, t2, t3;
EXPLAIN SELECT t1.a, t2.a, t3.a, t2.b, t3.b, t3.val  FROM (t1,t2) LEFT JOIN t3 ON (t1.a=t3.a AND t2.b=t3.b)  WHERE t1.a=t2.a;
SELECT t1.a, t2.a, t3.a, t2.b, t3.b, t3.val  FROM (t1,t2) LEFT JOIN t3 ON (t1.a=t3.a AND t2.b=t3.b)  WHERE t1.a=t2.a;
set join_buffer_size=default;
DROP TABLE t1,t2,t3;
create table t1(f1 int, f2 int);
insert into t1 values (1,1),(2,2),(3,3);
create table t2(f1 int not null, f2 int not null, f3 char(200), key(f1,f2));
insert into t2 values (1,1, 'qwerty'),(1,2, 'qwerty'),(1,3, 'qwerty');
insert into t2 values (2,1, 'qwerty'),(2,2, 'qwerty'),(2,3, 'qwerty'), (2,4, 'qwerty'),(2,5, 'qwerty');
insert into t2 values (3,1, 'qwerty'),(3,4, 'qwerty');
insert into t2 values (4,1, 'qwerty'),(4,2, 'qwerty'),(4,3, 'qwerty'), (4,4, 'qwerty');
insert into t2 values (1,1, 'qwerty'),(1,2, 'qwerty'),(1,3, 'qwerty');
insert into t2 values (2,1, 'qwerty'),(2,2, 'qwerty'),(2,3, 'qwerty'), (2,4, 'qwerty'),(2,5, 'qwerty');
insert into t2 values (3,1, 'qwerty'),(3,4, 'qwerty');
insert into t2 values (4,1, 'qwerty'),(4,2, 'qwerty'),(4,3, 'qwerty'), (4,4, 'qwerty');
ANALYZE TABLE t1, t2;
select t2.f1, t2.f2, t2.f3 from t1,t2 where t1.f1=t2.f1 and t2.f2 between t1.f1 and t1.f2 and t2.f2 + 1 >= t1.f1 + 1;
explain select t2.f1, t2.f2, t2.f3 from t1,t2 where t1.f1=t2.f1 and t2.f2 between t1.f1 and t2.f2;
drop table t1,t2;
create table t1 (d int, id1 int, index idx1 (d, id1));
insert into t1 values (3, 20), (2, 40), (3, 10), (1, 10), (3, 20), (1, 40), (2, 30), (3, 30);
create table t2 (id1 int, id2 int, index idx2 (id1));
insert into t2 values  (20, 100), (30, 400), (20, 400), (30, 200), (10, 300), (10, 200), (40, 100), (40, 200), (30, 300), (10, 400), (20, 200), (20, 300);
ANALYZE TABLE t1, t2;
explain select t1.id1, sum(t2.id2) from t1 join t2 on t1.id1=t2.id1  where t1.d=3 group by t1.id1;
select t1.id1, sum(t2.id2) from t1 join t2 on t1.id1=t2.id1  where t1.d=3 group by t1.id1;
explain select t1.id1  from t1 join t2 on t1.id1=t2.id1  where t1.d=3 and t2.id2 > 200 order by t1.id1;
select t1.id1  from t1 join t2 on t1.id1=t2.id1  where t1.d=3 and t2.id2 > 200 order by t1.id1;
drop table t1,t2;
create table t1 (a int, b int, c int, d int);
create table t2 (b int, e varchar(16), index idx(b));
create table t3 (d int, f varchar(16), index idx(d));
create table t4 (c int, g varchar(16), index idx(c));
insert into t1 values (5, 50, 500, 5000), (3, 30, 300, 3000), (9, 90, 900, 9000), (2, 20, 200, 2000), (4, 40, 400, 4000), (8, 80, 800, 800), (7, 70, 700, 7000);
insert into t2 values (30, 'bbb'), (10, 'b'), (70, 'bbbbbbb'), (60, 'bbbbbb'), (31, 'bbb'), (11, 'b'), (71, 'bbbbbbb'), (61, 'bbbbbb'), (32, 'bbb'), (12, 'b'), (72, 'bbbbbbb'), (62, 'bbbbbb');
insert into t3 values (4000, 'dddd'), (3000, 'ddd'), (1000, 'd'), (8000, 'dddddddd'), (4001, 'dddd'), (3001, 'ddd'), (1001, 'd'), (8001, 'dddddddd'), (4002, 'dddd'), (3002, 'ddd'), (1002, 'd'), (8002, 'dddddddd');
insert into t4 values (200, 'cc'), (600, 'cccccc'), (300, 'ccc'), (500, 'ccccc'), (201, 'cc'), (601, 'cccccc'), (301, 'ccc'), (501, 'ccccc'), (202, 'cc'), (602, 'cccccc'), (302, 'ccc'), (502, 'ccccc');
analyze table t2,t3,t4;
ANALYZE TABLE t1, t2, t3, t4;
explain  select t1.a, t1.b, t1.c, t1.d, t2.e, t3.f, t4.g from t1,t2,t3,t4 where t2.b=t1.b and t3.d=t1.d and t4.c=t1.c;
select t1.a, t1.b, t1.c, t1.d, t2.e, t3.f, t4.g from t1,t2,t3,t4 where t2.b=t1.b and t3.d=t1.d and t4.c=t1.c;
drop table t1,t2,t3,t4;
CREATE TABLE t1 ( id1 bigint(20) DEFAULT NULL, id2 bigint(20) DEFAULT NULL, id3 bigint(20) DEFAULT NULL, num1 bigint(20) DEFAULT NULL, num2 int(11) DEFAULT NULL, num3 bigint(20) DEFAULT NULL );
CREATE TABLE t2 ( id3 bigint(20) NOT NULL DEFAULT '0', id4 bigint(20) DEFAULT NULL, enum1 enum('Enabled','Disabled','Paused') DEFAULT NULL, PRIMARY KEY (id3) );
CREATE TABLE t3 ( id4 bigint(20) NOT NULL DEFAULT '0', text1 text, PRIMARY KEY (id4) );
CREATE TABLE t4 ( id2 bigint(20) NOT NULL DEFAULT '0', dummy int(11) DEFAULT '0', PRIMARY KEY (id2) );
CREATE TABLE t5 ( id1 bigint(20) NOT NULL DEFAULT '0', id2 bigint(20) NOT NULL DEFAULT '0', enum2 enum('Active','Deleted','Paused') DEFAULT NULL, PRIMARY KEY (id1,id2) );
INSERT INTO t1 VALUES  (228172702,72485641,2667134182,10,1,14),(228172702,94266195,2667134182,134,0,134), (228172702,94266195,2667134182,15,0,15),(228172702,94266195,2667134182,2,0,3), (228172702,818095880,2667134182,1,1,1),(228172702,1004959639,2667134182,3,0,3), (228172702,1297484422,2667134182,1,2,1),(228172702,1730911800,2667134182,11,0,28), (228172702,1730911800,2667134182,4,0,4),(228172702,2182755982,2667134182,5,0,15), (228172702,2182755982,2667134182,1,0,1),(228172702,2968841184,2667134182,1,0,1), (228172702,4765525626,2667134182,2,0,3),(228172702,4765525626,2667134182,29,0,38), (228172702,4765525626,2667134182,7,0,7),(228172702,4765525626,2667134182,7,0,8), (228172702,5330573302,2667134182,1,0,1),(228512602,191149872,935692942,3,0,17), (228512602,259118753,935692942,13,7,13),(228512602,259118753,935692942,83,33,83), (228512602,585705465,935692942,1,0,1),(228512602,585716775,935692942,1,0,1), (228512602,585716775,935692942,6,6,6),(228512602,585716775,935692942,1,1,1), (228512602,1105371172,935692942,2,0,3),(228512602,1105371172,935692942,7,2,7), (228512602,1314223462,935692942,1,0,1),(228512602,1314223642,935692942,1,1,1), (228512602,1411060522,935692942,1,0,1),(228512602,1467398182,935692942,1,0,1), (228512602,1467398182,935692942,3,0,4),(228512602,1467398242,935692942,10,0,41), (228512602,1467398242,935692942,28,0,40),(228512602,1467398242,935692942,0,0,0), (228512602,1467398242,935692942,29,2,33),(228512602,1734178942,935692942,1,0,1), (228512602,1734179122,935692942,1,0,4),(228512602,1734179122,935692942,3,0,6), (228512602,1953612870,935692942,1,0,1),(228512602,2271510562,935692942,1,1,1), (228512602,2271525022,935692942,0,0,0),(228512602,3058831402,935692942,1,1,1), (228512602,3723638842,935692942,1,1,1),(228512602,3723638842,935692942,4,3,4), (228512602,3723836602,935692942,1,1,1),(228512602,3723836842,935692942,1,1,1), (228512602,3723836962,935692942,1,1,1),(228512602,3723988102,935692942,11,4,11), (228512602,3723989182,935692942,8,3,8),(228512602,5920283002,935692942,1,0,1), (228512602,5920314232,935692942,1,0,1),(228512602,191149872,1241589892,0,0,0), (228512602,191149872,1241589892,2,0,4),(228512602,191149872,1241589892,0,0,0), (228512602,259118753,1241589892,8,4,8),(228512602,259118753,1241589892,70,33,70), (228512602,259118753,1241589892,1,1,1),(228512602,585716775,1241589892,8,7,8), (228512602,1105371172,1241589892,1,0,1),(228512602,1105371172,1241589892,9,0,9), (228512602,1314223462,1241589892,1,0,1),(228512602,1411060522,1241589892,1,1,1), (228512602,1467398182,1241589892,1,0,1),(228512602,1467398182,1241589892,4,1,4), (228512602,1467398182,1241589892,1,0,1),(228512602,1467398242,1241589892,10,0,28), (228512602,1467398242,1241589892,37,1,78),(228512602,1467398242,1241589892,28,9,30), (228512602,1467398242,1241589892,5,0,6),(228512602,1734179122,1241589892,3,1,18), (228512602,1734179122,1241589892,1,1,1),(228512602,1734179122,1241589892,2,0,3), (228512602,1953611430,1241589892,1,1,1),(228512602,1953611430,1241589892,1,1,1), (228512602,1953612870,1241589892,1,0,1),(228512602,2026844250,1241589892,1,0,1), (228512602,2271510562,1241589892,1,1,1),(228512602,2271525022,1241589892,1,0,1), (228512602,2941612417,1241589892,1,0,1),(228512602,3723988102,1241589892,1,0,1);
set join_buffer_size=2048;
ANALYZE TABLE t1, t2, t3, t4, t5;
EXPLAIN SELECT STRAIGHT_JOIN t1.id1, t1.num3, t3.text1, t3.id4, t2.id3, t4.dummy FROM t1 JOIN  t2 JOIN  t3 JOIN  t4 JOIN  t5  WHERE t1.id1=t5.id1 AND t1.id2=t5.id2 and  t4.id2=t1.id2 AND t5.enum2='Active' AND t3.id4=t2.id4 AND t2.id3=t1.id3 AND t3.text1<'D';
SELECT STRAIGHT_JOIN t1.id1, t1.num3, t3.text1, t3.id4, t2.id3, t4.dummy FROM t1 JOIN  t2 JOIN  t3 JOIN  t4 JOIN  t5  WHERE t1.id1=t5.id1 AND t1.id2=t5.id2 and  t4.id2=t1.id2 AND t5.enum2='Active' AND t3.id4=t2.id4 AND t2.id3=t1.id3 AND t3.text1<'D';
set join_buffer_size=default;
DROP TABLE t1,t2,t3,t4,t5;
CREATE TABLE t1 ( int_key int(11) NOT NULL, KEY int_key (int_key) );
INSERT INTO t1 VALUES (0),(2),(2),(2),(3),(4),(5),(5),(6),(6),(8),(8),(9),(9);
CREATE TABLE t2 ( int_key int(11) NOT NULL, KEY int_key (int_key) );
INSERT INTO t2 VALUES (2),(3);
set @previous_sql_mode_htnt542nh=@@sql_mode;
set sql_mode=(select replace(@@sql_mode,'ONLY_FULL_GROUP_BY',''));
SELECT  MAX(t1.int_key), t1.int_key FROM t1 STRAIGHT_JOIN t2   ORDER BY t1.int_key;
ANALYZE TABLE t1, t2;
explain  SELECT  MAX(t1.int_key), t1.int_key FROM t1 STRAIGHT_JOIN t2   ORDER BY t1.int_key;
set @@sql_mode=@previous_sql_mode_htnt542nh;
DROP TABLE t1,t2;
CREATE TABLE t1 (c1 int, c2 int, key (c2));
INSERT INTO t1 VALUES (1,1);
INSERT INTO t1 VALUES (2,2);
CREATE TABLE t2 (c1 text, c2 text);
INSERT INTO t2 VALUES('tt', 'uu');
INSERT INTO t2 VALUES('zzzz', 'xxxxxxxxx');
ANALYZE TABLE t1,t2;
SELECT t1.*, t2.*, LENGTH(t2.c1), LENGTH(t2.c2) FROM t1,t2 WHERE t1.c2=LENGTH(t2.c2) and t1.c1=LENGTH(t2.c1);
DROP TABLE t1,t2;
CREATE TABLE t1 ( i int(11) NOT NULL, v varchar(1) DEFAULT NULL, PRIMARY KEY (i) );
INSERT INTO t1 VALUES (10,'a'),(11,'b'),(12,'c'),(13,'d');
CREATE TABLE t2 ( i int(11) NOT NULL, v varchar(1) DEFAULT NULL, PRIMARY KEY (i) );
INSERT INTO t2 VALUES (1,'x'),(2,'y');
ANALYZE TABLE t1, t2;
SELECT MAX(t1.i)  FROM t1 JOIN t2 ON t2.v ORDER BY t2.v;
EXPLAIN SELECT MAX(t1.i)  FROM t1 JOIN t2 ON t2.v ORDER BY t2.v;
DROP TABLE t1,t2;
CREATE TABLE t1 (a INT, b INT);
INSERT INTO t1 VALUES (1,1),(2,2);
CREATE TABLE t2 (a INT, b INT);
INSERT INTO t2 VALUES (1,1),(2,2);
CREATE TABLE t3 (a INT, b INT);
INSERT INTO t3 VALUES (1,1),(2,2);
ANALYZE TABLE t1, t2, t3;
EXPLAIN SELECT t1.* FROM t1,t2,t3;
SELECT t1.* FROM t1,t2,t3;
DROP TABLE t1,t2,t3;
CREATE TABLE C(a int);
INSERT INTO C VALUES(1),(2),(3),(4),(5);
CREATE TABLE D (a int(11), b varchar(1));
INSERT INTO D VALUES (6,'r'),(27,'o');
CREATE TABLE E (a int(11) primary key, b varchar(1));
INSERT INTO E VALUES (14,'d'),(15,'z'),(16,'e'),(17,'h'),(18,'b'),(19,'s'),(20,'e'),(21,'j'),(22,'e'),(23,'f'),(24,'v'),(25,'x'),(26,'m'),(27,'c');
SELECT 1 FROM C,D,E WHERE D.a = E.a AND D.b = E.b;
DROP TABLE C,D,E;
CREATE TABLE t1 (a int);
INSERT INTO t1 VALUES (2);
CREATE TABLE t2 (a varchar(10));
INSERT INTO t2 VALUES ('f'),('x');
CREATE TABLE t3 (pk int(11) PRIMARY KEY);
INSERT INTO t3 VALUES (2);
CREATE TABLE t4 (a varchar(10));
ANALYZE TABLE t1, t2, t3, t4;
EXPLAIN SELECT 1 FROM t2 LEFT JOIN ((t1 JOIN t3 ON t1.a = t3.pk) LEFT JOIN t4 ON 1 ) ON 1 ;
SELECT 1 FROM t2 LEFT JOIN ((t1 JOIN t3 ON t1.a = t3.pk) LEFT JOIN t4 ON 1 ) ON 1 ;
DROP TABLE t1,t2,t3,t4;
CREATE TABLE t1 ( carrier int, id int PRIMARY KEY );
INSERT INTO t1 VALUES (1,11),(1,12),(2,13);
CREATE TABLE t2 ( scan_date int, package_id int );
INSERT INTO t2 VALUES (2008,21),(2008,22);
CREATE TABLE t3 ( carrier int PRIMARY KEY, id int );
INSERT INTO t3 VALUES (1,31);
CREATE TABLE t4 ( carrier_id int, INDEX carrier_id(carrier_id) );
INSERT INTO t4 VALUES (31),(32);
ANALYZE TABLE t1, t2, t3, t4;
SELECT COUNT(*) FROM (t2 JOIN t1) LEFT JOIN (t3 JOIN t4 ON t3.id = t4.carrier_id) ON t3.carrier = t1.carrier;
EXPLAIN SELECT COUNT(*) FROM (t2 JOIN t1) LEFT JOIN (t3 JOIN t4 ON t3.id = t4.carrier_id) ON t3.carrier = t1.carrier;
DROP TABLE t1,t2,t3,t4;
CREATE TABLE t1 ( `pk` int(11) NOT NULL AUTO_INCREMENT PRIMARY KEY );
CREATE TABLE t3 ( `pk` int(11) NOT NULL AUTO_INCREMENT PRIMARY KEY );
INSERT INTO t3 VALUES (1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15), (16),(17),(18),(19),(20);
CREATE TABLE t2 ( `pk` int(11) NOT NULL AUTO_INCREMENT, `int_nokey` int(11) NOT NULL, `time_key` time NOT NULL, PRIMARY KEY (`pk`), KEY `time_key` (`time_key`) );
INSERT INTO t2 VALUES (10,9,'22:36:46'),(11,0,'08:46:46');
SELECT DISTINCT t1.`pk` FROM t1 RIGHT JOIN t2 STRAIGHT_JOIN t3 ON t2.`int_nokey`  ON t2.`time_key` GROUP BY 1;
DROP TABLE IF EXISTS t1, t2, t3;
CREATE TABLE t1 (b int);
INSERT INTO t1 VALUES (NULL),(3);
CREATE TABLE t2 (a int, b int, KEY (b));
INSERT INTO t2 VALUES (100,NULL),(150,200);
ANALYZE TABLE t1, t2;
EXPLAIN SELECT t2.a FROM t1 LEFT JOIN t2 FORCE INDEX (b) ON t2.b  = t1.b;
SELECT t2.a FROM t1 LEFT JOIN t2 FORCE INDEX (b) ON t2.b  = t1.b;
delete from t1;
INSERT INTO t1 VALUES (NULL),(NULL);
ANALYZE TABLE t1, t2;
EXPLAIN SELECT t2.a FROM t1 LEFT JOIN t2 FORCE INDEX (b) ON t2.b  = t1.b;
SELECT t2.a FROM t1 LEFT JOIN t2 FORCE INDEX (b) ON t2.b  = t1.b;
DROP TABLE t1,t2;
CREATE TABLE t1 (b varchar(100));
INSERT INTO t1 VALUES (NULL),("some varchar");
CREATE TABLE t2 (a int, b varchar(100), KEY (b));
INSERT INTO t2 VALUES (100,NULL),(150,"varchar"),(200,NULL),(250,"long long varchar");
ANALYZE TABLE t1, t2;
explain SELECT t2.a FROM t1 LEFT JOIN t2 ON t2.b  = t1.b;
SELECT t2.a FROM t1 LEFT JOIN t2 ON t2.b  = t1.b;
DROP TABLE t1,t2;
CREATE TABLE t1 ( `pk` int(11) NOT NULL, `col_int_key` int(11) DEFAULT NULL, `col_varchar_key` varchar(1) DEFAULT NULL, `col_varchar_nokey` varchar(1) DEFAULT NULL, KEY `col_varchar_key` (`col_varchar_key`,`col_int_key`)) ;
INSERT INTO t1 VALUES (4,9,'k','k');
INSERT INTO t1 VALUES (12,5,'k','k');
ANALYZE TABLE t1;
explain SELECT table2 .`col_int_key` FROM t1 table2, t1 table3 force index (`col_varchar_key`) where table3 .`pk` and table3 .`col_int_key`  >= table2 .`pk`   and table3 .`col_varchar_key`  = table2 .`col_varchar_nokey`;
SELECT table2 .`col_int_key` FROM t1 table2, t1 table3 force index (`col_varchar_key`) where table3 .`pk` and table3 .`col_int_key`  >= table2 .`pk`   and table3 .`col_varchar_key`  = table2 .`col_varchar_nokey`;
drop table t1;
set @previous_sql_mode_htnt542nh=@@sql_mode;
set sql_mode=(select replace(@@sql_mode,'ONLY_FULL_GROUP_BY',''));
CREATE TABLE t1 ( `col_int_key` int, `col_datetime` datetime, KEY `col_int_key` (`col_int_key`) );
INSERT INTO t1 VALUES (2,'2003-02-11 21:19:41');
INSERT INTO t1 VALUES (3,'2009-10-18 02:27:49');
INSERT INTO t1 VALUES (0,'2000-09-26 07:45:57');
INSERT INTO t1 VALUES (4,'2000-09-26 07:45:57');
CREATE TABLE t2 ( `col_int` int, `col_int_key` int, KEY `col_int_key` (`col_int_key`) );
INSERT INTO t2 VALUES (14,1);
INSERT INTO t2 VALUES (98,1);
ANALYZE TABLE t1, t2;
explain SELECT t1.col_int_key, t1.col_datetime  FROM t1,t2 WHERE t2.col_int_key = 1 AND t2.col_int >= 3 GROUP BY t1.col_int_key ORDER BY t1.col_int_key, t1.col_datetime LIMIT 2;
SELECT t1.col_int_key, t1.col_datetime  FROM t1,t2 WHERE t2.col_int_key = 1 AND t2.col_int >= 3 GROUP BY t1.col_int_key ORDER BY t1.col_int_key, t1.col_datetime LIMIT 2;
ANALYZE TABLE t1, t2;
explain SELECT t1.col_int_key, t1.col_datetime  FROM t1 force index (col_int_key), t2 ignore index (col_int_key) WHERE t2.col_int_key = 1 AND t2.col_int >= 3 GROUP BY t1.col_int_key ORDER BY t1.col_int_key, t1.col_datetime LIMIT 2;
SELECT t1.col_int_key, t1.col_datetime  FROM t1 force index (col_int_key), t2 ignore index (col_int_key) WHERE t2.col_int_key = 1 AND t2.col_int >= 3 GROUP BY t1.col_int_key ORDER BY t1.col_int_key, t1.col_datetime LIMIT 2;
drop table t1,t2;
set @@sql_mode=@previous_sql_mode_htnt542nh;
CREATE TABLE t1 ( b varchar(20) )  ;
INSERT INTO t1 VALUES ('1'),('1');
CREATE TABLE t4 ( col253 text )  ;
INSERT INTO t4 VALUES (''),('pf');
CREATE TABLE t6 ( col282 timestamp )  ;
INSERT INTO t6 VALUES ('2010-11-07 01:04:45'),('2010-12-13 01:36:32');
CREATE TABLE t7 ( col319 timestamp NOT NULL, UNIQUE KEY idx263 (col319) )  ;
insert into t7 values("2000-01-01"),("2000-01-02");
CREATE TABLE t3 ( col582 char(230) CHARACTER SET utf8 DEFAULT NULL )  ;
INSERT INTO t3 VALUES ('cymej'),('spb');
CREATE TABLE t5 ( col712 time )  ;
insert into t5 values(0),(0);
CREATE TABLE t8 ( col804 char(169), col805 varchar(51) )  ;
INSERT INTO t8 VALUES ('tmqcb','pwk');
CREATE TABLE t2 ( col841 varchar(10) )  ;
INSERT INTO t2 VALUES (''),('');
set join_buffer_size=1;
select @@join_buffer_size;
select count(*) from (t1 join t2 join t3) left join t4 on 1 left join t5 on 1 like t4.col253 left join t6 on t5.col712 is null left join t7 on t1.b <=>t7.col319 left join t8 on t3.col582 <=  1;
drop table t1,t2,t3,t4,t5,t6,t7,t8;
CREATE TABLE t1 (t1a int, t1b int);
INSERT INTO t1 VALUES (99, NULL),(99, 3),(99,0);
CREATE TABLE t2 (t2a int, t2b int, KEY idx (t2b));
INSERT INTO t2 VALUES (100,0),(150,200),(999, 0),(999, NULL);
ANALYZE TABLE t1, t2;
EXPLAIN SELECT * FROM t1 LEFT JOIN t2 force index (idx) ON t2.t2b = t1.t1b;
SELECT * FROM t1 LEFT JOIN t2 force index (idx) ON t2.t2b = t1.t1b;
EXPLAIN SELECT * FROM t1 LEFT JOIN t2 force index (idx) ON t2.t2b <=> t1.t1b;
SELECT * FROM t1 LEFT JOIN t2 force index (idx) ON t2.t2b <=> t1.t1b;
DROP TABLE t2;
CREATE TABLE t2 (t2a int, t2b int NOT NULL, KEY idx (t2b));
INSERT INTO t2 VALUES (100,0),(150,200),(999, 0);
ANALYZE TABLE t2;
EXPLAIN SELECT * FROM t1 LEFT JOIN t2 force index (idx) ON t2.t2b = t1.t1b;
SELECT * FROM t1 LEFT JOIN t2 force index (idx) ON t2.t2b = t1.t1b;
EXPLAIN SELECT * FROM t1 LEFT JOIN t2 force index (idx) ON t2.t2b <=> t1.t1b;
SELECT * FROM t1 LEFT JOIN t2 force index (idx) ON t2.t2b <=> t1.t1b;
DROP TABLE t1,t2;
CREATE TABLE t1 ( c1 INTEGER NOT NULL, c2_key INTEGER NOT NULL, KEY col_int_key (c2_key) ) ENGINE=InnoDB;
INSERT INTO t1 VALUES (24,204);
CREATE TABLE t2 (   pk INTEGER NOT NULL, PRIMARY KEY (pk) ) ENGINE=InnoDB;
INSERT INTO t2 VALUES (10);
CREATE TABLE t3 ( c1 INTEGER, KEY k1 (c1) ) ENGINE=InnoDB;
INSERT INTO t3 VALUES (NULL), (NULL);
set @old_opt_switch=@@optimizer_switch;
set optimizer_switch='materialization=off';
ANALYZE TABLE t1, t2, t3;
explain format=tree SELECT t3.c1 FROM t3 WHERE t3.c1 = SOME (SELECT t1.c2_key FROM t2 JOIN t1 ON t2.pk < t1.c1) XOR TRUE;
explain SELECT t3.c1 FROM t3 WHERE t3.c1 = SOME (SELECT t1.c2_key FROM t2 JOIN t1 ON t2.pk < t1.c1) XOR TRUE;
explain SELECT t3.c1 FROM t3 WHERE t3.c1 = ANY (SELECT t1.c2_key FROM t2 JOIN t1 ON t2.pk < t1.c1) XOR TRUE;
explain SELECT t3.c1 FROM t3 WHERE t3.c1 IN (SELECT t1.c2_key FROM t2 JOIN t1 ON t2.pk < t1.c1) XOR TRUE;
explain SELECT t3.c1 FROM t3 WHERE t3.c1 NOT IN (SELECT t1.c2_key FROM t2 JOIN t1 ON t2.pk < t1.c1);
explain SELECT t3.c1 FROM t3 WHERE t3.c1 IN (SELECT t1.c2_key FROM t2 JOIN t1 ON t2.pk < t1.c1);
SELECT t3.c1 FROM t3 WHERE t3.c1 = SOME (SELECT t1.c2_key FROM t2 JOIN t1 ON t2.pk < t1.c1) XOR TRUE;
SELECT t3.c1 FROM t3 WHERE t3.c1 = ANY (SELECT t1.c2_key FROM t2 JOIN t1 ON t2.pk < t1.c1) XOR TRUE;
SELECT t3.c1 FROM t3 WHERE t3.c1 IN (SELECT t1.c2_key FROM t2 JOIN t1 ON t2.pk < t1.c1) XOR TRUE;
SELECT t3.c1 FROM t3 WHERE t3.c1 NOT IN (SELECT t1.c2_key FROM t2 JOIN t1 ON t2.pk < t1.c1);
SELECT t3.c1 FROM t3 WHERE t3.c1 IN (SELECT t1.c2_key FROM t2 JOIN t1 ON t2.pk < t1.c1);
set @@optimizer_switch=@old_opt_switch;
DROP TABLE t1, t2, t3;
set @@join_buffer_size=default;
CREATE TABLE t1 (  col_int_key int(11) NOT NULL, col_varchar_key varchar(1) NOT NULL,     KEY col_int_key (col_int_key), KEY col_varchar_key (col_varchar_key,col_int_key) ) ENGINE=innodb;
INSERT INTO t1 VALUES (0,'j'),(4,'b'),(4,'d');
CREATE TABLE t2 ( col_datetime_key datetime NOT NULL, col_varchar_key varchar(1) NOT NULL, KEY col_varchar_key (col_varchar_key) ) ENGINE=innodb;
INSERT INTO t2 VALUES ('2003-08-21 00:00:00','b');
ANALYZE TABLE t1;
ANALYZE TABLE t2;
explain SELECT MIN(t2.col_datetime_key) AS field1, t1.col_int_key AS field2   FROM t1 LEFT JOIN t2 force index (col_varchar_key) ON t1.col_varchar_key = t2.col_varchar_key   GROUP BY field2 ORDER BY field1;
SELECT MIN(t2.col_datetime_key) AS field1, t1.col_int_key AS field2   FROM t1 LEFT JOIN t2 force index (col_varchar_key) ON t1.col_varchar_key = t2.col_varchar_key   GROUP BY field2 ORDER BY field1;
DROP TABLE t1,t2;
CREATE TABLE t1 ( col_int_key int(11) NOT NULL, col_datetime_key datetime NOT NULL, col_varchar_nokey varchar(1) NOT NULL, KEY col_int_key (col_int_key), KEY col_datetime_key (col_datetime_key) );
INSERT INTO t1 VALUES (7,'2004-06-06 04:22:12','v');
INSERT INTO t1 VALUES (0,'2005-11-13 01:12:31','s');
INSERT INTO t1 VALUES (9,'2002-05-04 01:50:00','l');
INSERT INTO t1 VALUES (3,'2004-10-27 10:28:45','y');
INSERT INTO t1 VALUES (4,'2006-07-22 05:24:23','c');
INSERT INTO t1 VALUES (2,'2002-05-16 21:34:03','i');
INSERT INTO t1 VALUES (5,'2008-04-17 10:45:30','h');
INSERT INTO t1 VALUES (3,'2009-04-21 02:58:02','q');
INSERT INTO t1 VALUES (1,'2008-01-11 11:01:51','a');
INSERT INTO t1 VALUES (3,'1900-01-01 00:00:00','v');
INSERT INTO t1 VALUES (6,'2007-05-17 18:24:57','u');
INSERT INTO t1 VALUES (7,'2007-08-07 00:00:00','s');
INSERT INTO t1 VALUES (5,'2001-08-28 00:00:00','y');
INSERT INTO t1 VALUES (1,'2004-04-16 00:27:28','z');
INSERT INTO t1 VALUES (204,'2005-05-03 07:06:22','h');
INSERT INTO t1 VALUES (224,'2009-03-11 17:09:50','p');
INSERT INTO t1 VALUES (9,'2007-12-08 01:54:28','e');
INSERT INTO t1 VALUES (5,'2009-07-28 18:19:54','i');
INSERT INTO t1 VALUES (0,'2008-06-08 00:00:00','y');
INSERT INTO t1 VALUES (3,'2005-02-09 09:20:26','w');
CREATE TABLE t2 ( pk int(11) NOT NULL, col_varchar_key varchar(1) NOT NULL, PRIMARY KEY (pk) );
INSERT INTO t2 VALUES (1,'j'),(2,'v'),(3,'c'),(4,'m'),(5,'d'),(6,'d'),(7,'y'), (8,'t'),(9,'d'),(10,'s'),(11,'r'),(12,'m'),(13,'b'),(14,'x'), (15,'g'),(16,'p'),(17,'q'),(18,'w'),(19,'d'),(20,'e');
ANALYZE TABLE t1, t2;
set @previous_sql_mode_htnt542nh=@@sql_mode;
set sql_mode=(select replace(@@sql_mode,'ONLY_FULL_GROUP_BY',''));
explain SELECT t2.col_varchar_key AS field1 , COUNT(DISTINCT t1.col_varchar_nokey), t2.pk AS field4 FROM t1 RIGHT JOIN t2 ON t2.pk = t1.col_int_key  GROUP BY field1 , field4  ORDER BY t1.col_datetime_key ;
SELECT t2.col_varchar_key AS field1 , COUNT(DISTINCT t1.col_varchar_nokey), t2.pk AS field4 FROM t1 RIGHT JOIN t2 ON t2.pk = t1.col_int_key  GROUP BY field1 , field4  ORDER BY t1.col_datetime_key ;
set @@sql_mode=@previous_sql_mode_htnt542nh;
DROP TABLE t1,t2;
CREATE TABLE t1 (col_varchar_key varchar(1));
CREATE TABLE t2 ( pk int(11) NOT NULL, col_int_nokey int(11) NOT NULL, col_int_key int(11) NOT NULL, PRIMARY KEY (pk), KEY col_int_key (col_int_key) );
INSERT INTO t2 VALUES (5,3,9);
INSERT INTO t2 VALUES (6,246,24);
INSERT INTO t2 VALUES (7,2,6);
INSERT INTO t2 VALUES (8,9,1);
INSERT INTO t2 VALUES (9,3,6);
INSERT INTO t2 VALUES (10,8,2);
INSERT INTO t2 VALUES (11,1,4);
INSERT INTO t2 VALUES (12,8,8);
INSERT INTO t2 VALUES (13,8,4);
INSERT INTO t2 VALUES (14,5,4);
INSERT INTO t2 VALUES (15,7,7);
INSERT INTO t2 VALUES (16,5,4);
INSERT INTO t2 VALUES (17,1,1);
INSERT INTO t2 VALUES (18,6,9);
INSERT INTO t2 VALUES (19,2,4);
INSERT INTO t2 VALUES (20,9,8);
ANALYZE TABLE t1, t2;
ANALYZE TABLE t1, t2, t3, t4;
explain SELECT t1.col_varchar_key AS field1, alias2.col_int_key AS field4  FROM t2 AS alias2 STRAIGHT_JOIN t2 AS alias3 ON alias3.pk = alias2.col_int_nokey  left join t1  ON alias3.col_int_nokey  GROUP BY field1, field4 LIMIT 15;
SELECT t1.col_varchar_key AS field1, alias2.col_int_key AS field4  FROM t2 AS alias2 STRAIGHT_JOIN t2 AS alias3 ON alias3.pk = alias2.col_int_nokey  left join t1  ON alias3.col_int_nokey  GROUP BY field1, field4 LIMIT 15;
DROP TABLE t1,t2;
CREATE TABLE t1 (pk INTEGER PRIMARY KEY, k INTEGER, i INTEGER, KEY k(k));
CREATE TABLE t2 LIKE t1;
CREATE TABLE t3 LIKE t1;
CREATE TABLE t4 LIKE t1;
INSERT INTO t1 VALUES (6,NULL,6),(0,1,11);
INSERT INTO t2 VALUES (1,NULL,NULL),(4,7,NULL);
INSERT INTO t3 VALUES (2,3,0),(3,4,4);
INSERT INTO t4 VALUES (1,9,-1),(4,7,NULL);
ANALYZE TABLE t1, t2, t3, t4;
EXPLAIN SELECT t2.pk as t2_pk, t4.pk as t4_pk, t4.k as t4_k, t4.i as t4_i FROM t1 LEFT JOIN t2 ON t1.k = t2.pk LEFT JOIN t3 ON t3.i LEFT JOIN t4 ON t4.pk = t2.pk;
SELECT t2.pk as t2_pk, t4.pk as t4_pk, t4.k as t4_k, t4.i as t4_i FROM t1 LEFT JOIN t2 ON t1.k = t2.pk LEFT JOIN t3 ON t3.i LEFT JOIN t4 ON t4.pk = t2.pk;
DROP TABLE t1, t2, t3, t4;
CREATE TABLE t1 ( col_int INTEGER );
INSERT INTO t1 VALUES (3), (7), (2), (8), (6);
CREATE TABLE t2 ( pk INTEGER,  col_int INTEGER, PRIMARY KEY (pk) );
INSERT INTO t2 VALUES (1,5), (2,8), (6,3), (8,7), (9,9);
CREATE TABLE t3 ( pk INTEGER,  col_int INTEGER,  PRIMARY KEY (pk) );
INSERT INTO t3 VALUES (3,2), (4,3), (8,2);
CREATE TABLE t4 ( pk INTEGER, col_int INTEGER, PRIMARY KEY (pk) );
INSERT INTO t4 VALUES (2,3), (6,1), (8,2);
ANALYZE TABLE t2, t3, t4;
EXPLAIN SELECT t4.col_int FROM t1  LEFT JOIN t2 ON t1.col_int = t2.col_int LEFT JOIN t3 ON t2.pk = t3.pk  LEFT JOIN t4 ON t4.pk = t2.pk WHERE t1.col_int OR t3.col_int;
SELECT t4.col_int FROM t1  LEFT JOIN t2 ON t1.col_int = t2.col_int LEFT JOIN t3 ON t2.pk = t3.pk  LEFT JOIN t4 ON t4.pk = t2.pk WHERE t1.col_int OR t3.col_int;
DROP TABLE t1, t2, t3, t4;
CREATE TABLE t1 ( col1 varchar(10), col2 varchar(1024) ) ENGINE=innodb;
INSERT INTO t1 VALUES ('a','a');
CREATE TABLE t2 (i varchar(10)) ENGINE=innodb;
INSERT INTO t2 VALUES ('a');
set @previous_sql_mode_htnt542nh=@@sql_mode;
set sql_mode=(select replace(@@sql_mode,'ONLY_FULL_GROUP_BY',''));
SELECT t1.col1 FROM t1 JOIN t2 ON t1.col1 = t2.i  GROUP BY t1.col2;
set @@sql_mode=@previous_sql_mode_htnt542nh;
DROP TABLE t1,t2;
CREATE TABLE t1 (   col_int_nokey int );
INSERT INTO t1 VALUES(-1),(-1);
CREATE TABLE t2 ( col_int_nokey int, col_datetime_nokey datetime NOT NULL, col_varchar_key varchar(1), KEY col_varchar_key (col_varchar_key) );
INSERT INTO t2 VALUES (9, '2002-08-25 20:35:06', 'e'), (9, '2002-08-25 20:35:06', 'e');
set @optimizer_switch_saved=@@session.optimizer_switch;
set @@session.optimizer_switch='semijoin=off';
ANALYZE TABLE t1, t2;
EXPLAIN SELECT parent1.col_varchar_key FROM t2 AS parent1 LEFT JOIN t1 USING (col_int_nokey) WHERE parent1.col_varchar_key IN ( SELECT col_varchar_key FROM t2 AS child1 WHERE parent1.col_datetime_nokey IS NULL AND t1.col_int_nokey IS NULL ) ;
SELECT parent1.col_varchar_key FROM t2 AS parent1 LEFT JOIN t1 USING (col_int_nokey) WHERE parent1.col_varchar_key IN ( SELECT col_varchar_key FROM t2 AS child1 WHERE parent1.col_datetime_nokey IS NULL AND t1.col_int_nokey IS NULL ) ;
set @@session.optimizer_switch=@optimizer_switch_saved;
DROP TABLE t1,t2;
CREATE TABLE t1 ( col_varchar_10_unique varchar(10) ) ENGINE=innodb;
INSERT INTO t1 VALUES ('nthfyejwxd');
INSERT INTO t1 VALUES ('drrqahbhai');
CREATE TABLE t3 ( col_int int(11) NOT NULL, col_int_unique int(11) not null, col_varchar_10 varchar(10) not null ) ENGINE=innodb;
INSERT INTO t3 VALUES(9, 4, '');
CREATE TABLE t4 ( col_int_unique int(11) ) ENGINE=innodb;
INSERT INTO t4 VALUES(3);
CREATE TABLE t2 ( col_int int(11) ) ENGINE=innodb;
ANALYZE TABLE t1, t2;
EXPLAIN SELECT * FROM t1 AS table1 WHERE table1.col_varchar_10_unique = ALL ( SELECT STRAIGHT_JOIN table3s.col_varchar_10 AS field3 FROM t4 AS table4s LEFT JOIN (t3 AS table3s JOIN t2 AS table2s) ON table3s.col_int_unique = table4s.col_int_unique);
SELECT * FROM t1 AS table1 WHERE table1.col_varchar_10_unique = ALL ( SELECT STRAIGHT_JOIN table3s.col_varchar_10 AS field3 FROM t4 AS table4s LEFT JOIN (t3 AS table3s JOIN t2 AS table2s) ON table3s.col_int_unique = table4s.col_int_unique);
DROP TABLE t1,t2,t3,t4;
CREATE TABLE t1 ( pk integer NOT NULL, a integer, b integer, PRIMARY KEY (pk), KEY idx1 (b) ) ENGINE=InnoDB;
INSERT INTO t1 VALUES (1,5,5);
ANALYZE TABLE t1;
EXPLAIN FORMAT=tree SELECT * FROM t1 LEFT JOIN t1 AS t2 ON t1.a = t2.pk LEFT JOIN t1 AS t3 ON t2.pk = t3.pk LEFT JOIN t1 AS t4 ON t3.b = t4.b WHERE t2.pk = 1;
DROP TABLE t1;
set optimizer_switch = default;
